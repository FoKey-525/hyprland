import{_ as _export_sfc,q as defineComponent,P as ref,J as openBlock,y as createElementBlock,z as createBaseVNode,T as toDisplayString,B as createVNode,ab as _sfc_main$2,a4 as normalizeClass,r as useTranslation_1,u as userStore,n as notificationStore,ak as computed,V as unref,k as first,af as NotificationType}from"./popup.71dac307.js";import{r as required,e as email,u as useVuelidate,b as createI18nMessage}from"./index.esm.4cb2c7eb.js";import{S as Square}from"./Square.f1df5856.js";import{S as ScreenUpper}from"./Screen.014b641c.js";import{i as setEmail}from"./user.c5d689ac.js";const _hoisted_1$1={class:"submit"},_hoisted_2$1={class:"title"};var Submit=_export_sfc(defineComponent({__name:"Submit",props:{title:{type:String,required:!0},locked:{type:Boolean,default:!1},image:{type:String,required:!0},placeholder:{type:String,required:!0},value:{type:String,default:""}},emits:["changeValue","submit"],setup(__props,{expose:expose,emit:emit}){const props=__props,$button=ref(null),changeValue=value=>emit("changeValue",value),submit=()=>emit("submit");return expose({setLoader:value=>{var _a;return null==(_a=$button.value)?void 0:_a.setLoader(value)}}),(_ctx,_cache)=>(openBlock(),createElementBlock("div",_hoisted_1$1,[createBaseVNode("div",_hoisted_2$1,toDisplayString(props.title),1),createBaseVNode("div",{class:normalizeClass(["content",{locked:props.locked}])},[createVNode(_sfc_main$2,{placeholder:props.placeholder,image:props.image,value:props.value,onChangeValue:changeValue},null,8,["placeholder","image","value"]),createVNode(Square,{ref_key:"$button",ref:$button,image:"other/mark.svg",onClick:submit},null,512)],2)]))}}),[["__scopeId","data-v-4647aad8"]]);const _hoisted_1={class:"list"},_hoisted_2={class:"point"};var SettingsAccount=_export_sfc(defineComponent({__name:"SettingsAccount",setup(__props){const{t:t}=useTranslation_1(),withI18nMessage=createI18nMessage({t:t}),user=userStore(),notification=notificationStore(),$submitEmail=ref(null),loading=ref(!1),email$1=ref(""),rulesRestore={email:{required:withI18nMessage(required,{messagePath:()=>"settingsAccount.validation.email.required"}),email:withI18nMessage(email,{messagePath:()=>"settingsAccount.validation.email.email"})}},vRestore$=useVuelidate(rulesRestore,{email:email$1}),finalEmail=computed((()=>user.email||email$1.value)),emailLocked=computed((()=>null!==user.email&&!!user.email)),setEmail$1=value=>email$1.value=value,submitEmail=async()=>{if(vRestore$.value.$touch(),vRestore$.value.$error){const error=first(vRestore$.value.$errors);notification.add(NotificationType.ERROR,error.$message,!1)}else loading.value=!0,$submitEmail.value.setLoader(!0),await setEmail(email$1.value),loading.value=!1,$submitEmail.value.setLoader(!1)};return(_ctx,_cache)=>(openBlock(),createElementBlock("div",{class:normalizeClass(["settings-account",{disable:loading.value}])},[createVNode(ScreenUpper,{title:unref(t)("settingsAccount.title")},null,8,["title"]),createBaseVNode("div",_hoisted_1,[createBaseVNode("div",_hoisted_2,[createVNode(Submit,{ref_key:"$submitEmail",ref:$submitEmail,value:unref(finalEmail),title:unref(t)("settingsAccount.setEmail.title"),image:"settings/mail.svg",placeholder:unref(t)("settingsAccount.setEmail.input"),locked:unref(emailLocked),onChangeValue:setEmail$1,onSubmit:submitEmail},null,8,["value","title","placeholder","locked"])])])],2))}}),[["__scopeId","data-v-53078258"]]);export{SettingsAccount as default};
