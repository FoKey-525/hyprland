import{a as bridgePopupBackground,U as UserEvents,b as bridgePopupSandbox}from"./popup.71dac307.js";function registerUser(){return bridgePopupBackground.emit(UserEvents.RegisterUser.Name)}function login(value){return bridgePopupBackground.emit(UserEvents.Login.Name,{value:value})}async function logout(){await bridgePopupBackground.emit(UserEvents.Logout.Name)}async function getUser(refreshable=!0){await bridgePopupBackground.emit(UserEvents.GetUser.Name,{refreshable:refreshable})}function useOtp(value){return bridgePopupBackground.emit(UserEvents.UseOtp.Name,{value:value})}async function createOtp(refreshable=!0){await bridgePopupBackground.emit(UserEvents.CreateOtp.Name,{refreshable:refreshable})}async function authorization(){await bridgePopupBackground.emit(UserEvents.Authorization.Name)}async function restoreUser(email){await bridgePopupBackground.emit(UserEvents.RestoreUser.Name,{email:email})}async function setEmail(email){await bridgePopupBackground.emit(UserEvents.SetEmail.Name,{email:email})}const existsUser=async()=>bridgePopupSandbox.emit(UserEvents.ExistsUser.Name),findUser=async()=>bridgePopupSandbox.emit(UserEvents.FindUser.Name),remove=async value=>bridgePopupSandbox.emit(UserEvents.Remove.Name,{value:value}),save=async value=>bridgePopupSandbox.emit(UserEvents.Save.Name,{value:value});export{authorization as a,registerUser as b,createOtp as c,restoreUser as d,existsUser as e,findUser as f,getUser as g,logout as h,setEmail as i,login as l,remove as r,save as s,useOtp as u};
