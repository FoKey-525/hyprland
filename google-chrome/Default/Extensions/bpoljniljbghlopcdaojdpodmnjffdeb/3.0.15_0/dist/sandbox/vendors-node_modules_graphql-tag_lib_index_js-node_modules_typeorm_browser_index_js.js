/*! For license information please see vendors-node_modules_graphql-tag_lib_index_js-node_modules_typeorm_browser_index_js.js.LICENSE.txt */
(self.webpackChunk_4ebur_net=self.webpackChunk_4ebur_net||[]).push([["vendors-node_modules_graphql-tag_lib_index_js-node_modules_typeorm_browser_index_js"],{9435:e=>{var t=1e3,n=60*t,a=60*n,i=24*a,s=7*i,r=365.25*i;function o(e,t,n,a){var i=t>=1.5*n;return Math.round(e/n)+" "+a+(i?"s":"")}e.exports=function(e,c){c=c||{};var l=typeof e;if("string"===l&&e.length>0)return function(e){if((e=String(e)).length>100)return;var o=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!o)return;var c=parseFloat(o[1]);switch((o[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return c*r;case"weeks":case"week":case"w":return c*s;case"days":case"day":case"d":return c*i;case"hours":case"hour":case"hrs":case"hr":case"h":return c*a;case"minutes":case"minute":case"mins":case"min":case"m":return c*n;case"seconds":case"second":case"secs":case"sec":case"s":return c*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}(e);if("number"===l&&isFinite(e))return c.long?function(e){var s=Math.abs(e);if(s>=i)return o(e,s,i,"day");if(s>=a)return o(e,s,a,"hour");if(s>=n)return o(e,s,n,"minute");if(s>=t)return o(e,s,t,"second");return e+" ms"}(e):function(e){var s=Math.abs(e);if(s>=i)return Math.round(e/i)+"d";if(s>=a)return Math.round(e/a)+"h";if(s>=n)return Math.round(e/n)+"m";if(s>=t)return Math.round(e/t)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},1227:(e,t,n)=>{t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(i=a))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e="MISSING_ENV_VAR".DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0)}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(2447)(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},2447:(e,t,n)=>{e.exports=function(e){function t(e){let n,i,s,r=null;function o(...e){if(!o.enabled)return;const a=o,i=Number(new Date),s=i-(n||i);a.diff=s,a.prev=n,a.curr=i,n=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,i)=>{if("%%"===n)return"%";r++;const s=t.formatters[i];if("function"==typeof s){const t=e[r];n=s.call(a,t),e.splice(r,1),r--}return n})),t.formatArgs.call(a,e);(a.log||t.log).apply(a,e)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=a,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(i!==t.namespaces&&(i=t.namespaces,s=t.enabled(e)),s),set:e=>{r=e}}),"function"==typeof t.init&&t.init(o),o}function a(e,n){const a=t(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function i(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(i),...t.skips.map(i).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"==typeof e?e:"").split(/[\s,]+/),i=a.length;for(n=0;n<i;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(9435),t.destroy=function(){},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},4333:(e,t,n)=>{"use strict";n.d(t,{ZP:()=>ae});var a=function(){return a=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},a.apply(this,arguments)};Object.create;Object.create;function i(e,t){if(!Boolean(e))throw new Error(null!=t?t:"Unexpected invariant triggered.")}const s=/\r\n|[\n\r]/g;function r(e,t){let n=0,a=1;for(const r of e.body.matchAll(s)){if("number"==typeof r.index||i(!1),r.index>=t)break;n=r.index+r[0].length,a+=1}return{line:a,column:t+1-n}}function o(e,t){const n=e.locationOffset.column-1,a="".padStart(n)+e.body,i=t.line-1,s=e.locationOffset.line-1,r=t.line+s,o=1===t.line?n:0,l=t.column+o,u=`${e.name}:${r}:${l}\n`,h=a.split(/\r\n|[\n\r]/g),d=h[i];if(d.length>120){const e=Math.floor(l/80),t=l%80,n=[];for(let e=0;e<d.length;e+=80)n.push(d.slice(e,e+80));return u+c([[`${r} |`,n[0]],...n.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",n[e+1]]])}return u+c([[r-1+" |",h[i-1]],[`${r} |`,d],["|","^".padStart(l)],[`${r+1} |`,h[i+1]]])}function c(e){const t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(n)+(t?" "+t:""))).join("\n")}class GraphQLError extends Error{constructor(e,...t){var n,a,i;const{nodes:s,source:o,positions:c,path:u,originalError:h,extensions:d}=function(e){const t=e[0];return null==t||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}(t);super(e),this.name="GraphQLError",this.path=null!=u?u:void 0,this.originalError=null!=h?h:void 0,this.nodes=l(Array.isArray(s)?s:s?[s]:void 0);const p=l(null===(n=this.nodes)||void 0===n?void 0:n.map((e=>e.loc)).filter((e=>null!=e)));this.source=null!=o?o:null==p||null===(a=p[0])||void 0===a?void 0:a.source,this.positions=null!=c?c:null==p?void 0:p.map((e=>e.start)),this.locations=c&&o?c.map((e=>r(o,e))):null==p?void 0:p.map((e=>r(e.source,e.start)));const m="object"==typeof(y=null==h?void 0:h.extensions)&&null!==y?null==h?void 0:h.extensions:void 0;var y;this.extensions=null!==(i=null!=d?d:m)&&void 0!==i?i:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=h&&h.stack?Object.defineProperty(this,"stack",{value:h.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,GraphQLError):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(e+="\n\n"+o((t=n.loc).source,r(t.source,t.start)));else if(this.source&&this.locations)for(const t of this.locations)e+="\n\n"+o(this.source,t);var t;return e}toJSON(){const e={message:this.message};return null!=this.locations&&(e.locations=this.locations),null!=this.path&&(e.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(e.extensions=this.extensions),e}}function l(e){return void 0===e||0===e.length?void 0:e}function u(e,t,n){return new GraphQLError(`Syntax Error: ${n}`,{source:e,positions:[t]})}class Location{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Token{constructor(e,t,n,a,i,s){this.kind=e,this.start=t,this.end=n,this.line=a,this.column=i,this.value=s,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}new Set(Object.keys({Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]}));let h,d,p,m;function y(e){return e>=48&&e<=57}function f(e){return e>=97&&e<=122||e>=65&&e<=90}function g(e){return f(e)||95===e}function E(e){return f(e)||y(e)||95===e}function T(e){var t;let n=Number.MAX_SAFE_INTEGER,a=null,i=-1;for(let t=0;t<e.length;++t){var s;const r=e[t],o=b(r);o!==r.length&&(a=null!==(s=a)&&void 0!==s?s:t,i=t,0!==t&&o<n&&(n=o))}return e.map(((e,t)=>0===t?e:e.slice(n))).slice(null!==(t=a)&&void 0!==t?t:0,i+1)}function b(e){let t=0;for(;t<e.length&&(9===(n=e.charCodeAt(t))||32===n);)++t;var n;return t}!function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"}(h||(h={})),function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"}(d||(d={})),function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"}(p||(p={})),function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"}(m||(m={}));class Lexer{constructor(e){const t=new Token(m.SOF,0,0,0,0);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){this.lastToken=this.token;return this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==m.EOF)do{if(e.next)e=e.next;else{const t=v(this,e.end);e.next=t,t.prev=e,e=t}}while(e.kind===m.COMMENT);return e}}function N(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function w(e,t){return C(e.charCodeAt(t))&&A(e.charCodeAt(t+1))}function C(e){return e>=55296&&e<=56319}function A(e){return e>=56320&&e<=57343}function M(e,t){const n=e.source.body.codePointAt(t);if(void 0===n)return m.EOF;if(n>=32&&n<=126){const e=String.fromCodePoint(n);return'"'===e?"'\"'":`"${e}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function R(e,t,n,a,i){const s=e.line,r=1+n-e.lineStart;return new Token(t,n,a,s,r,i)}function v(e,t){const n=e.source.body,a=n.length;let i=t;for(;i<a;){const t=n.charCodeAt(i);switch(t){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:10===n.charCodeAt(i+1)?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return S(e,i);case 33:return R(e,m.BANG,i,i+1);case 36:return R(e,m.DOLLAR,i,i+1);case 38:return R(e,m.AMP,i,i+1);case 40:return R(e,m.PAREN_L,i,i+1);case 41:return R(e,m.PAREN_R,i,i+1);case 46:if(46===n.charCodeAt(i+1)&&46===n.charCodeAt(i+2))return R(e,m.SPREAD,i,i+3);break;case 58:return R(e,m.COLON,i,i+1);case 61:return R(e,m.EQUALS,i,i+1);case 64:return R(e,m.AT,i,i+1);case 91:return R(e,m.BRACKET_L,i,i+1);case 93:return R(e,m.BRACKET_R,i,i+1);case 123:return R(e,m.BRACE_L,i,i+1);case 124:return R(e,m.PIPE,i,i+1);case 125:return R(e,m.BRACE_R,i,i+1);case 34:return 34===n.charCodeAt(i+1)&&34===n.charCodeAt(i+2)?q(e,i):P(e,i)}if(y(t)||45===t)return O(e,i,t);if(g(t))return j(e,i);throw u(e.source,i,39===t?"Unexpected single quote character ('), did you mean to use a double quote (\")?":N(t)||w(n,i)?`Unexpected character: ${M(e,i)}.`:`Invalid character: ${M(e,i)}.`)}return R(e,m.EOF,a,a)}function S(e,t){const n=e.source.body,a=n.length;let i=t+1;for(;i<a;){const e=n.charCodeAt(i);if(10===e||13===e)break;if(N(e))++i;else{if(!w(n,i))break;i+=2}}return R(e,m.COMMENT,t,i,n.slice(t+1,i))}function O(e,t,n){const a=e.source.body;let i=t,s=n,r=!1;if(45===s&&(s=a.charCodeAt(++i)),48===s){if(s=a.charCodeAt(++i),y(s))throw u(e.source,i,`Invalid number, unexpected digit after 0: ${M(e,i)}.`)}else i=x(e,i,s),s=a.charCodeAt(i);if(46===s&&(r=!0,s=a.charCodeAt(++i),i=x(e,i,s),s=a.charCodeAt(i)),69!==s&&101!==s||(r=!0,s=a.charCodeAt(++i),43!==s&&45!==s||(s=a.charCodeAt(++i)),i=x(e,i,s),s=a.charCodeAt(i)),46===s||g(s))throw u(e.source,i,`Invalid number, expected digit but got: ${M(e,i)}.`);return R(e,r?m.FLOAT:m.INT,t,i,a.slice(t,i))}function x(e,t,n){if(!y(n))throw u(e.source,t,`Invalid number, expected digit but got: ${M(e,t)}.`);const a=e.source.body;let i=t+1;for(;y(a.charCodeAt(i));)++i;return i}function P(e,t){const n=e.source.body,a=n.length;let i=t+1,s=i,r="";for(;i<a;){const a=n.charCodeAt(i);if(34===a)return r+=n.slice(s,i),R(e,m.STRING,t,i+1,r);if(92!==a){if(10===a||13===a)break;if(N(a))++i;else{if(!w(n,i))throw u(e.source,i,`Invalid character within String: ${M(e,i)}.`);i+=2}}else{r+=n.slice(s,i);const t=117===n.charCodeAt(i+1)?123===n.charCodeAt(i+2)?I(e,i):D(e,i):$(e,i);r+=t.value,i+=t.size,s=i}}throw u(e.source,i,"Unterminated string.")}function I(e,t){const n=e.source.body;let a=0,i=3;for(;i<12;){const e=n.charCodeAt(t+i++);if(125===e){if(i<5||!N(a))break;return{value:String.fromCodePoint(a),size:i}}if(a=a<<4|_(e),a<0)break}throw u(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function D(e,t){const n=e.source.body,a=L(n,t+2);if(N(a))return{value:String.fromCodePoint(a),size:6};if(C(a)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){const e=L(n,t+8);if(A(e))return{value:String.fromCodePoint(a,e),size:12}}throw u(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function L(e,t){return _(e.charCodeAt(t))<<12|_(e.charCodeAt(t+1))<<8|_(e.charCodeAt(t+2))<<4|_(e.charCodeAt(t+3))}function _(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function $(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw u(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function q(e,t){const n=e.source.body,a=n.length;let i=e.lineStart,s=t+3,r=s,o="";const c=[];for(;s<a;){const a=n.charCodeAt(s);if(34===a&&34===n.charCodeAt(s+1)&&34===n.charCodeAt(s+2)){o+=n.slice(r,s),c.push(o);const a=R(e,m.BLOCK_STRING,t,s+3,T(c).join("\n"));return e.line+=c.length-1,e.lineStart=i,a}if(92!==a||34!==n.charCodeAt(s+1)||34!==n.charCodeAt(s+2)||34!==n.charCodeAt(s+3))if(10!==a&&13!==a)if(N(a))++s;else{if(!w(n,s))throw u(e.source,s,`Invalid character within String: ${M(e,s)}.`);s+=2}else o+=n.slice(r,s),c.push(o),13===a&&10===n.charCodeAt(s+1)?s+=2:++s,o="",r=s,i=s;else o+=n.slice(r,s),r=s+1,s+=4}throw u(e.source,s,"Unterminated string.")}function j(e,t){const n=e.source.body,a=n.length;let i=t+1;for(;i<a;){if(!E(n.charCodeAt(i)))break;++i}return R(e,m.NAME,t,i,n.slice(t,i))}function B(e,t){if(!Boolean(e))throw new Error(t)}function U(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(function(e){return"function"==typeof e.toJSON}(e)){const t=e.toJSON();if(t!==e)return"string"==typeof t?t:U(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";const n=Math.min(10,e.length),a=e.length-n,i=[];for(let a=0;a<n;++a)i.push(U(e[a],t));1===a?i.push("... 1 more item"):a>1&&i.push(`... ${a} more items`);return"["+i.join(", ")+"]"}(e,n);return function(e,t){const n=Object.entries(e);if(0===n.length)return"{}";if(t.length>2)return"["+function(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){const t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]";const a=n.map((([e,n])=>e+": "+U(n,t)));return"{ "+a.join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}const F=function(e,t){return e instanceof t};class Source{constructor(e,t="GraphQL request",n={line:1,column:1}){var a;"string"==typeof e||B(!1,`Body must be a string. Received: ${a=e,U(a,[])}.`),this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||B(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||B(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}class Parser{constructor(e,t){const n=function(e){return F(e,Source)}(e)?e:new Source(e);this._lexer=new Lexer(n),this._options=t}parseName(){const e=this.expectToken(m.NAME);return this.node(e,{kind:p.NAME,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:p.DOCUMENT,definitions:this.many(m.SOF,this.parseDefinition,m.EOF)})}parseDefinition(){if(this.peek(m.BRACE_L))return this.parseOperationDefinition();const e=this.peekDescription(),t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===m.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e)throw u(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){const e=this._lexer.token;if(this.peek(m.BRACE_L))return this.node(e,{kind:p.OPERATION_DEFINITION,operation:h.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const t=this.parseOperationType();let n;return this.peek(m.NAME)&&(n=this.parseName()),this.node(e,{kind:p.OPERATION_DEFINITION,operation:t,name:n,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const e=this.expectToken(m.NAME);switch(e.value){case"query":return h.QUERY;case"mutation":return h.MUTATION;case"subscription":return h.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(m.PAREN_L,this.parseVariableDefinition,m.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:p.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(m.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(m.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const e=this._lexer.token;return this.expectToken(m.DOLLAR),this.node(e,{kind:p.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:p.SELECTION_SET,selections:this.many(m.BRACE_L,this.parseSelection,m.BRACE_R)})}parseSelection(){return this.peek(m.SPREAD)?this.parseFragment():this.parseField()}parseField(){const e=this._lexer.token,t=this.parseName();let n,a;return this.expectOptionalToken(m.COLON)?(n=t,a=this.parseName()):a=t,this.node(e,{kind:p.FIELD,alias:n,name:a,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(m.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(e){const t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(m.PAREN_L,t,m.PAREN_R)}parseArgument(e=!1){const t=this._lexer.token,n=this.parseName();return this.expectToken(m.COLON),this.node(t,{kind:p.ARGUMENT,name:n,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const e=this._lexer.token;this.expectToken(m.SPREAD);const t=this.expectOptionalKeyword("on");return!t&&this.peek(m.NAME)?this.node(e,{kind:p.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(e,{kind:p.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){var e;const t=this._lexer.token;return this.expectKeyword("fragment"),!0===(null===(e=this._options)||void 0===e?void 0:e.allowLegacyFragmentVariables)?this.node(t,{kind:p.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:p.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){const t=this._lexer.token;switch(t.kind){case m.BRACKET_L:return this.parseList(e);case m.BRACE_L:return this.parseObject(e);case m.INT:return this._lexer.advance(),this.node(t,{kind:p.INT,value:t.value});case m.FLOAT:return this._lexer.advance(),this.node(t,{kind:p.FLOAT,value:t.value});case m.STRING:case m.BLOCK_STRING:return this.parseStringLiteral();case m.NAME:switch(this._lexer.advance(),t.value){case"true":return this.node(t,{kind:p.BOOLEAN,value:!0});case"false":return this.node(t,{kind:p.BOOLEAN,value:!1});case"null":return this.node(t,{kind:p.NULL});default:return this.node(t,{kind:p.ENUM,value:t.value})}case m.DOLLAR:if(e){if(this.expectToken(m.DOLLAR),this._lexer.token.kind===m.NAME){const e=this._lexer.token.value;throw u(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}throw this.unexpected(t)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const e=this._lexer.token;return this._lexer.advance(),this.node(e,{kind:p.STRING,value:e.value,block:e.kind===m.BLOCK_STRING})}parseList(e){return this.node(this._lexer.token,{kind:p.LIST,values:this.any(m.BRACKET_L,(()=>this.parseValueLiteral(e)),m.BRACKET_R)})}parseObject(e){return this.node(this._lexer.token,{kind:p.OBJECT,fields:this.any(m.BRACE_L,(()=>this.parseObjectField(e)),m.BRACE_R)})}parseObjectField(e){const t=this._lexer.token,n=this.parseName();return this.expectToken(m.COLON),this.node(t,{kind:p.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e)})}parseDirectives(e){const t=[];for(;this.peek(m.AT);)t.push(this.parseDirective(e));return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(e){const t=this._lexer.token;return this.expectToken(m.AT),this.node(t,{kind:p.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){const e=this._lexer.token;let t;if(this.expectOptionalToken(m.BRACKET_L)){const n=this.parseTypeReference();this.expectToken(m.BRACKET_R),t=this.node(e,{kind:p.LIST_TYPE,type:n})}else t=this.parseNamedType();return this.expectOptionalToken(m.BANG)?this.node(e,{kind:p.NON_NULL_TYPE,type:t}):t}parseNamedType(){return this.node(this._lexer.token,{kind:p.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(m.STRING)||this.peek(m.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");const n=this.parseConstDirectives(),a=this.many(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);return this.node(e,{kind:p.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:a})}parseOperationTypeDefinition(){const e=this._lexer.token,t=this.parseOperationType();this.expectToken(m.COLON);const n=this.parseNamedType();return this.node(e,{kind:p.OPERATION_TYPE_DEFINITION,operation:t,type:n})}parseScalarTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");const n=this.parseName(),a=this.parseConstDirectives();return this.node(e,{kind:p.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:a})}parseObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");const n=this.parseName(),a=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(e,{kind:p.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:a,directives:i,fields:s})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(m.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseFieldDefinition,m.BRACE_R)}parseFieldDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),a=this.parseArgumentDefs();this.expectToken(m.COLON);const i=this.parseTypeReference(),s=this.parseConstDirectives();return this.node(e,{kind:p.FIELD_DEFINITION,description:t,name:n,arguments:a,type:i,directives:s})}parseArgumentDefs(){return this.optionalMany(m.PAREN_L,this.parseInputValueDef,m.PAREN_R)}parseInputValueDef(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(m.COLON);const a=this.parseTypeReference();let i;this.expectOptionalToken(m.EQUALS)&&(i=this.parseConstValueLiteral());const s=this.parseConstDirectives();return this.node(e,{kind:p.INPUT_VALUE_DEFINITION,description:t,name:n,type:a,defaultValue:i,directives:s})}parseInterfaceTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");const n=this.parseName(),a=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(e,{kind:p.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:a,directives:i,fields:s})}parseUnionTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");const n=this.parseName(),a=this.parseConstDirectives(),i=this.parseUnionMemberTypes();return this.node(e,{kind:p.UNION_TYPE_DEFINITION,description:t,name:n,directives:a,types:i})}parseUnionMemberTypes(){return this.expectOptionalToken(m.EQUALS)?this.delimitedMany(m.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");const n=this.parseName(),a=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();return this.node(e,{kind:p.ENUM_TYPE_DEFINITION,description:t,name:n,directives:a,values:i})}parseEnumValuesDefinition(){return this.optionalMany(m.BRACE_L,this.parseEnumValueDefinition,m.BRACE_R)}parseEnumValueDefinition(){const e=this._lexer.token,t=this.parseDescription(),n=this.parseEnumValueName(),a=this.parseConstDirectives();return this.node(e,{kind:p.ENUM_VALUE_DEFINITION,description:t,name:n,directives:a})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw u(this._lexer.source,this._lexer.token.start,`${Q(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");const n=this.parseName(),a=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();return this.node(e,{kind:p.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:a,fields:i})}parseInputFieldsDefinition(){return this.optionalMany(m.BRACE_L,this.parseInputValueDef,m.BRACE_R)}parseTypeSystemExtension(){const e=this._lexer.lookahead();if(e.kind===m.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const t=this.parseConstDirectives(),n=this.optionalMany(m.BRACE_L,this.parseOperationTypeDefinition,m.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return this.node(e,{kind:p.SCHEMA_EXTENSION,directives:t,operationTypes:n})}parseScalarTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const t=this.parseName(),n=this.parseConstDirectives();if(0===n.length)throw this.unexpected();return this.node(e,{kind:p.SCALAR_TYPE_EXTENSION,name:t,directives:n})}parseObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const t=this.parseName(),n=this.parseImplementsInterfaces(),a=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(0===n.length&&0===a.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:p.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:a,fields:i})}parseInterfaceTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const t=this.parseName(),n=this.parseImplementsInterfaces(),a=this.parseConstDirectives(),i=this.parseFieldsDefinition();if(0===n.length&&0===a.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:p.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:a,fields:i})}parseUnionTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const t=this.parseName(),n=this.parseConstDirectives(),a=this.parseUnionMemberTypes();if(0===n.length&&0===a.length)throw this.unexpected();return this.node(e,{kind:p.UNION_TYPE_EXTENSION,name:t,directives:n,types:a})}parseEnumTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const t=this.parseName(),n=this.parseConstDirectives(),a=this.parseEnumValuesDefinition();if(0===n.length&&0===a.length)throw this.unexpected();return this.node(e,{kind:p.ENUM_TYPE_EXTENSION,name:t,directives:n,values:a})}parseInputObjectTypeExtension(){const e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const t=this.parseName(),n=this.parseConstDirectives(),a=this.parseInputFieldsDefinition();if(0===n.length&&0===a.length)throw this.unexpected();return this.node(e,{kind:p.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:a})}parseDirectiveDefinition(){const e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(m.AT);const n=this.parseName(),a=this.parseArgumentDefs(),i=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const s=this.parseDirectiveLocations();return this.node(e,{kind:p.DIRECTIVE_DEFINITION,description:t,name:n,arguments:a,repeatable:i,locations:s})}parseDirectiveLocations(){return this.delimitedMany(m.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const e=this._lexer.token,t=this.parseName();if(Object.prototype.hasOwnProperty.call(d,t.value))return t;throw this.unexpected(e)}node(e,t){var n;return!0!==(null===(n=this._options)||void 0===n?void 0:n.noLocation)&&(t.loc=new Location(e,this._lexer.lastToken,this._lexer.source)),t}peek(e){return this._lexer.token.kind===e}expectToken(e){const t=this._lexer.token;if(t.kind===e)return this._lexer.advance(),t;throw u(this._lexer.source,t.start,`Expected ${k(e)}, found ${Q(t)}.`)}expectOptionalToken(e){return this._lexer.token.kind===e&&(this._lexer.advance(),!0)}expectKeyword(e){const t=this._lexer.token;if(t.kind!==m.NAME||t.value!==e)throw u(this._lexer.source,t.start,`Expected "${e}", found ${Q(t)}.`);this._lexer.advance()}expectOptionalKeyword(e){const t=this._lexer.token;return t.kind===m.NAME&&t.value===e&&(this._lexer.advance(),!0)}unexpected(e){const t=null!=e?e:this._lexer.token;return u(this._lexer.source,t.start,`Unexpected ${Q(t)}.`)}any(e,t,n){this.expectToken(e);const a=[];for(;!this.expectOptionalToken(n);)a.push(t.call(this));return a}optionalMany(e,t,n){if(this.expectOptionalToken(e)){const e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}return[]}many(e,t,n){this.expectToken(e);const a=[];do{a.push(t.call(this))}while(!this.expectOptionalToken(n));return a}delimitedMany(e,t){this.expectOptionalToken(e);const n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}}function Q(e){const t=e.value;return k(e.kind)+(null!=t?` "${t}"`:"")}function k(e){return function(e){return e===m.BANG||e===m.DOLLAR||e===m.AMP||e===m.PAREN_L||e===m.PAREN_R||e===m.SPREAD||e===m.COLON||e===m.EQUALS||e===m.AT||e===m.BRACKET_L||e===m.BRACKET_R||e===m.BRACE_L||e===m.PIPE||e===m.BRACE_R}(e)?`"${e}"`:e}var K=new Map,V=new Map,W=!1;function G(e){return e.replace(/[\s,]+/g," ").trim()}function z(e){var t=new Set,n=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var a=e.name.value,i=G((r=e.loc).source.body.substring(r.start,r.end)),s=V.get(a);s&&!s.has(i)||s||V.set(a,s=new Set),s.add(i),t.has(i)||(t.add(i),n.push(e))}else n.push(e);var r})),a(a({},e),{definitions:n})}function H(e){var t=G(e);if(!K.has(t)){var n=function(e,t){return new Parser(e,t).parseDocument()}(e,{experimentalFragmentVariables:W,allowLegacyFragmentVariables:W});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");K.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(n){var a=e[n];a&&"object"==typeof a&&t.add(a)}))}));var n=e.loc;return n&&(delete n.startToken,delete n.endToken),e}(z(n)))}return K.get(t)}function J(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];"string"==typeof e&&(e=[e]);var a=e[0];return t.forEach((function(t,n){t&&"Document"===t.kind?a+=t.loc.source.body:a+=t,a+=e[n+1]})),H(a)}var Y,X=J,Z=function(){K.clear(),V.clear()},ee=function(){!1},te=function(){W=!0},ne=function(){W=!1};(Y=J||(J={})).gql=X,Y.resetCaches=Z,Y.disableFragmentWarnings=ee,Y.enableExperimentalFragmentVariables=te,Y.disableExperimentalFragmentVariables=ne,J.default=J;const ae=J},8660:(e,t,n)=>{var a;!function(e){!function(t){var a="object"==typeof n.g?n.g:"object"==typeof self?self:"object"==typeof this?this:Function("return this;")(),i=s(e);function s(e,t){return function(n,a){"function"!=typeof e[n]&&Object.defineProperty(e,n,{configurable:!0,writable:!0,value:a}),t&&t(n,a)}}void 0===a.Reflect?a.Reflect=e:i=s(a.Reflect,i),function(e){var t=Object.prototype.hasOwnProperty,n="function"==typeof Symbol,a=n&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",i=n&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator",s="function"==typeof Object.create,r={__proto__:[]}instanceof Array,o=!s&&!r,c={create:s?function(){return ae(Object.create(null))}:r?function(){return ae({__proto__:null})}:function(){return ae({})},has:o?function(e,n){return t.call(e,n)}:function(e,t){return t in e},get:o?function(e,n){return t.call(e,n)?e[n]:void 0}:function(e,t){return e[t]}},l=Object.getPrototypeOf(Function),u="object"==typeof process&&"true"==="MISSING_ENV_VAR".REFLECT_METADATA_USE_MAP_POLYFILL,h=u||"function"!=typeof Map||"function"!=typeof Map.prototype.entries?ee():Map,d=u||"function"!=typeof Set||"function"!=typeof Set.prototype.entries?te():Set,p=new(u||"function"!=typeof WeakMap?ne():WeakMap);function m(e,t,n,a){if(_(n)){if(!K(e))throw new TypeError;if(!W(t))throw new TypeError;return A(e,t)}if(!K(e))throw new TypeError;if(!j(t))throw new TypeError;if(!j(a)&&!_(a)&&!$(a))throw new TypeError;return $(a)&&(a=void 0),M(e,t,n=k(n),a)}function y(e,t){function n(n,a){if(!j(n))throw new TypeError;if(!_(a)&&!G(a))throw new TypeError;P(e,t,n,a)}return n}function f(e,t,n,a){if(!j(n))throw new TypeError;return _(a)||(a=k(a)),P(e,t,n,a)}function g(e,t,n){if(!j(t))throw new TypeError;return _(n)||(n=k(n)),v(e,t,n)}function E(e,t,n){if(!j(t))throw new TypeError;return _(n)||(n=k(n)),S(e,t,n)}function T(e,t,n){if(!j(t))throw new TypeError;return _(n)||(n=k(n)),O(e,t,n)}function b(e,t,n){if(!j(t))throw new TypeError;return _(n)||(n=k(n)),x(e,t,n)}function N(e,t){if(!j(e))throw new TypeError;return _(t)||(t=k(t)),I(e,t)}function w(e,t){if(!j(e))throw new TypeError;return _(t)||(t=k(t)),D(e,t)}function C(e,t,n){if(!j(t))throw new TypeError;_(n)||(n=k(n));var a=R(t,n,!1);if(_(a))return!1;if(!a.delete(e))return!1;if(a.size>0)return!0;var i=p.get(t);return i.delete(n),i.size>0||p.delete(t),!0}function A(e,t){for(var n=e.length-1;n>=0;--n){var a=(0,e[n])(t);if(!_(a)&&!$(a)){if(!W(a))throw new TypeError;t=a}}return t}function M(e,t,n,a){for(var i=e.length-1;i>=0;--i){var s=(0,e[i])(t,n,a);if(!_(s)&&!$(s)){if(!j(s))throw new TypeError;a=s}}return a}function R(e,t,n){var a=p.get(e);if(_(a)){if(!n)return;a=new h,p.set(e,a)}var i=a.get(t);if(_(i)){if(!n)return;i=new h,a.set(t,i)}return i}function v(e,t,n){if(S(e,t,n))return!0;var a=Z(t);return!$(a)&&v(e,a,n)}function S(e,t,n){var a=R(t,n,!1);return!_(a)&&F(a.has(e))}function O(e,t,n){if(S(e,t,n))return x(e,t,n);var a=Z(t);return $(a)?void 0:O(e,a,n)}function x(e,t,n){var a=R(t,n,!1);if(!_(a))return a.get(e)}function P(e,t,n,a){R(n,a,!0).set(e,t)}function I(e,t){var n=D(e,t),a=Z(e);if(null===a)return n;var i=I(a,t);if(i.length<=0)return n;if(n.length<=0)return i;for(var s=new d,r=[],o=0,c=n;o<c.length;o++){var l=c[o];s.has(l)||(s.add(l),r.push(l))}for(var u=0,h=i;u<h.length;u++){l=h[u];s.has(l)||(s.add(l),r.push(l))}return r}function D(e,t){var n=[],a=R(e,t,!1);if(_(a))return n;for(var i=H(a.keys()),s=0;;){var r=Y(i);if(!r)return n.length=s,n;var o=J(r);try{n[s]=o}catch(e){try{X(i)}finally{throw e}}s++}}function L(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function _(e){return void 0===e}function $(e){return null===e}function q(e){return"symbol"==typeof e}function j(e){return"object"==typeof e?null!==e:"function"==typeof e}function B(e,t){switch(L(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var n=3===t?"string":5===t?"number":"default",i=z(e,a);if(void 0!==i){var s=i.call(e,n);if(j(s))throw new TypeError;return s}return U(e,"default"===n?"number":n)}function U(e,t){if("string"===t){var n=e.toString;if(V(n))if(!j(i=n.call(e)))return i;if(V(a=e.valueOf))if(!j(i=a.call(e)))return i}else{var a;if(V(a=e.valueOf))if(!j(i=a.call(e)))return i;var i,s=e.toString;if(V(s))if(!j(i=s.call(e)))return i}throw new TypeError}function F(e){return!!e}function Q(e){return""+e}function k(e){var t=B(e,3);return q(t)?t:Q(t)}function K(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function V(e){return"function"==typeof e}function W(e){return"function"==typeof e}function G(e){switch(L(e)){case 3:case 4:return!0;default:return!1}}function z(e,t){var n=e[t];if(null!=n){if(!V(n))throw new TypeError;return n}}function H(e){var t=z(e,i);if(!V(t))throw new TypeError;var n=t.call(e);if(!j(n))throw new TypeError;return n}function J(e){return e.value}function Y(e){var t=e.next();return!t.done&&t}function X(e){var t=e.return;t&&t.call(e)}function Z(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===l)return t;if(t!==l)return t;var n=e.prototype,a=n&&Object.getPrototypeOf(n);if(null==a||a===Object.prototype)return t;var i=a.constructor;return"function"!=typeof i||i===e?t:i}function ee(){var e={},t=[],n=function(){function e(e,t,n){this._index=0,this._keys=e,this._values=t,this._selector=n}return e.prototype["@@iterator"]=function(){return this},e.prototype[i]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var n=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:n,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var n=this._find(e,!0);return this._values[n]=t,this},t.prototype.delete=function(t){var n=this._find(t,!1);if(n>=0){for(var a=this._keys.length,i=n+1;i<a;i++)this._keys[i-1]=this._keys[i],this._values[i-1]=this._values[i];return this._keys.length--,this._values.length--,t===this._cacheKey&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new n(this._keys,this._values,a)},t.prototype.values=function(){return new n(this._keys,this._values,s)},t.prototype.entries=function(){return new n(this._keys,this._values,r)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[i]=function(){return this.entries()},t.prototype._find=function(e,t){return this._cacheKey!==e&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=e)),this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function a(e,t){return e}function s(e,t){return t}function r(e,t){return[e,t]}}function te(){return function(){function e(){this._map=new h}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.values()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[i]=function(){return this.keys()},e}()}function ne(){var e=16,n=c.create(),a=i();return function(){function e(){this._key=i()}return e.prototype.has=function(e){var t=s(e,!1);return void 0!==t&&c.has(t,this._key)},e.prototype.get=function(e){var t=s(e,!1);return void 0!==t?c.get(t,this._key):void 0},e.prototype.set=function(e,t){return s(e,!0)[this._key]=t,this},e.prototype.delete=function(e){var t=s(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=i()},e}();function i(){var e;do{e="@@WeakMap@@"+l()}while(c.has(n,e));return n[e]=!0,e}function s(e,n){if(!t.call(e,a)){if(!n)return;Object.defineProperty(e,a,{value:c.create()})}return e[a]}function r(e,t){for(var n=0;n<t;++n)e[n]=255*Math.random()|0;return e}function o(e){return"function"==typeof Uint8Array?"undefined"!=typeof crypto?crypto.getRandomValues(new Uint8Array(e)):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(new Uint8Array(e)):r(new Uint8Array(e),e):r(new Array(e),e)}function l(){var t=o(e);t[6]=79&t[6]|64,t[8]=191&t[8]|128;for(var n="",a=0;a<e;++a){var i=t[a];4!==a&&6!==a&&8!==a||(n+="-"),i<16&&(n+="0"),n+=i.toString(16).toLowerCase()}return n}}function ae(e){return e.__=void 0,delete e.__,e}e("decorate",m),e("metadata",y),e("defineMetadata",f),e("hasMetadata",g),e("hasOwnMetadata",E),e("getMetadata",T),e("getOwnMetadata",b),e("getMetadataKeys",N),e("getOwnMetadataKeys",w),e("deleteMetadata",C)}(i)}()}(a||(a={}))},7677:(e,t,n)=>{"use strict";n.d(t,{z:()=>DriverUtils});var a=n(5022);class DriverUtils{static isSQLiteFamily(e){return["sqlite","cordova","react-native","nativescript","sqljs","expo","better-sqlite3","capacitor"].includes(e.options.type)}static isMySQLFamily(e){return["mysql","mariadb"].includes(e.options.type)}static isPostgresFamily(e){return["postgres","aurora-postgres"].includes(e.options.type)}static buildDriverOptions(e,t){if(e.url){const n=this.parseConnectionUrl(e.url);t&&t.useSid&&n.database&&(n.sid=n.database);for(const e of Object.keys(n))void 0===n[e]&&delete n[e];return Object.assign({},e,n)}return Object.assign({},e)}static buildMongoDBDriverOptions(e,t){if(e.url){const n=this.parseMongoDBConnectionUrl(e.url);t&&t.useSid&&n.database&&(n.sid=n.database);for(const e of Object.keys(n))void 0===n[e]&&delete n[e];return Object.assign({},e,n)}return Object.assign({},e)}static buildAlias({maxAliasLength:e},t,...n){"string"==typeof t?(n.unshift(t),t={shorten:!1,joiner:"_"}):t=Object.assign({shorten:!1,joiner:"_"},t);const i=1===n.length?n[0]:n.join(t.joiner);if(e&&e>0&&i.length>e){if(!0===t.shorten){const t=(0,a.OV)(i);if(t.length<e)return t}return(0,a.vp)(i,{length:e})}return i}static buildColumnAlias({maxAliasLength:e},t,...n){return this.buildAlias({maxAliasLength:e},t,...n)}static parseConnectionUrl(e){const t=e.split(":")[0],n=e.indexOf("//"),a=e.substr(n+2),i=a.indexOf("/"),s=-1!==i?a.substr(0,i):a;let r=-1!==i?a.substr(i+1):void 0;r&&-1!==r.indexOf("?")&&(r=r.substr(0,r.indexOf("?")));const o=s.lastIndexOf("@"),c=s.substr(0,o),l=s.substr(o+1);let u=c,h="";const d=c.indexOf(":");-1!==d&&(u=c.substr(0,d),h=c.substr(d+1));const[p,m]=l.split(":");return{type:t,host:p,username:decodeURIComponent(u),password:decodeURIComponent(h),port:m?parseInt(m):void 0,database:r||void 0}}static parseMongoDBConnectionUrl(e){const t=e.split(":")[0],n=e.indexOf("//"),a=e.substr(n+2),i=a.indexOf("/"),s=-1!==i?a.substr(0,i):a;let r,o,c,l,u=-1!==i?a.substr(i+1):void 0,h="",d={};if(u&&-1!==u.indexOf("?")){h=u.substr(u.indexOf("?")+1,u.length);let e,t;h.split("&").forEach((n=>{e=n.split("=")[0],t=n.split("=")[1],d[e]=t})),l=d.replicaSet,u=u.substr(0,u.indexOf("?"))}const p=s.lastIndexOf("@"),m=s.substr(0,p),y=s.substr(p+1);let f=m,g="";const E=m.indexOf(":");-1!==E&&(f=m.substr(0,E),g=m.substr(E+1)),l?c=y:[r,o]=y.split(":");let T={type:t,host:r,hostReplicaSet:c,username:decodeURIComponent(f),password:decodeURIComponent(g),port:o?parseInt(o):void 0,database:u||void 0};for(const[e,t]of Object.entries(d))T[e]=t;return T}}},7497:(e,t,n)=>{"use strict";n(5066)},6759:(e,t,n)=>{"use strict";n.d(t,{a:()=>CannotAttachTreeChildrenEntityError});var a=n(5066);class CannotAttachTreeChildrenEntityError extends a.K{constructor(e){super(`Cannot attach entity "${e}" to its parent. Please make sure parent is saved in the database before saving children nodes.`)}}},5578:(e,t,n)=>{"use strict";n.d(t,{d:()=>CannotCreateEntityIdMapError});var a=n(5066);class CannotCreateEntityIdMapError extends a.K{constructor(e,t){super();const n=e.primaryColumns.reduce(((e,t,n)=>(t.setEntityValue(e,n+1),e)),{});this.message=`Cannot use given entity id "${t}" because "${e.targetName}" contains multiple primary columns, you must provide object in following form: ${JSON.stringify(n)} as an id.`}}},9381:(e,t,n)=>{"use strict";n.d(t,{c:()=>CannotDetermineEntityError});var a=n(5066);class CannotDetermineEntityError extends a.K{constructor(e){super(`Cannot ${e}, given value must be instance of entity class, instead object literal is given. Or you must specify an entity target to method call.`)}}},393:(e,t,n)=>{"use strict";n.d(t,{u:()=>CircularRelationsError});var a=n(5066);class CircularRelationsError extends a.K{constructor(e){super(`Circular relations detected: ${e}. To resolve this issue you need to set nullable: true somewhere in this dependency structure.`)}}},8974:(e,t,n)=>{"use strict";n.d(t,{s:()=>ColumnTypeUndefinedError});var a=n(5066);class ColumnTypeUndefinedError extends a.K{constructor(e,t){super(`Column type for ${e.constructor.name}#${t} is not defined and cannot be guessed. Make sure you have turned on an "emitDecoratorMetadata": true option in tsconfig.json. Also make sure you have imported "reflect-metadata" on top of the main entry file in your application (before any entity imported).If you are using JavaScript instead of TypeScript you must explicitly provide a column type.`)}}},3972:(e,t,n)=>{"use strict";n(5066)},3095:(e,t,n)=>{"use strict";n.d(t,{b:()=>CustomRepositoryDoesNotHaveEntityError});var a=n(5066);class CustomRepositoryDoesNotHaveEntityError extends a.K{constructor(e){super(`Custom repository ${"function"==typeof e?e.name:e.constructor.name} does not have managed entity. Did you forget to specify entity for it @EntityRepository(MyEntity)? `)}}},8714:(e,t,n)=>{"use strict";n.d(t,{n:()=>CustomRepositoryNotFoundError});var a=n(5066);class CustomRepositoryNotFoundError extends a.K{constructor(e){super(`Custom repository ${"function"==typeof e?e.name:e.constructor.name} was not found. Did you forgot to put @EntityRepository decorator on it?`)}}},8970:(e,t,n)=>{"use strict";n.d(t,{q:()=>DataTypeNotSupportedError});var a=n(5066);class DataTypeNotSupportedError extends a.K{constructor(e,t,n){super();const a="string"==typeof t?t:t.name;this.message=`Data type "${a}" in "${e.entityMetadata.targetName}.${e.propertyName}" is not supported by "${n}" database.`}}},4547:(e,t,n)=>{"use strict";n.d(t,{f:()=>DriverOptionNotSetError});var a=n(5066);class DriverOptionNotSetError extends a.K{constructor(e){super(`Driver option (${e}) is not set. Please set it to perform connection to the database.`)}}},6908:(e,t,n)=>{"use strict";n.d(t,{z:()=>DriverPackageNotInstalledError});var a=n(5066);class DriverPackageNotInstalledError extends a.K{constructor(e,t){super(`${e} package has not been found installed. Try to install it: npm install ${t} --save`)}}},497:(e,t,n)=>{"use strict";n.d(t,{E:()=>EntityNotFoundError});var a=n(5066),i=n(7264),s=n(7378);class EntityNotFoundError extends a.K{constructor(e,t){super(),this.message=`Could not find any entity of type "${this.stringifyTarget(e)}" matching: ${this.stringifyCriteria(t)}`}stringifyTarget(e){return s.a.isEntitySchema(e)?e.options.name:"function"==typeof e||i.g.isObject(e)&&"name"in e?e.name:e}stringifyCriteria(e){try{return JSON.stringify(e,null,4)}catch(e){}return""+e}}},1962:(e,t,n)=>{"use strict";n.d(t,{B:()=>EntityPropertyNotFoundError});var a=n(5066);class EntityPropertyNotFoundError extends a.K{constructor(e,t){super(e),Object.setPrototypeOf(this,EntityPropertyNotFoundError.prototype),this.message=`Property "${e}" was not found in "${t.targetName}". Make sure your query is correct.`}}},4706:(e,t,n)=>{"use strict";n.d(t,{P:()=>FindRelationsNotFoundError});var a=n(5066);class FindRelationsNotFoundError extends a.K{constructor(e){super(),1===e.length?this.message=`Relation "${e[0]}" was not found; please check if it is correct and really exists in your entity.`:this.message=`Relations ${e.map((e=>`"${e}"`)).join(", ")} were not found; please check if relations are correct and they exist in your entities.`}}},2882:(e,t,n)=>{"use strict";n.d(t,{j:()=>InitializedRelationError});var a=n(5066);class InitializedRelationError extends a.K{constructor(e){super(`Array initializations are not allowed in entity relations. Please remove array initialization (= []) from "${e.entityMetadata.targetName}#${e.propertyPath}". This is ORM requirement to make relations to work properly. Refer docs for more information.`)}}},4606:(e,t,n)=>{"use strict";n.d(t,{D:()=>InsertValuesMissingError});var a=n(5066);class InsertValuesMissingError extends a.K{constructor(){super('Cannot perform insert query because values are not defined. Call "qb.values(...)" method to specify inserted values.')}}},2270:(e,t,n)=>{"use strict";n.d(t,{T:()=>LimitOnUpdateNotSupportedError});var a=n(5066);class LimitOnUpdateNotSupportedError extends a.K{constructor(){super("Your database does not support LIMIT on UPDATE statements.")}}},5106:(e,t,n)=>{"use strict";n.d(t,{A:()=>LockNotSupportedOnGivenDriverError});var a=n(5066);class LockNotSupportedOnGivenDriverError extends a.K{constructor(){super("Locking not supported on given driver.")}}},6723:(e,t,n)=>{"use strict";n.d(t,{d:()=>MissingDeleteDateColumnError});var a=n(5066);class MissingDeleteDateColumnError extends a.K{constructor(e){super(`Entity "${e.name}" does not have delete date columns.`)}}},9700:(e,t,n)=>{"use strict";n.d(t,{R:()=>MissingDriverError});var a=n(5066);class MissingDriverError extends a.K{constructor(e,t=[]){super(`Wrong driver: "${e}" given. Supported drivers are: ${t.map((e=>`"${e}"`)).join(", ")}.`)}}},9689:(e,t,n)=>{"use strict";n.d(t,{H:()=>MissingPrimaryColumnError});var a=n(5066);class MissingPrimaryColumnError extends a.K{constructor(e){super(`Entity "${e.name}" does not have a primary column. Primary column is required to have in all your entities. Use @PrimaryColumn decorator to add a primary column to your entity.`)}}},8360:(e,t,n)=>{"use strict";n.d(t,{B:()=>MustBeEntityError});var a=n(5066);class MustBeEntityError extends a.K{constructor(e,t){super(`Cannot ${e}, given value must be an entity, instead "${t}" is given.`)}}},4162:(e,t,n)=>{"use strict";n.d(t,{H:()=>NoConnectionOptionError});var a=n(5066);class NoConnectionOptionError extends a.K{constructor(e){super(`Option "${e}" is not set in your connection options, please define "${e}" option in your connection options or ormconfig.json`)}}},8522:(e,t,n)=>{"use strict";n.d(t,{r:()=>NoNeedToReleaseEntityManagerError});var a=n(5066);class NoNeedToReleaseEntityManagerError extends a.K{constructor(){super("Entity manager is not using single database connection and cannot be released. Only entity managers created by connection#createEntityManagerWithSingleDatabaseConnection methods have a single database connection and they should be released.")}}},8955:(e,t,n)=>{"use strict";n.d(t,{f:()=>NoVersionOrUpdateDateColumnError});var a=n(5066);class NoVersionOrUpdateDateColumnError extends a.K{constructor(e){super(`Entity ${e} does not have version or update date columns.`)}}},4885:(e,t,n)=>{"use strict";n.d(t,{G:()=>OffsetWithoutLimitNotSupportedError});var a=n(5066);class OffsetWithoutLimitNotSupportedError extends a.K{constructor(){super("RDBMS does not support OFFSET without LIMIT in SELECT statements. You must use limit in conjunction with offset function (or take in conjunction with skip function if you are using pagination).")}}},2475:(e,t,n)=>{"use strict";n.d(t,{Y:()=>OptimisticLockCanNotBeUsedError});var a=n(5066);class OptimisticLockCanNotBeUsedError extends a.K{constructor(){super("The optimistic lock can be used only with getOne() method.")}}},3683:(e,t,n)=>{"use strict";n.d(t,{Z:()=>OptimisticLockVersionMismatchError});var a=n(5066);class OptimisticLockVersionMismatchError extends a.K{constructor(e,t,n){super(`The optimistic lock on entity ${e} failed, version ${t} was expected, but is actually ${n}.`)}}},2757:(e,t,n)=>{"use strict";n.d(t,{G:()=>PessimisticLockTransactionRequiredError});var a=n(5066);class PessimisticLockTransactionRequiredError extends a.K{constructor(){super("An open transaction is required for pessimistic lock.")}}},8147:(e,t,n)=>{"use strict";n.d(t,{I:()=>PrimaryColumnCannotBeNullableError});var a=n(5066);class PrimaryColumnCannotBeNullableError extends a.K{constructor(e,t){super(`Primary column ${e.constructor.name}#${t} cannot be nullable. Its not allowed for primary keys. Try to remove nullable option.`)}}},7316:(e,t,n)=>{"use strict";n.d(t,{O:()=>QueryFailedError});var a=n(7264),i=n(5066);class QueryFailedError extends i.K{constructor(e,t,n){if(super(n.toString().replace(/^error: /,"").replace(/^Error: /,"").replace(/^Request/,"")),this.query=e,this.parameters=t,this.driverError=n,n){const{name:e,...t}=n;a.g.assign(this,{...t})}}}},5128:(e,t,n)=>{"use strict";n.d(t,{Y:()=>QueryRunnerAlreadyReleasedError});var a=n(5066);class QueryRunnerAlreadyReleasedError extends a.K{constructor(){super("Query runner already released. Cannot run queries anymore.")}}},1865:(e,t,n)=>{"use strict";n.d(t,{i:()=>QueryRunnerProviderAlreadyReleasedError});var a=n(5066);class QueryRunnerProviderAlreadyReleasedError extends a.K{constructor(){super("Database connection provided by a query runner was already released, cannot continue to use its querying methods anymore.")}}},581:(e,t,n)=>{"use strict";n.d(t,{y:()=>ReturningStatementNotSupportedError});var a=n(5066);class ReturningStatementNotSupportedError extends a.K{constructor(){super("OUTPUT or RETURNING clause only supported by Microsoft SQL Server or PostgreSQL or MariaDB databases.")}}},7150:(e,t,n)=>{"use strict";n.d(t,{B:()=>SubjectRemovedAndUpdatedError});var a=n(5066);class SubjectRemovedAndUpdatedError extends a.K{constructor(e){super(`Removed entity "${e.metadata.name}" is also scheduled for update operation. Make sure you are not updating and removing same object (note that update or remove may be executed by cascade operations).`)}}},3448:(e,t,n)=>{"use strict";n.d(t,{H:()=>SubjectWithoutIdentifierError});var a=n(5066);class SubjectWithoutIdentifierError extends a.K{constructor(e){super(`Internal error. Subject ${e.metadata.targetName} must have an identifier to perform operation.`)}}},6556:(e,t,n)=>{"use strict";n.d(t,{W:()=>TransactionNotStartedError});var a=n(5066);class TransactionNotStartedError extends a.K{constructor(){super("Transaction is not started yet, start transaction before committing or rolling it back.")}}},5066:(e,t,n)=>{"use strict";n.d(t,{K:()=>TypeORMError});class TypeORMError extends Error{get name(){return this.constructor.name}constructor(e){super(e),Object.setPrototypeOf?Object.setPrototypeOf(this,new.target.prototype):this.__proto__=new.target.prototype}}},210:(e,t,n)=>{"use strict";n.d(t,{y:()=>UpdateValuesMissingError});var a=n(5066);class UpdateValuesMissingError extends a.K{constructor(){super('Cannot perform update query because update values are not defined. Call "qb.set(...)" method to specify updated values.')}}},1507:(e,t,n)=>{"use strict";n.d(t,{Lo:()=>CannotConnectAlreadyConnectedError,$X:()=>CannotExecuteNotConnectedError,Re:()=>CustomRepositoryCannotInheritRepositoryError,nJ:()=>i.n,fd:()=>l.f,zm:()=>c.z,tG:()=>EntityMetadataNotFoundError,iU:()=>o.i,SF:()=>TransactionAlreadyStartedError,A:()=>TreeRepositoryNotSupportedError,K_:()=>a.K});var a=n(5066);n(7497),n(3448);class CannotConnectAlreadyConnectedError extends a.K{constructor(e){super(`Cannot create a "${e}" connection because connection to the database already established.`)}}n(5106);n(5578);n(9381),n(210);class TreeRepositoryNotSupportedError extends a.K{constructor(e){super(`Tree repositories are not supported in ${e.options.type} driver.`)}}var i=n(8714);n(6556);class TransactionAlreadyStartedError extends a.K{constructor(){super("Transaction already started for the given connection, commit current transaction before starting a new one.")}}n(497);var s=n(7264),r=n(7378);class EntityMetadataNotFoundError extends a.K{constructor(e){super(),this.message=`No metadata for "${this.stringifyTarget(e)}" was found.`}stringifyTarget(e){return r.a.isEntitySchema(e)?e.options.name:"function"==typeof e||s.g.isObject(e)&&"name"in e?e.name:e}}n(8360),n(3683),n(2270),n(8147);class CustomRepositoryCannotInheritRepositoryError extends a.K{constructor(e){super(`Custom entity repository ${"function"==typeof e?e.name:e.constructor.name}  cannot inherit Repository class without entity being set in the @EntityRepository decorator.`)}}var o=n(1865);n(6759),n(3095),n(6723);n(393),n(581);n(9689),n(1962),n(9700);var c=n(6908);n(3972),n(8955),n(4606),n(2475);var l=n(4547);n(4706);n(2757);n(8970),n(2882);n(7316),n(8522);n(7150);n(8974),n(5128),n(4885);class CannotExecuteNotConnectedError extends a.K{constructor(e){super(`Cannot execute operation on "${e}" connection because connection is not yet established.`)}}n(4162)},4759:(e,t,n)=>{"use strict";n.d(t,{J:()=>FindOperator});var a=n(7378);class FindOperator{constructor(e,t,n=!0,a=!1,i,s){this["@instanceof"]=Symbol.for("FindOperator"),this._type=e,this._value=t,this._useParameter=n,this._multipleParameters=a,this._getSql=i,this._objectLiteralParameters=s}get useParameter(){return a.a.isFindOperator(this._value)?this._value.useParameter:this._useParameter}get multipleParameters(){return a.a.isFindOperator(this._value)?this._value.multipleParameters:this._multipleParameters}get type(){return this._type}get value(){return a.a.isFindOperator(this._value)?this._value.value:this._value}get objectLiteralParameters(){return a.a.isFindOperator(this._value)?this._value.objectLiteralParameters:this._objectLiteralParameters}get child(){if(a.a.isFindOperator(this._value))return this._value}get getSql(){return a.a.isFindOperator(this._value)?this._value.getSql:this._getSql}}},5093:(e,t,n)=>{"use strict";n.d(t,{Z:()=>FindOptionsUtils});var a=n(4706),i=n(7677);class FindOptionsUtils{static isFindOneOptions(e){const t=e;return t&&(Array.isArray(t.select)||Array.isArray(t.relations)||"object"==typeof t.select||"object"==typeof t.relations||"object"==typeof t.where||"object"==typeof t.join||"object"==typeof t.order||"object"==typeof t.cache||"boolean"==typeof t.cache||"number"==typeof t.cache||"string"==typeof t.comment||"object"==typeof t.lock||"object"==typeof t.loadRelationIds||"boolean"==typeof t.loadRelationIds||"boolean"==typeof t.loadEagerRelations||"boolean"==typeof t.withDeleted||"string"==typeof t.relationLoadStrategy||"boolean"==typeof t.transaction)}static isFindManyOptions(e){const t=e;return t&&(this.isFindOneOptions(t)||"number"==typeof t.skip||"number"==typeof t.take||"string"==typeof t.skip||"string"==typeof t.take)}static extractFindManyOptionsAlias(e){if(this.isFindManyOptions(e)&&e.join)return e.join.alias}static applyOptionsToTreeQueryBuilder(e,t){if(null==t?void 0:t.relations){const n=[...t.relations];if(FindOptionsUtils.applyRelationsRecursively(e,n,e.expressionMap.mainAlias.name,e.expressionMap.mainAlias.metadata,""),n.length>0)throw new a.P(n)}return e}static applyRelationsRecursively(e,t,n,a,s){let r=[];if(s){const e=new RegExp("^"+s.replace(".","\\.")+"\\.");r=t.filter((t=>t.match(e))).map((t=>t.replace(e,""))).filter((e=>a.findRelationWithPropertyPath(e)))}else r=t.filter((e=>a.findRelationWithPropertyPath(e)));r.forEach((r=>{let o=i.z.buildAlias(e.connection.driver,{joiner:"__"},n,r);const c=n+"."+r;e.leftJoinAndSelect(c,o),t.splice(t.indexOf(s?s+"."+r:r),1);const l=e.expressionMap.joinAttributes.find((e=>e.entityOrProperty===c));this.applyRelationsRecursively(e,t,l.alias.name,l.metadata,s?s+"."+r:r);const u=a.relations.find((e=>e.propertyName===r));u&&this.joinEagerRelations(e,o,u.inverseEntityMetadata)}))}static joinEagerRelations(e,t,n){n.eagerRelations.forEach((n=>{let a=i.z.buildAlias(e.connection.driver,e.connection.namingStrategy.eagerJoinRelationAlias(t,n.propertyPath)),s=!0;for(const i of e.expressionMap.joinAttributes)if(void 0===i.condition&&void 0===i.mapToProperty&&void 0===i.isMappingMany&&"LEFT"===i.direction&&i.entityOrProperty===`${t}.${n.propertyPath}`){s=!1,a=i.alias.name;break}s&&e.leftJoin(t+"."+n.propertyPath,a);let r=!0;for(const t of e.expressionMap.selects)if(void 0===t.aliasName&&void 0===t.virtual&&t.selection===a){r=!1;break}r&&e.addSelect(a),this.joinEagerRelations(e,a,n.inverseEntityMetadata)}))}}},8518:(e,t,n)=>{"use strict";n.d(t,{In:()=>i});var a=n(4759);function i(e){return new a.J("in",e,!0,!0)}},8521:(e,t,n)=>{"use strict";n.d(t,{sgG:()=>he,erC:()=>de,o2t:()=>DataSource_DataSource,JHW:()=>ge,In:()=>Ee.In,f_V:()=>ye,bsY:()=>pe,RUf:()=>fe});n(8660);class MetadataUtils{static getInheritanceTree(e){const t=[e],n=e=>{const a=Object.getPrototypeOf(e);a&&a.name&&(t.push(a),n(a))};return n(e),t}static isInherited(e,t){return e.prototype instanceof t}static filterByTarget(e,t){return t?e.filter((e=>e.target&&-1!==t.indexOf(e.target))):e}}class MetadataArgsStorage{constructor(){this.tables=[],this.trees=[],this.entityRepositories=[],this.transactionEntityManagers=[],this.transactionRepositories=[],this.namingStrategies=[],this.entitySubscribers=[],this.indices=[],this.uniques=[],this.checks=[],this.exclusions=[],this.columns=[],this.generations=[],this.relations=[],this.joinColumns=[],this.joinTables=[],this.entityListeners=[],this.relationCounts=[],this.relationIds=[],this.embeddeds=[],this.inheritances=[],this.discriminatorValues=[]}filterTables(e){return this.filterByTarget(this.tables,e)}filterColumns(e){return this.filterByTargetAndWithoutDuplicateProperties(this.columns,e)}findGenerated(e,t){return this.generations.find((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.propertyName===t))}findTree(e){return this.trees.find((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterRelations(e){return this.filterByTargetAndWithoutDuplicateRelationProperties(this.relations,e)}filterRelationIds(e){return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds,e)}filterRelationCounts(e){return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts,e)}filterIndices(e){return this.indices.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterUniques(e){return this.uniques.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterChecks(e){return this.checks.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterExclusions(e){return this.exclusions.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterListeners(e){return this.filterByTarget(this.entityListeners,e)}filterEmbeddeds(e){return this.filterByTargetAndWithoutDuplicateEmbeddedProperties(this.embeddeds,e)}findJoinTable(e,t){return this.joinTables.find((n=>n.target===e&&n.propertyName===t))}filterJoinColumns(e,t){return this.joinColumns.filter((n=>n.target===e&&n.propertyName===t))}filterSubscribers(e){return this.filterByTarget(this.entitySubscribers,e)}filterNamingStrategies(e){return this.filterByTarget(this.namingStrategies,e)}filterTransactionEntityManagers(e,t){return this.transactionEntityManagers.filter((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.methodName===t))}filterTransactionRepository(e,t){return this.transactionRepositories.filter((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.methodName===t))}filterSingleTableChildren(e){return this.tables.filter((t=>"function"==typeof t.target&&"function"==typeof e&&MetadataUtils.isInherited(t.target,e)&&"entity-child"===t.type))}findInheritanceType(e){return this.inheritances.find((t=>t.target===e))}findDiscriminatorValue(e){return this.discriminatorValues.find((t=>t.target===e))}filterByTarget(e,t){return e.filter((e=>Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t))}filterByTargetAndWithoutDuplicateProperties(e,t){const n=[];return e.forEach((e=>{(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t)&&(n.find((t=>t.propertyName===e.propertyName))||n.push(e))})),n}filterByTargetAndWithoutDuplicateRelationProperties(e,t){const n=[];return e.forEach((e=>{if(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t){const a=n.findIndex((t=>t.propertyName===e.propertyName));if(Array.isArray(t)&&-1!==a&&t.indexOf(e.target)<t.indexOf(n[a].target)){const t=Object.create(n[a]);t.type=e.type,n[a]=t}else-1===a&&n.push(e)}})),n}filterByTargetAndWithoutDuplicateEmbeddedProperties(e,t){const n=[];return e.forEach((e=>{if(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t){n.find((t=>t.prefix===e.prefix&&t.propertyName===e.propertyName))||n.push(e)}})),n}}class PlatformTools{static getGlobalVariable(){return"undefined"!=typeof window?window:n.g}static load(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: require("${e}").`);return""}static pathNormalize(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.normalize("${e}").`);return""}static pathExtname(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.extname("${e}").`);return""}static pathResolve(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.resolve("${e}").`);return""}static fileExist(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.existsSync("${e}").`);return!1}static dotenv(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: dotenv.config({ path: "${e}" }).`)}static getEnvVariable(e){}static readFileSync(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.readFileSync("${e}").`);return null}static appendFileSync(e,t){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.appendFileSync("${e}").`)}static writeFile(e,t){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.writeFile("${e}").`);return Promise.reject(null)}static highlightSql(e){return e}static highlightJson(e){return e}static logInfo(e,t){}static logError(e,t){}static logWarn(e,t){}static log(e){}static warn(e){return e}}PlatformTools.type="browser";"undefined"!=typeof window&&(window.Buffer=n(8764).Buffer),void 0!==n.g&&(n.g.Buffer=n(8764).Buffer);class RandomGenerator{static sha1(e){let t,n,a,i,s,r,o,c,l,u=function(e,t){return e<<t|e>>>32-t},h=function(e){let t,n,a="";for(t=7;t>=0;t--)n=e>>>4*t&15,a+=n.toString(16);return a},d=new Array(80),p=1732584193,m=4023233417,y=2562383102,f=271733878,g=3285377520,E=(e=encodeURIComponent(e)).length,T=[];for(n=0;n<E-3;n+=4)a=e.charCodeAt(n)<<24|e.charCodeAt(n+1)<<16|e.charCodeAt(n+2)<<8|e.charCodeAt(n+3),T.push(a);switch(E%4){case 0:n=2147483648;break;case 1:n=e.charCodeAt(E-1)<<24|8388608;break;case 2:n=e.charCodeAt(E-2)<<24|e.charCodeAt(E-1)<<16|32768;break;case 3:n=e.charCodeAt(E-3)<<24|e.charCodeAt(E-2)<<16|e.charCodeAt(E-1)<<8|128}for(T.push(n);T.length%16!=14;)T.push(0);for(T.push(E>>>29),T.push(E<<3&4294967295),t=0;t<T.length;t+=16){for(n=0;n<16;n++)d[n]=T[t+n];for(n=16;n<=79;n++)d[n]=u(d[n-3]^d[n-8]^d[n-14]^d[n-16],1);for(i=p,s=m,r=y,o=f,c=g,n=0;n<=19;n++)l=u(i,5)+(s&r|~s&o)+c+d[n]+1518500249&4294967295,c=o,o=r,r=u(s,30),s=i,i=l;for(n=20;n<=39;n++)l=u(i,5)+(s^r^o)+c+d[n]+1859775393&4294967295,c=o,o=r,r=u(s,30),s=i,i=l;for(n=40;n<=59;n++)l=u(i,5)+(s&r|s&o|r&o)+c+d[n]+2400959708&4294967295,c=o,o=r,r=u(s,30),s=i,i=l;for(n=60;n<=79;n++)l=u(i,5)+(s^r^o)+c+d[n]+3395469782&4294967295,c=o,o=r,r=u(s,30),s=i,i=l;p=p+i&4294967295,m=m+s&4294967295,y=y+r&4294967295,f=f+o&4294967295,g=g+c&4294967295}return l=h(p)+h(m)+h(y)+h(f)+h(g),l.toLowerCase()}}var a=n(5022);class DefaultNamingStrategy{constructor(){this.nestedSetColumnNames={left:"nsleft",right:"nsright"},this.materializedPathColumnName="mpath"}getTableName(e){return"string"!=typeof e&&(e=e.name),e.split(".").pop()}tableName(e,t){return t||(0,a.fu)(e)}closureJunctionTableName(e){return e+"_closure"}columnName(e,t,n){const i=t||e;return n.length?(0,a.eV)(n.join("_"))+(0,a.Qs)(i):i}relationName(e){return e}primaryKeyName(e,t){const n=[...t];n.sort();const a=`${this.getTableName(e).replace(".","_")}_${n.join("_")}`;return"PK_"+RandomGenerator.sha1(a).substr(0,27)}uniqueConstraintName(e,t){const n=[...t];n.sort();const a=`${this.getTableName(e).replace(".","_")}_${n.join("_")}`;return"UQ_"+RandomGenerator.sha1(a).substr(0,27)}relationConstraintName(e,t,n){const a=[...t];a.sort();let i=`${this.getTableName(e).replace(".","_")}_${a.join("_")}`;return n&&(i+=`_${n}`),"REL_"+RandomGenerator.sha1(i).substr(0,26)}defaultConstraintName(e,t){const n=`${this.getTableName(e).replace(".","_")}_${t}`;return"DF_"+RandomGenerator.sha1(n).substr(0,27)}foreignKeyName(e,t,n,a){const i=[...t];i.sort();const s=`${this.getTableName(e).replace(".","_")}_${i.join("_")}`;return"FK_"+RandomGenerator.sha1(s).substr(0,27)}indexName(e,t,n){const a=[...t];a.sort();let i=`${this.getTableName(e).replace(".","_")}_${a.join("_")}`;return n&&(i+=`_${n}`),"IDX_"+RandomGenerator.sha1(i).substr(0,26)}checkConstraintName(e,t,n){const a=`${this.getTableName(e).replace(".","_")}_${t}`,i="CHK_"+RandomGenerator.sha1(a).substr(0,26);return n?`${i}_ENUM`:i}exclusionConstraintName(e,t){const n=`${this.getTableName(e).replace(".","_")}_${t}`;return"XCL_"+RandomGenerator.sha1(n).substr(0,26)}joinColumnName(e,t){return(0,a.eV)(e+"_"+t)}joinTableName(e,t,n,i){return(0,a.fu)(e+"_"+n.replace(/\./gi,"_")+"_"+t)}joinTableColumnDuplicationPrefix(e,t){return e+"_"+t}joinTableColumnName(e,t,n){return(0,a.eV)(e+"_"+(n||t))}joinTableInverseColumnName(e,t,n){return this.joinTableColumnName(e,t,n)}prefixTableName(e,t){return e+t}eagerJoinRelationAlias(e,t){return e+"_"+t.replace(".","_")}}var i=n(1507);class TableColumn{constructor(e){this["@instanceof"]=Symbol.for("TableColumn"),this.isNullable=!1,this.isGenerated=!1,this.isPrimary=!1,this.isUnique=!1,this.isArray=!1,this.length="",this.zerofill=!1,this.unsigned=!1,e&&(this.name=e.name,this.type=e.type||"",this.length=e.length||"",this.width=e.width,this.charset=e.charset,this.collation=e.collation,this.precision=e.precision,this.scale=e.scale,this.zerofill=e.zerofill||!1,this.unsigned=!!this.zerofill||(e.unsigned||!1),this.default=e.default,this.onUpdate=e.onUpdate,this.isNullable=e.isNullable||!1,this.isGenerated=e.isGenerated||!1,this.generationStrategy=e.generationStrategy,this.generatedIdentity=e.generatedIdentity,this.isPrimary=e.isPrimary||!1,this.isUnique=e.isUnique||!1,this.isArray=e.isArray||!1,this.comment=e.comment,this.enum=e.enum,this.enumName=e.enumName,this.primaryKeyConstraintName=e.primaryKeyConstraintName,this.asExpression=e.asExpression,this.generatedType=e.generatedType,this.spatialFeatureType=e.spatialFeatureType,this.srid=e.srid)}clone(){return new TableColumn({name:this.name,type:this.type,length:this.length,width:this.width,charset:this.charset,collation:this.collation,precision:this.precision,scale:this.scale,zerofill:this.zerofill,unsigned:this.unsigned,enum:this.enum,enumName:this.enumName,primaryKeyConstraintName:this.primaryKeyConstraintName,asExpression:this.asExpression,generatedType:this.generatedType,default:this.default,onUpdate:this.onUpdate,isNullable:this.isNullable,isGenerated:this.isGenerated,generationStrategy:this.generationStrategy,generatedIdentity:this.generatedIdentity,isPrimary:this.isPrimary,isUnique:this.isUnique,isArray:this.isArray,comment:this.comment,spatialFeatureType:this.spatialFeatureType,srid:this.srid})}}class TableIndex{constructor(e){this["@instanceof"]=Symbol.for("TableIndex"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.isUnique=!!e.isUnique,this.isSpatial=!!e.isSpatial,this.isFulltext=!!e.isFulltext,this.isNullFiltered=!!e.isNullFiltered,this.parser=e.parser,this.where=e.where?e.where:""}clone(){return new TableIndex({name:this.name,columnNames:[...this.columnNames],isUnique:this.isUnique,isSpatial:this.isSpatial,isFulltext:this.isFulltext,isNullFiltered:this.isNullFiltered,parser:this.parser,where:this.where})}static create(e){return new TableIndex({name:e.name,columnNames:e.columns.map((e=>e.databaseName)),isUnique:e.isUnique,isSpatial:e.isSpatial,isFulltext:e.isFulltext,isNullFiltered:e.isNullFiltered,parser:e.parser,where:e.where})}}class TableForeignKey{constructor(e){this["@instanceof"]=Symbol.for("TableForeignKey"),this.columnNames=[],this.referencedColumnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.referencedColumnNames=e.referencedColumnNames,this.referencedDatabase=e.referencedDatabase,this.referencedSchema=e.referencedSchema,this.referencedTableName=e.referencedTableName,this.onDelete=e.onDelete,this.onUpdate=e.onUpdate,this.deferrable=e.deferrable}clone(){return new TableForeignKey({name:this.name,columnNames:[...this.columnNames],referencedColumnNames:[...this.referencedColumnNames],referencedDatabase:this.referencedDatabase,referencedSchema:this.referencedSchema,referencedTableName:this.referencedTableName,onDelete:this.onDelete,onUpdate:this.onUpdate,deferrable:this.deferrable})}static create(e,t){return new TableForeignKey({name:e.name,columnNames:e.columnNames,referencedColumnNames:e.referencedColumnNames,referencedDatabase:e.referencedEntityMetadata.database,referencedSchema:e.referencedEntityMetadata.schema,referencedTableName:e.referencedTablePath,onDelete:e.onDelete,onUpdate:e.onUpdate,deferrable:e.deferrable})}}class TableUtils{static createTableColumnOptions(e,t){return{name:e.databaseName,length:t.getColumnLength(e),width:e.width,charset:e.charset,collation:e.collation,precision:e.precision,scale:e.scale,zerofill:e.zerofill,unsigned:e.unsigned,asExpression:e.asExpression,generatedType:e.generatedType,default:t.normalizeDefault(e),onUpdate:e.onUpdate,comment:e.comment,isGenerated:e.isGenerated,generationStrategy:e.generationStrategy,generatedIdentity:e.generatedIdentity,isNullable:e.isNullable,type:t.normalizeType(e),isPrimary:e.isPrimary,isUnique:t.normalizeIsUnique(e),isArray:e.isArray||!1,enum:e.enum?e.enum.map((e=>e+"")):e.enum,enumName:e.enumName,primaryKeyConstraintName:e.primaryKeyConstraintName,spatialFeatureType:e.spatialFeatureType,srid:e.srid}}}class TableUnique{constructor(e){this["@instanceof"]=Symbol.for("TableUnique"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.deferrable=e.deferrable}clone(){return new TableUnique({name:this.name,columnNames:[...this.columnNames],deferrable:this.deferrable})}static create(e){return new TableUnique({name:e.name,columnNames:e.columns.map((e=>e.databaseName)),deferrable:e.deferrable})}}class TableCheck{constructor(e){this["@instanceof"]=Symbol.for("TableCheck"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.expression=e.expression}clone(){return new TableCheck({name:this.name,columnNames:this.columnNames?[...this.columnNames]:[],expression:this.expression})}static create(e){return new TableCheck({name:e.name,expression:e.expression})}}class TableExclusion{constructor(e){this["@instanceof"]=Symbol.for("TableExclusion"),this.name=e.name,this.expression=e.expression}clone(){return new TableExclusion({name:this.name,expression:this.expression})}static create(e){return new TableExclusion({name:e.name,expression:e.expression})}}class Table{constructor(e){this["@instanceof"]=Symbol.for("Table"),this.columns=[],this.indices=[],this.foreignKeys=[],this.uniques=[],this.checks=[],this.exclusions=[],this.justCreated=!1,e&&(this.database=e.database,this.schema=e.schema,this.name=e.name,e.columns&&(this.columns=e.columns.map((e=>new TableColumn(e)))),e.indices&&(this.indices=e.indices.map((e=>new TableIndex(e)))),e.foreignKeys&&(this.foreignKeys=e.foreignKeys.map((t=>new TableForeignKey({...t,referencedDatabase:(null==t?void 0:t.referencedDatabase)||e.database,referencedSchema:(null==t?void 0:t.referencedSchema)||e.schema})))),e.uniques&&(this.uniques=e.uniques.map((e=>new TableUnique(e)))),e.checks&&(this.checks=e.checks.map((e=>new TableCheck(e)))),e.exclusions&&(this.exclusions=e.exclusions.map((e=>new TableExclusion(e)))),void 0!==e.justCreated&&(this.justCreated=e.justCreated),this.engine=e.engine)}get primaryColumns(){return this.columns.filter((e=>e.isPrimary))}clone(){return new Table({schema:this.schema,database:this.database,name:this.name,columns:this.columns.map((e=>e.clone())),indices:this.indices.map((e=>e.clone())),foreignKeys:this.foreignKeys.map((e=>e.clone())),uniques:this.uniques.map((e=>e.clone())),checks:this.checks.map((e=>e.clone())),exclusions:this.exclusions.map((e=>e.clone())),justCreated:this.justCreated,engine:this.engine})}addColumn(e){this.columns.push(e)}removeColumn(e){const t=this.columns.find((t=>t.name===e.name));t&&this.columns.splice(this.columns.indexOf(t),1)}addUniqueConstraint(e){if(this.uniques.push(e),1===e.columnNames.length){const t=this.columns.find((t=>t.name===e.columnNames[0]));t&&(t.isUnique=!0)}}removeUniqueConstraint(e){const t=this.uniques.find((t=>t.name===e.name));if(t&&(this.uniques.splice(this.uniques.indexOf(t),1),1===t.columnNames.length)){const e=this.columns.find((e=>e.name===t.columnNames[0]));e&&(e.isUnique=!1)}}addCheckConstraint(e){this.checks.push(e)}removeCheckConstraint(e){const t=this.checks.find((t=>t.name===e.name));t&&this.checks.splice(this.checks.indexOf(t),1)}addExclusionConstraint(e){this.exclusions.push(e)}removeExclusionConstraint(e){const t=this.exclusions.find((t=>t.name===e.name));t&&this.exclusions.splice(this.exclusions.indexOf(t),1)}addForeignKey(e){this.foreignKeys.push(e)}removeForeignKey(e){const t=this.foreignKeys.find((t=>t.name===e.name));t&&this.foreignKeys.splice(this.foreignKeys.indexOf(t),1)}addIndex(e,t=!1){if(this.indices.push(e),1===e.columnNames.length&&e.isUnique&&t){const t=this.columns.find((t=>t.name===e.columnNames[0]));t&&(t.isUnique=!0)}}removeIndex(e,t=!1){const n=this.indices.find((t=>t.name===e.name));if(n&&(this.indices.splice(this.indices.indexOf(n),1),1===n.columnNames.length&&n.isUnique&&t)){const e=this.columns.find((e=>e.name===n.columnNames[0]));e&&(e.isUnique=this.indices.some((t=>1===t.columnNames.length&&t.columnNames[0]===e.name&&!!n.isUnique)))}}findColumnByName(e){return this.columns.find((t=>t.name===e))}findColumnIndices(e){return this.indices.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnForeignKeys(e){return this.foreignKeys.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnUniques(e){return this.uniques.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnChecks(e){return this.checks.filter((t=>!!t.columnNames.find((t=>t===e.name))))}static create(e,t){const n=e.database===t.database?void 0:e.database,a=e.schema===t.options.schema?void 0:e.schema,i={database:e.database,schema:e.schema,name:t.buildTableName(e.tableName,a,n),engine:e.engine,columns:e.columns.filter((e=>e)).map((e=>TableUtils.createTableColumnOptions(e,t))),indices:e.indices.filter((e=>!0===e.synchronize)).map((e=>TableIndex.create(e))),uniques:e.uniques.map((e=>TableUnique.create(e))),checks:e.checks.map((e=>TableCheck.create(e))),exclusions:e.exclusions.map((e=>TableExclusion.create(e)))};return new Table(i)}}class Migration{constructor(e,t,n,a){this.id=e,this.timestamp=t,this.name=n,this.instance=a}}class MssqlParameter{constructor(e,t,...n){this.value=e,this.type=t,this["@instanceof"]=Symbol.for("MssqlParameter"),this.params=[],this.params=n||[]}}var s=n(7378);class MigrationExecutor{constructor(e,t){this.connection=e,this.queryRunner=t,this.transaction="all";const{schema:n}=this.connection.driver.options,a=this.connection.driver.database;this.migrationsDatabase=a,this.migrationsSchema=n,this.migrationsTableName=e.options.migrationsTableName||"migrations",this.migrationsTable=this.connection.driver.buildTableName(this.migrationsTableName,n,a)}async executeMigration(e){return this.withQueryRunner((async t=>(await this.createMigrationsTableIfNotExist(t),await t.beforeMigration(),await e.instance.up(t),await t.afterMigration(),await this.insertExecutedMigration(t,e),e)))}async getAllMigrations(){return Promise.resolve(this.getMigrations())}async getExecutedMigrations(){return this.withQueryRunner((async e=>(await this.createMigrationsTableIfNotExist(e),await this.loadExecutedMigrations(e))))}async getPendingMigrations(){const e=await this.getAllMigrations(),t=await this.getExecutedMigrations();return e.filter((e=>!t.find((t=>t.name===e.name))))}insertMigration(e){return this.withQueryRunner((t=>this.insertExecutedMigration(t,e)))}deleteMigration(e){return this.withQueryRunner((t=>this.deleteExecutedMigration(t,e)))}async showMigrations(){let e=!1;const t=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(t);const n=await this.loadExecutedMigrations(t),a=this.getMigrations();for(const t of a){n.find((e=>e.name===t.name))?this.connection.logger.logSchemaBuild(`[X] ${t.name}`):(e=!0,this.connection.logger.logSchemaBuild(`[ ] ${t.name}`))}return this.queryRunner||await t.release(),e}async executePendingMigrations(){const e=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(e);const t=this.connection.driver.createSchemaBuilder();s.a.isRdbmsSchemaBuilder(t)&&await t.createMetadataTableIfNecessary(e);const n=await this.loadExecutedMigrations(e);let a=this.getLatestTimestampMigration(n);const i=this.getMigrations(),r=[],o=i.filter((e=>!n.find((t=>t.name===e.name))));if(!o.length)return this.connection.logger.logSchemaBuild("No migrations are pending"),this.queryRunner||await e.release(),[];this.connection.logger.logSchemaBuild(`${n.length} migrations are already loaded in the database.`),this.connection.logger.logSchemaBuild(`${i.length} migrations were found in the source code.`),a&&this.connection.logger.logSchemaBuild(`${a.name} is the last executed migration. It was executed on ${new Date(a.timestamp).toString()}.`),this.connection.logger.logSchemaBuild(`${o.length} migrations are new migrations must be executed.`);let c=!1;"all"!==this.transaction||e.isTransactionActive||(await e.startTransaction(),c=!0);try{for(const t of o)"each"!==this.transaction||e.isTransactionActive||(await e.startTransaction(),c=!0),await t.instance.up(e).catch((e=>{throw this.connection.logger.logMigration(`Migration "${t.name}" failed, error: ${null==e?void 0:e.message}`),e})).then((async()=>{await this.insertExecutedMigration(e,t),"each"===this.transaction&&c&&await e.commitTransaction()})).then((()=>{r.push(t),this.connection.logger.logSchemaBuild(`Migration ${t.name} has been executed successfully.`)}));"all"===this.transaction&&c&&await e.commitTransaction()}catch(t){if(c)try{await e.rollbackTransaction()}catch(e){}throw t}finally{this.queryRunner||await e.release()}return r}async undoLastMigration(){const e=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(e);const t=await this.loadExecutedMigrations(e);let n=this.getLatestExecutedMigration(t);if(!n)return void this.connection.logger.logSchemaBuild("No migrations was found in the database. Nothing to revert!");const a=this.getMigrations().find((e=>e.name===n.name));if(!a)throw new i.K_(`No migration ${n.name} was found in the source code. Make sure you have this migration in your codebase and its included in the connection options.`);this.connection.logger.logSchemaBuild(`${t.length} migrations are already loaded in the database.`),this.connection.logger.logSchemaBuild(`${n.name} is the last executed migration. It was executed on ${new Date(n.timestamp).toString()}.`),this.connection.logger.logSchemaBuild("Now reverting it...");let s=!1;"none"===this.transaction||e.isTransactionActive||(await e.startTransaction(),s=!0);try{await e.beforeMigration(),await a.instance.down(e),await e.afterMigration(),await this.deleteExecutedMigration(e,a),this.connection.logger.logSchemaBuild(`Migration ${a.name} has been reverted successfully.`),s&&await e.commitTransaction()}catch(t){if(s)try{await e.rollbackTransaction()}catch(e){}throw t}finally{this.queryRunner||await e.release()}}async createMigrationsTableIfNotExist(e){if("mongodb"===this.connection.driver.options.type)return;await e.hasTable(this.migrationsTable)||await e.createTable(new Table({database:this.migrationsDatabase,schema:this.migrationsSchema,name:this.migrationsTable,columns:[{name:"id",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationId}),isGenerated:!0,generationStrategy:"increment",isPrimary:!0,isNullable:!1},{name:"timestamp",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp}),isPrimary:!1,isNullable:!1},{name:"name",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}),isNullable:!1}]}))}async loadExecutedMigrations(e){if("mongodb"===this.connection.driver.options.type){const t=e;return await t.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).find().sort({_id:-1}).toArray()}return(await this.connection.manager.createQueryBuilder(e).select().orderBy(this.connection.driver.escape("id"),"DESC").from(this.migrationsTable,this.migrationsTableName).getRawMany()).map((e=>new Migration(parseInt(e.id),parseInt(e.timestamp),e.name)))}getMigrations(){const e=this.connection.migrations.map((e=>{const t=e.name||e.constructor.name,n=parseInt(t.substr(-13),10);if(!n||isNaN(n))throw new i.K_(`${t} migration name is wrong. Migration class name should have a JavaScript timestamp appended.`);return new Migration(void 0,n,t,e)}));return this.checkForDuplicateMigrations(e),e.sort(((e,t)=>e.timestamp-t.timestamp))}checkForDuplicateMigrations(e){const t=e.map((e=>e.name)),n=Array.from(new Set(t.filter(((e,n)=>t.indexOf(e)<n))));if(n.length>0)throw Error(`Duplicate migrations: ${n.join(", ")}`)}getLatestTimestampMigration(e){const t=e.map((e=>e)).sort(((e,t)=>-1*(e.timestamp-t.timestamp)));return t.length>0?t[0]:void 0}getLatestExecutedMigration(e){return e.length>0?e[0]:void 0}async insertExecutedMigration(e,t){const n={};if("mssql"===this.connection.driver.options.type?(n.timestamp=new MssqlParameter(t.timestamp,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp})),n.name=new MssqlParameter(t.name,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}))):(n.timestamp=t.timestamp,n.name=t.name),"mongodb"===this.connection.driver.options.type){const t=e;await t.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).insertOne(n)}else{const t=e.manager.createQueryBuilder();await t.insert().into(this.migrationsTable).values(n).execute()}}async deleteExecutedMigration(e,t){const n={};if("mssql"===this.connection.driver.options.type?(n.timestamp=new MssqlParameter(t.timestamp,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp})),n.name=new MssqlParameter(t.name,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}))):(n.timestamp=t.timestamp,n.name=t.name),"mongodb"===this.connection.driver.options.type){const t=e;await t.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).deleteOne(n)}else{const t=e.manager.createQueryBuilder();await t.delete().from(this.migrationsTable).where(`${t.escape("timestamp")} = :timestamp`).andWhere(`${t.escape("name")} = :name`).setParameters(n).execute()}}async withQueryRunner(e){const t=this.queryRunner||this.connection.createQueryRunner();try{return e(t)}finally{this.queryRunner||await t.release()}}}var r=n(9689),o=n(393);function c(e,t,n){let a=[],s={};return function r(o){s[o]=!0,a.push(o),e[o].forEach((function(e){if(s[e]){if(a.indexOf(e)>=0)throw a.push(e),new i.K_(`Dependency Cycle Found: ${a.join(" -> ")}`)}else r(e)})),a.pop(),t&&0!==e[o].length||-1!==n.indexOf(o)||n.push(o)}}class DepGraph{constructor(){this.nodes={},this.outgoingEdges={},this.incomingEdges={}}addNode(e,t){this.hasNode(e)||(this.nodes[e]=2===arguments.length?t:e,this.outgoingEdges[e]=[],this.incomingEdges[e]=[])}removeNode(e){this.hasNode(e)&&(delete this.nodes[e],delete this.outgoingEdges[e],delete this.incomingEdges[e],[this.incomingEdges,this.outgoingEdges].forEach((function(t){Object.keys(t).forEach((function(n){let a=t[n].indexOf(e);a>=0&&t[n].splice(a,1)}),this)})))}hasNode(e){return this.nodes.hasOwnProperty(e)}getNodeData(e){if(this.hasNode(e))return this.nodes[e];throw new i.K_(`Node does not exist: ${e}`)}setNodeData(e,t){if(!this.hasNode(e))throw new i.K_(`Node does not exist: ${e}`);this.nodes[e]=t}addDependency(e,t){if(!this.hasNode(e))throw new i.K_(`Node does not exist: ${e}`);if(!this.hasNode(t))throw new i.K_(`Node does not exist: ${t}`);return-1===this.outgoingEdges[e].indexOf(t)&&this.outgoingEdges[e].push(t),-1===this.incomingEdges[t].indexOf(e)&&this.incomingEdges[t].push(e),!0}removeDependency(e,t){let n;this.hasNode(e)&&(n=this.outgoingEdges[e].indexOf(t),n>=0&&this.outgoingEdges[e].splice(n,1)),this.hasNode(t)&&(n=this.incomingEdges[t].indexOf(e),n>=0&&this.incomingEdges[t].splice(n,1))}dependenciesOf(e,t){if(this.hasNode(e)){let n=[];c(this.outgoingEdges,t,n)(e);let a=n.indexOf(e);return a>=0&&n.splice(a,1),n}throw new i.K_(`Node does not exist: ${e}`)}dependantsOf(e,t){if(this.hasNode(e)){let n=[];c(this.incomingEdges,t,n)(e);let a=n.indexOf(e);return a>=0&&n.splice(a,1),n}throw new i.K_(`Node does not exist: ${e}`)}overallOrder(e){let t=this,n=[],a=Object.keys(this.nodes);if(0===a.length)return n;{let i=c(this.outgoingEdges,!1,[]);a.forEach((function(e){i(e)}));let s=c(this.outgoingEdges,e,n);return a.filter((function(e){return 0===t.incomingEdges[e].length})).forEach((function(e){s(e)})),n}}}var l=n(8970),u=n(4162),h=n(2882),d=n(7677);class EntityMetadataValidator{validateMany(e,t){e.forEach((n=>this.validate(n,e,t))),this.validateDependencies(e),this.validateEagerRelations(e)}validate(e,t,n){if(!e.primaryColumns.length&&!e.isJunction)throw new r.H(e);if(e.primaryColumns.length>1){if(!e.primaryColumns.every(((e,t,n)=>e.primaryKeyConstraintName===n[0].primaryKeyConstraintName)))throw new i.K_(`Entity ${e.name} has multiple primary columns with different constraint names. Constraint names should be the equal.`)}if("STI"===e.inheritancePattern||"entity-child"===e.tableType){if(!e.discriminatorColumn)throw new i.K_(`Entity ${e.name} using single-table inheritance, it should also have a discriminator column. Did you forget to put discriminator column options?`);if(void 0===e.discriminatorValue)throw new i.K_(`Entity ${e.name} has an undefined discriminator value. Discriminator value should be defined.`);const n=t.find((t=>t!==e&&("STI"===t.inheritancePattern||"entity-child"===t.tableType)&&t.tableName===e.tableName&&t.discriminatorValue===e.discriminatorValue&&t.inheritanceTree.some((t=>-1!==e.inheritanceTree.indexOf(t)))));if(n)throw new i.K_(`Entities ${e.name} and ${n.name} have the same discriminator values. Make sure they are different while using the @ChildEntity decorator.`)}if(e.relationCounts.forEach((e=>{if(e.relation.isManyToOne||e.relation.isOneToOne)throw new i.K_("Relation count can not be implemented on ManyToOne or OneToOne relations.")})),"mongodb"!==n.options.type&&e.columns.forEach((t=>{const a=n.normalizeType(t);if(-1===n.supportedDataTypes.indexOf(a))throw new l.q(t,a,n.options.type);if(t.length&&-1===n.withLengthColumnTypes.indexOf(a))throw new i.K_(`Column ${t.propertyName} of Entity ${e.name} does not support length property.`);if("enum"===t.type&&!t.enum&&!t.enumName)throw new i.K_(`Column "${t.propertyName}" of Entity "${e.name}" is defined as enum, but missing "enum" or "enumName" properties.`)})),d.z.isMySQLFamily(n)||"aurora-mysql"===n.options.type){if(e.columns.filter((e=>e.isGenerated&&"uuid"!==e.generationStrategy)).length>1)throw new i.K_(`Error in ${e.name} entity. There can be only one auto-increment column in MySql table.`)}if(d.z.isMySQLFamily(n)){if(0===t.filter((e=>e.database)).length&&!n.database)throw new u.H("database")}if("mssql"===n.options.type){if(e.columns.filter((e=>e.charset)).length>1)throw new i.K_("Character set specifying is not supported in Sql Server")}if("postgres"===n.options.type){const t=e.columns.find((e=>e.asExpression&&(!e.generatedType||"VIRTUAL"===e.generatedType)));if(t)throw new i.K_(`Column "${t.propertyName}" of Entity "${e.name}" is defined as VIRTUAL, but Postgres supports only STORED generated columns.`)}const a=e.create(void 0,{fromDeserializer:!0});e.relations.forEach((e=>{if(e.isManyToMany||e.isOneToMany){if(!1===e.persistenceEnabled)return;const t=e.getEntityValue(a);if(Array.isArray(t))throw new h.j(e)}})),e.relations.forEach((e=>{})),e.relations.forEach((t=>{if(t.isCascadeRemove&&t.inverseRelation&&t.inverseRelation.isCascadeRemove)throw new i.K_(`Relation ${e.name}#${t.propertyName} and ${t.inverseRelation.entityMetadata.name}#${t.inverseRelation.propertyName} both has cascade remove set. This may lead to unexpected circular removals. Please set cascade remove only from one side of relationship.`)})),e.eagerRelations.forEach((e=>{}))}validateDependencies(e){const t=new DepGraph;e.forEach((e=>{t.addNode(e.name)})),e.forEach((e=>{e.relationsWithJoinColumns.filter((e=>!e.isNullable)).forEach((n=>{t.addDependency(e.name,n.inverseEntityMetadata.name)}))}));try{t.overallOrder()}catch(e){throw new o.u(e.toString().replace("Error: Dependency Cycle Found: ",""))}}validateEagerRelations(e){e.forEach((e=>{e.eagerRelations.forEach((t=>{if(t.inverseRelation&&t.inverseRelation.isEager)throw new i.K_(`Circular eager relations are disallowed. ${e.targetName}#${t.propertyPath} contains "eager: true", and its inverse side ${t.inverseEntityMetadata.targetName}#${t.inverseRelation.propertyPath} contains "eager: true" as well. Remove "eager: true" from one side of the relation.`)}))}))}}var p=n(497),m=n(1865),y=n(8522);class MongoDriver{}class MongoEntityManager{}class MongoRepository{}class PostgresDriver{}class CockroachDriver{}class SqlServerDriver{}class SapDriver{}class MysqlDriver{}class OracleDriver{}class SqliteDriver{}class BetterSqlite3Driver{}var f=n(5066),g=n(5093);class TreeRepositoryUtils{static createRelationMaps(e,t,n,a){return a.map((a=>{const i=t.treeParentRelation.joinColumns[0],s=i.givenDatabaseName||i.databaseName,r=a[n+"_"+t.primaryColumns[0].databaseName],o=a[n+"_"+s];return{id:e.connection.driver.prepareHydratedValue(r,t.primaryColumns[0]),parentId:e.connection.driver.prepareHydratedValue(o,i)}}))}static buildChildrenEntityTree(e,t,n,a,i){const s=e.treeChildrenRelation.propertyName;if(0===i.depth)return void(t[s]=[]);const r=e.primaryColumns[0].getEntityValue(t),o=a.filter((e=>e.parentId===r)),c=new Set(o.map((e=>e.id)));t[s]=n.filter((t=>c.has(e.primaryColumns[0].getEntityValue(t)))),t[s].forEach((t=>{TreeRepositoryUtils.buildChildrenEntityTree(e,t,n,a,{...i,depth:i.depth-1})}))}static buildParentEntityTree(e,t,n,a){const i=e.treeParentRelation.propertyName,s=e.primaryColumns[0].getEntityValue(t),r=a.find((e=>e.id===s)),o=n.find((t=>!!r&&e.primaryColumns[0].getEntityValue(t)===r.parentId));o&&(t[i]=o,TreeRepositoryUtils.buildParentEntityTree(e,t[i],n,a))}}class Repository{constructor(e,t,n){this.target=e,this.manager=t,this.queryRunner=n}get metadata(){return this.manager.connection.getMetadata(this.target)}createQueryBuilder(e,t){return this.manager.createQueryBuilder(this.metadata.target,e||this.metadata.targetName,t||this.queryRunner)}hasId(e){return this.manager.hasId(this.metadata.target,e)}getId(e){return this.manager.getId(this.metadata.target,e)}create(e){return this.manager.create(this.metadata.target,e)}merge(e,...t){return this.manager.merge(this.metadata.target,e,...t)}preload(e){return this.manager.preload(this.metadata.target,e)}save(e,t){return this.manager.save(this.metadata.target,e,t)}remove(e,t){return this.manager.remove(this.metadata.target,e,t)}softRemove(e,t){return this.manager.softRemove(this.metadata.target,e,t)}recover(e,t){return this.manager.recover(this.metadata.target,e,t)}insert(e){return this.manager.insert(this.metadata.target,e)}update(e,t){return this.manager.update(this.metadata.target,e,t)}upsert(e,t){return this.manager.upsert(this.metadata.target,e,t)}delete(e){return this.manager.delete(this.metadata.target,e)}softDelete(e){return this.manager.softDelete(this.metadata.target,e)}restore(e){return this.manager.restore(this.metadata.target,e)}count(e){return this.manager.count(this.metadata.target,e)}countBy(e){return this.manager.countBy(this.metadata.target,e)}async find(e){return this.manager.find(this.metadata.target,e)}async findBy(e){return this.manager.findBy(this.metadata.target,e)}findAndCount(e){return this.manager.findAndCount(this.metadata.target,e)}findAndCountBy(e){return this.manager.findAndCountBy(this.metadata.target,e)}async findByIds(e){return this.manager.findByIds(this.metadata.target,e)}async findOne(e){return this.manager.findOne(this.metadata.target,e)}async findOneBy(e){return this.manager.findOneBy(this.metadata.target,e)}async findOneById(e){return this.manager.findOneById(this.metadata.target,e)}async findOneOrFail(e){return this.manager.findOneOrFail(this.metadata.target,e)}async findOneByOrFail(e){return this.manager.findOneByOrFail(this.metadata.target,e)}query(e,t){return this.manager.query(e,t)}clear(){return this.manager.clear(this.metadata.target)}increment(e,t,n){return this.manager.increment(this.metadata.target,e,t,n)}decrement(e,t,n){return this.manager.decrement(this.metadata.target,e,t,n)}extend(e){const t=this.constructor,{target:n,manager:a,queryRunner:i}=this,s=new class extends t{}(n,a,i);return Object.assign(s,e),s}}class TreeRepository extends Repository{async findTrees(e){const t=await this.findRoots(e);return await Promise.all(t.map((t=>this.findDescendantsTree(t,e)))),t}findRoots(e){const t=this.metadata.treeParentRelation.joinColumns[0],n=t.givenDatabaseName||t.databaseName,a=this.createQueryBuilder("treeEntity");return g.Z.applyOptionsToTreeQueryBuilder(a,e),a.where(`${(e=>this.manager.connection.driver.escape(e))("treeEntity")}.${(e=>this.manager.connection.driver.escape(e))(n)} IS NULL`).getMany()}findDescendants(e,t){const n=this.createDescendantsQueryBuilder("treeEntity","treeClosure",e);return g.Z.applyOptionsToTreeQueryBuilder(n,t),n.getMany()}async findDescendantsTree(e,t){const n=this.createDescendantsQueryBuilder("treeEntity","treeClosure",e);g.Z.applyOptionsToTreeQueryBuilder(n,t);const a=await n.getRawAndEntities(),i=TreeRepositoryUtils.createRelationMaps(this.manager,this.metadata,"treeEntity",a.raw);return TreeRepositoryUtils.buildChildrenEntityTree(this.metadata,e,a.entities,i,{depth:-1,...t}),e}countDescendants(e){return this.createDescendantsQueryBuilder("treeEntity","treeClosure",e).getCount()}createDescendantsQueryBuilder(e,t,n){const a=e=>this.manager.connection.driver.escape(e);if("closure-table"===this.metadata.treeType){const i=this.metadata.closureJunctionTable.descendantColumns.map((n=>a(t)+"."+a(n.propertyPath)+" = "+a(e)+"."+a(n.referencedColumn.propertyPath))).join(" AND "),s={},r=this.metadata.closureJunctionTable.ancestorColumns.map((e=>(s[e.referencedColumn.propertyName]=e.referencedColumn.getEntityValue(n),a(t)+"."+a(e.propertyPath)+" = :"+e.referencedColumn.propertyName))).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.closureJunctionTable.tableName,t,i).where(r).setParameters(s)}if("nested-set"===this.metadata.treeType){const t=e+"."+this.metadata.nestedSetLeftColumn.propertyPath+" BETWEEN joined."+this.metadata.nestedSetLeftColumn.propertyPath+" AND joined."+this.metadata.nestedSetRightColumn.propertyPath,a={},i=this.metadata.treeParentRelation.joinColumns.map((e=>{const t=e.referencedColumn.propertyPath.replace(".","_");return a[t]=e.referencedColumn.getEntityValue(n),"joined."+e.referencedColumn.propertyPath+" = :"+t})).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.targetName,"joined",t).where(i,a)}if("materialized-path"===this.metadata.treeType)return this.createQueryBuilder(e).where((t=>{const a=t.subQuery().select(`${this.metadata.targetName}.${this.metadata.materializedPathColumn.propertyPath}`,"path").from(this.metadata.target,this.metadata.targetName).whereInIds(this.metadata.getEntityIdMap(n));return d.z.isSQLiteFamily(this.manager.connection.driver)?`${e}.${this.metadata.materializedPathColumn.propertyPath} LIKE ${a.getQuery()} || '%'`:`${e}.${this.metadata.materializedPathColumn.propertyPath} LIKE NULLIF(CONCAT(${a.getQuery()}, '%'), '%')`}));throw new f.K("Supported only in tree entities")}findAncestors(e,t){const n=this.createAncestorsQueryBuilder("treeEntity","treeClosure",e);return g.Z.applyOptionsToTreeQueryBuilder(n,t),n.getMany()}async findAncestorsTree(e,t){const n=this.createAncestorsQueryBuilder("treeEntity","treeClosure",e);g.Z.applyOptionsToTreeQueryBuilder(n,t);const a=await n.getRawAndEntities(),i=TreeRepositoryUtils.createRelationMaps(this.manager,this.metadata,"treeEntity",a.raw);return TreeRepositoryUtils.buildParentEntityTree(this.metadata,e,a.entities,i),e}countAncestors(e){return this.createAncestorsQueryBuilder("treeEntity","treeClosure",e).getCount()}createAncestorsQueryBuilder(e,t,n){if("closure-table"===this.metadata.treeType){const a=this.metadata.closureJunctionTable.ancestorColumns.map((n=>t+"."+n.propertyPath+" = "+e+"."+n.referencedColumn.propertyPath)).join(" AND "),i={},s=this.metadata.closureJunctionTable.descendantColumns.map((e=>(i[e.referencedColumn.propertyName]=e.referencedColumn.getEntityValue(n),t+"."+e.propertyPath+" = :"+e.referencedColumn.propertyName))).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.closureJunctionTable.tableName,t,a).where(s).setParameters(i)}if("nested-set"===this.metadata.treeType){const t="joined."+this.metadata.nestedSetLeftColumn.propertyPath+" BETWEEN "+e+"."+this.metadata.nestedSetLeftColumn.propertyPath+" AND "+e+"."+this.metadata.nestedSetRightColumn.propertyPath,a={},i=this.metadata.treeParentRelation.joinColumns.map((e=>{const t=e.referencedColumn.propertyPath.replace(".","_");return a[t]=e.referencedColumn.getEntityValue(n),"joined."+e.referencedColumn.propertyPath+" = :"+t})).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.targetName,"joined",t).where(i,a)}if("materialized-path"===this.metadata.treeType)return this.createQueryBuilder(e).where((t=>{const a=t.subQuery().select(`${this.metadata.targetName}.${this.metadata.materializedPathColumn.propertyPath}`,"path").from(this.metadata.target,this.metadata.targetName).whereInIds(this.metadata.getEntityIdMap(n));return d.z.isSQLiteFamily(this.manager.connection.driver)?`${a.getQuery()} LIKE ${e}.${this.metadata.materializedPathColumn.propertyPath} || '%'`:`${a.getQuery()} LIKE CONCAT(${e}.${this.metadata.materializedPathColumn.propertyPath}, '%')`}));throw new f.K("Supported only in tree entities")}extend(e){const t=this.constructor,{target:n,manager:a,queryRunner:i}=this,s=new class extends t{}(n,a,i);return Object.assign(s,e),s}}var E=n(7264);class PlainObjectToNewEntityTransformer{transform(e,t,n,a=!1){return this.groupAndTransform(e,t,n,a),e}groupAndTransform(e,t,n,a=!1){n.nonVirtualColumns.forEach((n=>{const a=n.getEntityValue(t);void 0!==a&&n.setEntityValue(e,a)})),n.relations.length&&n.relations.forEach((n=>{let i=n.getEntityValue(e);const s=n.getEntityValue(t,a);if(void 0!==s)if(n.isOneToMany||n.isManyToMany){if(!Array.isArray(s))return;i||(i=[],n.setEntityValue(e,i)),s.forEach((e=>{let t=i.find((t=>n.inverseEntityMetadata.compareEntities(e,t)));t||(t=n.inverseEntityMetadata.create(void 0,{fromDeserializer:!0}),i.push(t)),this.groupAndTransform(t,e,n.inverseEntityMetadata,a)}))}else{if(!E.g.isObject(s))return void(E.g.isObject(i)||n.setEntityValue(e,s));i||(i=n.inverseEntityMetadata.create(void 0,{fromDeserializer:!0}),n.setEntityValue(e,i)),this.groupAndTransform(i,s,n.inverseEntityMetadata,a)}}))}}class LoadMapItem{constructor(e,t,n,a){this.plainEntity=e,this.metadata=t,this.parentLoadMapItem=n,this.relation=a}get target(){return this.metadata.target}get id(){return this.metadata.getEntityIdMixedMap(this.plainEntity)}}class LoadMap{constructor(){this.loadMapItems=[]}get mainLoadMapItem(){return this.loadMapItems.find((e=>!e.relation&&!e.parentLoadMapItem))}addLoadMap(e){this.loadMapItems.find((t=>t.target===e.target&&t.id===e.id))||this.loadMapItems.push(e)}fillEntities(e,t){t.forEach((t=>{const n=this.loadMapItems.find((n=>n.target===e&&n.metadata.compareEntities(t,n.plainEntity)));n&&(n.entity=t)}))}groupByTargetIds(){const e=[];return this.loadMapItems.forEach((t=>{let n=e.find((e=>e.target===t.target));n||(n={target:t.target,ids:[]},e.push(n)),n.ids.push(t.id)})),e}}class PlainObjectToDatabaseEntityTransformer{constructor(e){this.manager=e}async transform(e,t){if(!t.hasAllPrimaryKeys(e))return Promise.reject("Given object does not have a primary column, cannot transform it to database entity.");const n=new LoadMap,a=(e,i,s,r)=>{const o=new LoadMapItem(e,i,s,r);n.addLoadMap(o),i.extractRelationValuesFromEntity(e,t.relations).filter((e=>null!=e)).forEach((([e,t,n])=>a(t,n,o,e)))};return a(e,t),await Promise.all(n.groupByTargetIds().map((e=>this.manager.findByIds(e.target,e.ids).then((t=>n.fillEntities(e.target,t)))))),n.loadMapItems.forEach((e=>{e.relation&&e.entity&&e.parentLoadMapItem&&e.parentLoadMapItem.entity&&(e.relation.isManyToMany||e.relation.isOneToMany?(e.parentLoadMapItem.entity[e.relation.propertyName]||(e.parentLoadMapItem.entity[e.relation.propertyName]=[]),e.parentLoadMapItem.entity[e.relation.propertyName].push(e.entity)):e.parentLoadMapItem.entity[e.relation.propertyName]=e.entity)})),n.mainLoadMapItem?n.mainLoadMapItem.entity:void 0}}var T=n(3095),b=n(8714);var N=n(8360);class SubjectTopoligicalSorter{constructor(e){this.subjects=[...e],this.metadatas=this.getUniqueMetadatas(this.subjects)}sort(e){if(!this.metadatas.length)return this.subjects;const t=[];if("delete"===e){const e=this.subjects.filter((e=>!e.entity&&!e.databaseEntity));t.push(...e),this.removeAlreadySorted(e)}const n=this.getNonNullableDependencies();let a=this.toposort(n);"insert"===e&&(a=a.reverse()),a.forEach((e=>{const n=this.subjects.filter((t=>t.metadata.targetName===e));t.push(...n),this.removeAlreadySorted(n)}));const i=this.getDependencies();let s=this.toposort(i);return"insert"===e&&(s=s.reverse()),s.forEach((e=>{const n=this.subjects.filter((t=>t.metadata.targetName===e));t.push(...n),this.removeAlreadySorted(n)})),t.push(...this.subjects),t}removeAlreadySorted(e){e.forEach((e=>{this.subjects.splice(this.subjects.indexOf(e),1)}))}getUniqueMetadatas(e){const t=[];return e.forEach((e=>{-1===t.indexOf(e.metadata)&&t.push(e.metadata)})),t}getNonNullableDependencies(){return this.metadatas.reduce(((e,t)=>(t.relationsWithJoinColumns.forEach((n=>{n.isNullable||e.push([t.targetName,n.inverseEntityMetadata.targetName])})),e)),[])}getDependencies(){return this.metadatas.reduce(((e,t)=>(t.relationsWithJoinColumns.forEach((n=>{n.inverseEntityMetadata!==t&&e.push([t.targetName,n.inverseEntityMetadata.targetName])})),e)),[])}toposort(e){const t=function(e){let t=[];for(let n=0,a=e.length;n<a;n++){let a=e[n];t.indexOf(a[0])<0&&t.push(a[0]),t.indexOf(a[1])<0&&t.push(a[1])}return t}(e);let n=t.length,a=new Array(n),s={},r=n;for(;r--;)s[r]||o(t[r],r,[]);function o(r,c,l){if(l.indexOf(r)>=0)throw new i.K_("Cyclic dependency: "+JSON.stringify(r));if(!~t.indexOf(r))throw new i.K_("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(r));if(s[c])return;s[c]=!0;let u=e.filter((function(e){return e[0]===r}));if(c=u.length){let e=l.concat(r);do{let n=u[--c][1];o(n,t.indexOf(n),e)}while(c)}a[--n]=r}return a}}Math.pow(10,8);var w=36e5;function C(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function A(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var M={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},R=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,v=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,S=/^([+-])(\d{2})(?::?(\d{2}))?$/;function O(e){var t,n={},a=e.split(M.dateTimeDelimiter);if(a.length>2)return n;if(/:/.test(a[0])?t=a[0]:(n.date=a[0],t=a[1],M.timeZoneDelimiter.test(n.date)&&(n.date=e.split(M.timeZoneDelimiter)[0],t=e.substr(n.date.length,e.length))),t){var i=M.timezone.exec(t);i?(n.time=t.replace(i[1],""),n.timezone=i[1]):n.time=t}return n}function x(e,t){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),a=e.match(n);if(!a)return{year:NaN,restDateString:""};var i=a[1]?parseInt(a[1]):null,s=a[2]?parseInt(a[2]):null;return{year:null===s?i:100*s,restDateString:e.slice((a[1]||a[2]).length)}}function P(e,t){if(null===t)return new Date(NaN);var n=e.match(R);if(!n)return new Date(NaN);var a=!!n[4],i=I(n[1]),s=I(n[2])-1,r=I(n[3]),o=I(n[4]),c=I(n[5])-1;if(a)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,o,c)?function(e,t,n){var a=new Date(0);a.setUTCFullYear(e,0,4);var i=a.getUTCDay()||7,s=7*(t-1)+n+1-i;return a.setUTCDate(a.getUTCDate()+s),a}(t,o,c):new Date(NaN);var l=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=($[t]||(q(e)?29:28))}(t,s,r)&&function(e,t){return t>=1&&t<=(q(e)?366:365)}(t,i)?(l.setUTCFullYear(t,s,Math.max(i,r)),l):new Date(NaN)}function I(e){return e?parseInt(e):1}function D(e){var t=e.match(v);if(!t)return NaN;var n=L(t[1]),a=L(t[2]),i=L(t[3]);return function(e,t,n){if(24===e)return 0===t&&0===n;return n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(n,a,i)?n*w+6e4*a+1e3*i:NaN}function L(e){return e&&parseFloat(e.replace(",","."))||0}function _(e){if("Z"===e)return 0;var t=e.match(S);if(!t)return 0;var n="+"===t[1]?-1:1,a=parseInt(t[2]),i=t[3]&&parseInt(t[3])||0;return function(e,t){return t>=0&&t<=59}(0,i)?n*(a*w+6e4*i):NaN}var $=[31,null,31,30,31,30,31,31,30,31,30,31];function q(e){return e%400==0||e%4==0&&e%100!=0}class DateUtils{static normalizeHydratedDate(e){return e&&"string"==typeof e?new Date(e):e}static mixedDateToDateString(e){return e instanceof Date?this.formatZerolessValue(e.getFullYear())+"-"+this.formatZerolessValue(e.getMonth()+1)+"-"+this.formatZerolessValue(e.getDate()):e}static mixedDateToDate(e,t=!1,n=!0){let a="string"==typeof e?function(e,t){var n;C(1,arguments);var a=A(null!==(n=null==t?void 0:t.additionalDigits)&&void 0!==n?n:2);if(2!==a&&1!==a&&0!==a)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var i,s=O(e);if(s.date){var r=x(s.date,a);i=P(r.restDateString,r.year)}if(!i||isNaN(i.getTime()))return new Date(NaN);var o,c=i.getTime(),l=0;if(s.time&&(l=D(s.time),isNaN(l)))return new Date(NaN);if(!s.timezone){var u=new Date(c+l),h=new Date(0);return h.setFullYear(u.getUTCFullYear(),u.getUTCMonth(),u.getUTCDate()),h.setHours(u.getUTCHours(),u.getUTCMinutes(),u.getUTCSeconds(),u.getUTCMilliseconds()),h}return o=_(s.timezone),isNaN(o)?new Date(NaN):new Date(c+l+o)}(e):e;return t&&(a=new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate(),a.getUTCHours(),a.getUTCMinutes(),a.getUTCSeconds(),a.getUTCMilliseconds())),n||a.setUTCMilliseconds(0),a}static mixedDateToTimeString(e,t=!1){return e instanceof Date?this.formatZerolessValue(e.getHours())+":"+this.formatZerolessValue(e.getMinutes())+(t?"":":"+this.formatZerolessValue(e.getSeconds())):e}static mixedTimeToDate(e){if("string"==typeof e){const[t,n,a]=e.split(":"),i=new Date;return t&&i.setHours(parseInt(t)),n&&i.setMinutes(parseInt(n)),a&&i.setSeconds(parseInt(a)),i}return e}static mixedTimeToString(e,t=!1){return"string"==typeof(e=e instanceof Date?e.getHours()+":"+e.getMinutes()+(t?"":":"+e.getSeconds()):e)?e.split(":").map((e=>1===e.length?"0"+e:e)).join(":"):e}static mixedDateToDatetimeString(e,t){if("string"==typeof e&&(e=new Date(e)),e instanceof Date){let n=this.formatZerolessValue(e.getFullYear())+"-"+this.formatZerolessValue(e.getMonth()+1)+"-"+this.formatZerolessValue(e.getDate())+" "+this.formatZerolessValue(e.getHours())+":"+this.formatZerolessValue(e.getMinutes())+":"+this.formatZerolessValue(e.getSeconds());t&&(n+=`.${this.formatMilliseconds(e.getMilliseconds())}`),e=n}return e}static mixedDateToUtcDatetimeString(e){return"string"==typeof e&&(e=new Date(e)),e instanceof Date?this.formatZerolessValue(e.getUTCFullYear())+"-"+this.formatZerolessValue(e.getUTCMonth()+1)+"-"+this.formatZerolessValue(e.getUTCDate())+" "+this.formatZerolessValue(e.getUTCHours())+":"+this.formatZerolessValue(e.getUTCMinutes())+":"+this.formatZerolessValue(e.getUTCSeconds())+"."+this.formatMilliseconds(e.getUTCMilliseconds()):e}static simpleArrayToString(e){return Array.isArray(e)?e.map((e=>String(e))).join(","):e}static stringToSimpleArray(e){return"string"==typeof e?e.length>0?e.split(","):[]:e}static simpleJsonToString(e){return JSON.stringify(e)}static stringToSimpleJson(e){return"string"==typeof e?JSON.parse(e):e}static simpleEnumToString(e){return""+e}static stringToSimpleEnum(e,t){return t.enum&&!isNaN(e)&&t.enum.indexOf(parseInt(e))>=0&&(e=parseInt(e)),e}static formatZerolessValue(e){return e<10?"0"+e:String(e)}static formatMilliseconds(e){return e<10?"00"+e:e<100?"0"+e:String(e)}}var j=n(5738),B=n(8535);class SubjectChangedColumnsComputer{compute(e){e.forEach((t=>{this.computeDiffColumns(t),this.computeDiffRelationalColumns(e,t)}))}computeDiffColumns(e){e.entity&&e.metadata.columns.forEach((t=>{if(t.isVirtual||t.isDiscriminator)return;const n=e.changeMaps.find((e=>e.column===t));n&&e.changeMaps.splice(e.changeMaps.indexOf(n),1);const a=t.getEntityValue(e.entity);if(void 0!==a){if(e.databaseEntity){const n="json"!==t.type&&"jsonb"!==t.type;let i=t.getEntityValue(e.databaseEntity,n);if(t.relationMetadata){const n=t.relationMetadata.getEntityValue(e.entity);if(null!=n)return}let s=a;if(null!==a){switch(t.type){case"date":s=DateUtils.mixedDateToDateString(a);break;case"time":case"time with time zone":case"time without time zone":case"timetz":s=DateUtils.mixedDateToTimeString(a);break;case"datetime":case"datetime2":case Date:case"timestamp":case"timestamp without time zone":case"timestamp with time zone":case"timestamp with local time zone":case"timestamptz":s=DateUtils.mixedDateToUtcDatetimeString(a),i=DateUtils.mixedDateToUtcDatetimeString(i);break;case"json":case"jsonb":if(j.s.deepCompare(a,i))return;break;case"simple-array":s=DateUtils.simpleArrayToString(a),i=DateUtils.simpleArrayToString(i);break;case"simple-enum":s=DateUtils.simpleEnumToString(a),i=DateUtils.simpleEnumToString(i);break;case"simple-json":s=DateUtils.simpleJsonToString(a),i=DateUtils.simpleJsonToString(i)}t.transformer&&(s=B.A.transformTo(t.transformer,a))}if(Buffer.isBuffer(s)&&Buffer.isBuffer(i)){if(s.equals(i))return}else if(s===i)return}e.diffColumns.push(t),e.changeMaps.push({column:t,value:a})}}))}computeDiffRelationalColumns(e,t){t.entity&&t.metadata.relationsWithJoinColumns.forEach((n=>{let a=n.getEntityValue(t.entity);if(void 0===a)return;if(t.databaseEntity){let e=a;null!==e&&E.g.isObject(e)&&(e=n.getRelationIdMap(e));const i=n.getEntityValue(t.databaseEntity);if(j.s.compareIds(e,i))return;t.diffRelations.push(n)}const i=e.find((e=>e.mustBeInserted&&e.entity===a));i&&(a=i);const s=t.changeMaps.find((e=>e.relation===n));s?s.value=a:t.changeMaps.push({relation:n,value:a})}))}}var U=n(3448),F=n(7150),Q=n(1444);class NestedSetMultipleRootError extends f.K{constructor(){super("Nested sets do not support multiple root entities.")}}class NestedSetSubjectExecutor{constructor(e){this.queryRunner=e}async insert(e){const t=e=>this.queryRunner.connection.driver.escape(e),n=this.getTableName(e.metadata.tablePath),a=t(e.metadata.nestedSetLeftColumn.databaseName),i=t(e.metadata.nestedSetRightColumn.databaseName);let s=e.metadata.treeParentRelation.getEntityValue(e.entity);!s&&e.parentSubject&&e.parentSubject.entity&&(s=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity);const r=e.metadata.getEntityIdMap(s);let o;if(r&&(o=await this.queryRunner.manager.createQueryBuilder().select(e.metadata.targetName+"."+e.metadata.nestedSetRightColumn.propertyPath,"right").from(e.metadata.target,e.metadata.targetName).whereInIds(r).getRawOne().then((e=>{const t=e?e.right:void 0;return"string"==typeof t?parseInt(t):t}))),void 0!==o)await this.queryRunner.query(`UPDATE ${n} SET ${a} = CASE WHEN ${a} > ${o} THEN ${a} + 2 ELSE ${a} END,${i} = ${i} + 2 WHERE ${i} >= ${o}`),j.s.mergeDeep(e.insertedValueSet,e.metadata.nestedSetLeftColumn.createValueMap(o),e.metadata.nestedSetRightColumn.createValueMap(o+1));else{if(!await this.isUniqueRootEntity(e,s))throw new NestedSetMultipleRootError;j.s.mergeDeep(e.insertedValueSet,e.metadata.nestedSetLeftColumn.createValueMap(1),e.metadata.nestedSetRightColumn.createValueMap(2))}}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;if(!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n))))),void 0===n||void 0===t)return;const a=e.metadata.treeParentRelation.getEntityValue(n),i=e.metadata.getEntityIdMap(a),s=e.metadata.getEntityIdMap(t);if(!j.s.compareIds(i,s))if(t){const t=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.tablePath),i=t(e.metadata.nestedSetLeftColumn.databaseName),r=t(e.metadata.nestedSetRightColumn.databaseName),o=e.metadata.getEntityIdMap(n);let c,l;if(o&&(c=(await this.getNestedSetIds(e.metadata,o))[0]),s&&(l=(await this.getNestedSetIds(e.metadata,s))[0]),void 0!==c&&void 0!==l){const e=l.left>c.left,t=c.right-c.left+1;let n;n=e?l.left-c.right:l.right-c.left;const s=`WHEN ${i} >= ${c.left} AND ${i} < ${c.right} THEN ${i} + ${n} `,o=`WHEN ${r} > ${c.left} AND ${r} <= ${c.right} THEN ${r} + ${n} `;e?await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} > ${c.right} AND ${i} <= ${l.left} THEN ${i} - ${t} `+s+`ELSE ${i} END, `+`${r} = CASE `+`WHEN ${r} > ${c.right} AND `+`${r} < ${l.left} `+`THEN ${r} - ${t} `+o+`ELSE ${r} END`):await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} < ${c.left} AND ${i} > ${l.right} THEN ${i} + ${t} `+s+`ELSE ${i} END, `+`${r} = CASE `+`WHEN ${r} < ${c.left} AND `+`${r} >= ${l.right} `+`THEN ${r} + ${t} `+o+`ELSE ${r} END`)}}else{if(!await this.isUniqueRootEntity(e,t))throw new NestedSetMultipleRootError}}async remove(e){Array.isArray(e)||(e=[e]);const t=e[0].metadata,n=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(t.tablePath),i=n(t.nestedSetLeftColumn.databaseName),s=n(t.nestedSetRightColumn.databaseName);let r=[];for(const n of e){const e=t.getEntityIdMap(n.entity);e&&r.push(e)}let o=await this.getNestedSetIds(t,r);for(const e of o){const t=e.right-e.left+1;await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} > ${e.left} THEN ${i} - ${t} ELSE ${i} END, ${s} = CASE WHEN ${s} > ${e.right} THEN ${s} - ${t} ELSE ${s} END`)}}getNestedSetIds(e,t){const n={left:`${e.targetName}.${e.nestedSetLeftColumn.propertyPath}`,right:`${e.targetName}.${e.nestedSetRightColumn.propertyPath}`},a=this.queryRunner.manager.createQueryBuilder();return Object.entries(n).forEach((([e,t])=>{a.addSelect(t,e)})),a.from(e.target,e.targetName).whereInIds(t).orderBy(n.right,"DESC").getRawMany().then((e=>{const t=[];for(const a of e){const e={};for(const t of Object.keys(n)){const n=a?a[t]:void 0;e[t]="string"==typeof n?parseInt(n):n}t.push(e)}return t}))}async isUniqueRootEntity(e,t){const n=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.tablePath),i=[],s=e.metadata.treeParentRelation.joinColumns.map((e=>{const a=n(e.databaseName),s=e.getEntityValue(t);if(null==s)return`${a} IS NULL`;i.push(s);return`${a} = ${this.queryRunner.connection.driver.createParameter("entity_"+e.databaseName,i.length-1)}`})).join(" AND "),r="count",o=await this.queryRunner.query(`SELECT COUNT(1) AS ${n(r)} FROM ${a} WHERE ${s}`,i,!0);return 0===parseInt(o.records[0].count)}getTableName(e){return e.split(".").map((e=>""===e?e:this.queryRunner.connection.driver.escape(e))).join(".")}}var k=n(6759);class ClosureSubjectExecutor{constructor(e){this.queryRunner=e}async insert(e){const t={};e.metadata.closureJunctionTable.ancestorColumns.forEach((n=>{t[n.databaseName]=e.identifier})),e.metadata.closureJunctionTable.descendantColumns.forEach((n=>{t[n.databaseName]=e.identifier})),await this.queryRunner.manager.createQueryBuilder().insert().into(e.metadata.closureJunctionTable.tablePath).values(t).updateEntity(!1).callListeners(!1).execute();let n=e.metadata.treeParentRelation.getEntityValue(e.entity);if(!n&&e.parentSubject&&e.parentSubject.entity&&(n=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity),n){const t=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.closureJunctionTable.tablePath),i=[],s=e.metadata.closureJunctionTable.ancestorColumns.map((e=>t(e.databaseName))),r=e.metadata.closureJunctionTable.descendantColumns.map((e=>t(e.databaseName))),o=e.metadata.primaryColumns.map((t=>(i.push(t.getEntityValue(e.insertedValueSet?e.insertedValueSet:e.entity)),this.queryRunner.connection.driver.createParameter("child_entity_"+t.databaseName,i.length-1)))),c=e.metadata.closureJunctionTable.descendantColumns.map((a=>{const s=t(a.databaseName),r=a.referencedColumn.getEntityValue(n);if(!r)throw new k.a(e.metadata.name);i.push(r);return`${s} = ${this.queryRunner.connection.driver.createParameter("parent_entity_"+a.referencedColumn.databaseName,i.length-1)}`}));await this.queryRunner.query(`INSERT INTO ${a} (${[...s,...r].join(", ")}) SELECT ${s.join(", ")}, ${o.join(", ")} FROM ${a} WHERE ${c.join(" AND ")}`,i)}}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;if(!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n))))),void 0===n||void 0===t)return;const a=e.metadata.treeParentRelation.getEntityValue(n),i=e.metadata.getEntityIdMap(a),s=e.metadata.getEntityIdMap(t);if(j.s.compareIds(i,s))return;const r=e=>this.queryRunner.connection.driver.escape(e),o=e.metadata.closureJunctionTable,c=o.ancestorColumns.map((e=>r(e.databaseName))),l=o.descendantColumns.map((e=>r(e.databaseName))),u=(e,t)=>{const n=`sub${t}`,a=e.createQueryBuilder().select(l.join(", ")).from(o.tablePath,n);for(const e of o.ancestorColumns)a.andWhere(`${r(n)}.${r(e.databaseName)} = :value_${e.referencedColumn.databaseName}`);return e.createQueryBuilder().select(l.join(", ")).from(`(${a.getQuery()})`,t).setParameters(a.getParameters()).getQuery()},h={};for(const t of e.metadata.primaryColumns)h[`value_${t.databaseName}`]=n[t.databaseName];if(await this.queryRunner.manager.createQueryBuilder().delete().from(o.tablePath).where((e=>`(${l.join(", ")}) IN (${u(e,"descendant")})`)).andWhere((e=>`(${c.join(", ")}) NOT IN (${u(e,"ancestor")})`)).setParameters(h).execute(),t){const a=[],i=this.getTableName(o.tablePath),s=r("supertree"),u=r("subtree"),h=[...c.map((e=>`${s}.${e}`)),...l.map((e=>`${u}.${e}`))],d=e.metadata.closureJunctionTable.ancestorColumns.map((e=>{const t=r(e.databaseName),i=e.referencedColumn.getEntityValue(n);a.push(i);const s=this.queryRunner.connection.driver.createParameter("entity_"+e.referencedColumn.databaseName,a.length-1);return`${u}.${t} = ${s}`})),p=e.metadata.closureJunctionTable.descendantColumns.map((n=>{const i=r(n.databaseName),o=n.referencedColumn.getEntityValue(t);if(!o)throw new k.a(e.metadata.name);a.push(o);const c=this.queryRunner.connection.driver.createParameter("parent_entity_"+n.referencedColumn.databaseName,a.length-1);return`${s}.${i} = ${c}`}));await this.queryRunner.query(`INSERT INTO ${i} (${[...c,...l].join(", ")}) SELECT ${h.join(", ")} FROM ${i} AS ${s}, ${i} AS ${u} WHERE ${[...d,...p].join(" AND ")}`,a)}}async remove(e){if("mssql"!==this.queryRunner.connection.driver.options.type)return;Array.isArray(e)||(e=[e]);const t=e=>this.queryRunner.connection.driver.escape(e),n=e.map((e=>e.identifier)),a=e[0].metadata.closureJunctionTable,i=e=>e.map((e=>{const a=n.map((t=>t[e.referencedColumn.databaseName]));return`${t(e.databaseName)} IN (${a.join(", ")})`})).join(" AND "),s=i(a.ancestorColumns),r=i(a.descendantColumns);await this.queryRunner.manager.createQueryBuilder().delete().from(a.tablePath).where(s).orWhere(r).execute()}getTableName(e){return e.split(".").map((e=>""===e?e:this.queryRunner.connection.driver.escape(e))).join(".")}}class MaterializedPathSubjectExecutor{constructor(e){this.queryRunner=e}async insert(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity);const n=e.metadata.getEntityIdMap(t);let a="";n&&(a=await this.getEntityPath(e,n));const i=e.metadata.treeParentRelation.joinColumns.map((t=>t.referencedColumn.getEntityValue(e.insertedValueSet))).join("_");await this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set({[e.metadata.materializedPathColumn.propertyPath]:a+i+"."}).where(e.identifier).execute()}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n)))));const a=e.metadata.treeParentRelation.getEntityValue(n),i=e.metadata.getEntityIdMap(a),s=e.metadata.getEntityIdMap(t);if(j.s.compareIds(i,s))return;let r="";s&&(r=await this.getEntityPath(e,s));let o="";i&&(o=await this.getEntityPath(e,i)||"");const c=e.metadata.treeParentRelation.joinColumns.map((e=>e.referencedColumn.getEntityValue(n))).join("_"),l=e.metadata.materializedPathColumn.propertyPath;await this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set({[l]:()=>`REPLACE(${l}, '${o}${c}.', '${r}${c}.')`}).where(`${l} LIKE :path`,{path:`${o}${c}.%`}).execute()}getEntityPath(e,t){return this.queryRunner.manager.createQueryBuilder().select(e.metadata.targetName+"."+e.metadata.materializedPathColumn.propertyPath,"path").from(e.metadata.target,e.metadata.targetName).whereInIds(t).getRawOne().then((e=>e?e.path:""))}}class SubjectExecutor{constructor(e,t,n){this.hasExecutableOperations=!1,this.insertSubjects=[],this.updateSubjects=[],this.removeSubjects=[],this.softRemoveSubjects=[],this.recoverSubjects=[],this.queryRunner=e,this.allSubjects=t,this.options=n,this.validate(),this.recompute()}async execute(){let e;this.options&&!1===this.options.listeners||(e=this.broadcastBeforeEventsForAll(),e.promises.length>0&&await Promise.all(e.promises)),e&&e.count>0&&(this.insertSubjects.forEach((e=>e.recompute())),this.updateSubjects.forEach((e=>e.recompute())),this.removeSubjects.forEach((e=>e.recompute())),this.softRemoveSubjects.forEach((e=>e.recompute())),this.recoverSubjects.forEach((e=>e.recompute())),this.recompute()),this.insertSubjects=new SubjectTopoligicalSorter(this.insertSubjects).sort("insert"),await this.executeInsertOperations(),this.updateSubjects=this.allSubjects.filter((e=>e.mustBeUpdated)),await this.executeUpdateOperations(),this.removeSubjects=new SubjectTopoligicalSorter(this.removeSubjects).sort("delete"),await this.executeRemoveOperations(),this.softRemoveSubjects=this.allSubjects.filter((e=>e.mustBeSoftRemoved)),await this.executeSoftRemoveOperations(),this.recoverSubjects=this.allSubjects.filter((e=>e.mustBeRecovered)),await this.executeRecoverOperations(),await this.updateSpecialColumnsInPersistedEntities(),this.options&&!1===this.options.listeners||(e=this.broadcastAfterEventsForAll(),e.promises.length>0&&await Promise.all(e.promises))}validate(){this.allSubjects.forEach((e=>{if(e.mustBeUpdated&&e.mustBeRemoved)throw new F.B(e)}))}recompute(){(new SubjectChangedColumnsComputer).compute(this.allSubjects),this.insertSubjects=this.allSubjects.filter((e=>e.mustBeInserted)),this.updateSubjects=this.allSubjects.filter((e=>e.mustBeUpdated)),this.removeSubjects=this.allSubjects.filter((e=>e.mustBeRemoved)),this.softRemoveSubjects=this.allSubjects.filter((e=>e.mustBeSoftRemoved)),this.recoverSubjects=this.allSubjects.filter((e=>e.mustBeRecovered)),this.hasExecutableOperations=this.insertSubjects.length>0||this.updateSubjects.length>0||this.removeSubjects.length>0||this.softRemoveSubjects.length>0||this.recoverSubjects.length>0}broadcastBeforeEventsForAll(){const e=new Q.D;return this.insertSubjects.length&&this.insertSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeInsertEvent(e,t.metadata,t.entity))),this.updateSubjects.length&&this.updateSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(e,t.metadata,t.entity,t.databaseEntity,t.diffColumns,t.diffRelations))),this.removeSubjects.length&&this.removeSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeRemoveEvent(e,t.metadata,t.entity,t.databaseEntity))),this.softRemoveSubjects.length&&this.softRemoveSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeSoftRemoveEvent(e,t.metadata,t.entity,t.databaseEntity))),this.recoverSubjects.length&&this.recoverSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeRecoverEvent(e,t.metadata,t.entity,t.databaseEntity))),e}broadcastAfterEventsForAll(){const e=new Q.D;return this.insertSubjects.length&&this.insertSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterInsertEvent(e,t.metadata,t.entity))),this.updateSubjects.length&&this.updateSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterUpdateEvent(e,t.metadata,t.entity,t.databaseEntity,t.diffColumns,t.diffRelations))),this.removeSubjects.length&&this.removeSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterRemoveEvent(e,t.metadata,t.entity,t.databaseEntity))),this.softRemoveSubjects.length&&this.softRemoveSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterSoftRemoveEvent(e,t.metadata,t.entity,t.databaseEntity))),this.recoverSubjects.length&&this.recoverSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterRecoverEvent(e,t.metadata,t.entity,t.databaseEntity))),e}async executeInsertOperations(){const[e,t]=this.groupBulkSubjects(this.insertSubjects,"insert");for(const n of t){const t=e[n],a=[],i=[],r=[];if("mongodb"===this.queryRunner.connection.driver.options.type?t.forEach((e=>{e.metadata.createDateColumn&&e.entity&&(e.entity[e.metadata.createDateColumn.databaseName]=new Date),e.metadata.updateDateColumn&&e.entity&&(e.entity[e.metadata.updateDateColumn.databaseName]=new Date),e.createValueSetAndPopChangeMap(),i.push(e),a.push(e.entity)})):"oracle"===this.queryRunner.connection.driver.options.type?t.forEach((e=>{r.push(e)})):t.forEach((e=>{0===e.changeMaps.length||e.metadata.treeType||"oracle"===this.queryRunner.connection.driver.options.type||"sap"===this.queryRunner.connection.driver.options.type?r.push(e):(i.push(e),a.push(e.createValueSetAndPopChangeMap()))})),s.a.isMongoEntityManager(this.queryRunner.manager)){const e=await this.queryRunner.manager.insert(t[0].metadata.target,a);t.forEach(((t,n)=>{t.identifier=e.identifiers[n],t.generatedMap=e.generatedMaps[n],t.insertedValueSet=a[n]}))}else{if(a.length>0){const e=await this.queryRunner.manager.createQueryBuilder().insert().into(t[0].metadata.target).values(a).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1).execute();i.forEach(((t,n)=>{t.identifier=e.identifiers[n],t.generatedMap=e.generatedMaps[n],t.insertedValueSet=a[n]}))}if(r.length>0)for(const e of r)e.insertedValueSet=e.createValueSetAndPopChangeMap(),"nested-set"===e.metadata.treeType&&await new NestedSetSubjectExecutor(this.queryRunner).insert(e),await this.queryRunner.manager.createQueryBuilder().insert().into(e.metadata.target).values(e.insertedValueSet).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1).execute().then((t=>{e.identifier=t.identifiers[0],e.generatedMap=t.generatedMaps[0]})),"closure-table"===e.metadata.treeType?await new ClosureSubjectExecutor(this.queryRunner).insert(e):"materialized-path"===e.metadata.treeType&&await new MaterializedPathSubjectExecutor(this.queryRunner).insert(e)}t.forEach((e=>{e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))}))}}async executeUpdateOperations(){const e=async e=>{if(!e.identifier)throw new U.H(e);if(s.a.isMongoEntityManager(this.queryRunner.manager)){const t=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete t[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete t[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(t[e.metadata.updateDateColumn.propertyName]=new Date);const n=this.queryRunner.manager;await n.update(e.metadata.target,e.identifier,t)}else{const t=e.createValueSetAndPopChangeMap();switch(e.metadata.treeType){case"nested-set":await new NestedSetSubjectExecutor(this.queryRunner).update(e);break;case"closure-table":await new ClosureSubjectExecutor(this.queryRunner).update(e);break;case"materialized-path":await new MaterializedPathSubjectExecutor(this.queryRunner).update(e)}const n=this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set(t).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier);let a=(await n.execute()).generatedMaps[0];a&&(e.metadata.columns.forEach((e=>{const t=e.getEntityValue(a);if(null!=t){const n=this.queryRunner.connection.driver.prepareHydratedValue(t,e);e.setEntityValue(a,n)}})),e.generatedMap||(e.generatedMap={}),Object.assign(e.generatedMap,a))}},t=[],n=[];for(const e of this.updateSubjects)"nested-set"===e.metadata.treeType?t.push(e):n.push(e);const a=new Promise((async(n,a)=>{for(const n of t)try{await e(n)}catch(e){a(e)}n()}));await Promise.all([...n.map(e),a])}async executeRemoveOperations(){const[e,t]=this.groupBulkSubjects(this.removeSubjects,"delete");for(const n of t){const t=e[n],a=t.map((e=>{if(!e.identifier)throw new U.H(e);return e.identifier}));if(s.a.isMongoEntityManager(this.queryRunner.manager)){const e=this.queryRunner.manager;await e.delete(t[0].metadata.target,a)}else{switch(t[0].metadata.treeType){case"nested-set":await new NestedSetSubjectExecutor(this.queryRunner).remove(t);break;case"closure-table":await new ClosureSubjectExecutor(this.queryRunner).remove(t)}await this.queryRunner.manager.createQueryBuilder().delete().from(t[0].metadata.target).where(a).callListeners(!1).execute()}}}cloneMongoSubjectEntity(e){const t={};if(e.entity)for(const n of e.metadata.columns)j.s.mergeDeep(t,n.getEntityValueMap(e.entity));return t}async executeSoftRemoveOperations(){await Promise.all(this.softRemoveSubjects.map((async e=>{if(!e.identifier)throw new U.H(e);let t;if(s.a.isMongoEntityManager(this.queryRunner.manager)){const n=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete n[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete n[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(n[e.metadata.updateDateColumn.propertyName]=new Date),e.metadata.deleteDateColumn&&e.metadata.deleteDateColumn.propertyName&&(n[e.metadata.deleteDateColumn.propertyName]=new Date);const a=this.queryRunner.manager;t=await a.update(e.metadata.target,e.identifier,n)}else{const n=this.queryRunner.manager.createQueryBuilder().softDelete().from(e.metadata.target).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier),t=await n.execute()}e.generatedMap=t.generatedMaps[0],e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))})))}async executeRecoverOperations(){await Promise.all(this.recoverSubjects.map((async e=>{if(!e.identifier)throw new U.H(e);let t;if(s.a.isMongoEntityManager(this.queryRunner.manager)){const n=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete n[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete n[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(n[e.metadata.updateDateColumn.propertyName]=new Date),e.metadata.deleteDateColumn&&e.metadata.deleteDateColumn.propertyName&&(n[e.metadata.deleteDateColumn.propertyName]=null);const a=this.queryRunner.manager;t=await a.update(e.metadata.target,e.identifier,n)}else{const n=this.queryRunner.manager.createQueryBuilder().restore().from(e.metadata.target).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier),t=await n.execute()}e.generatedMap=t.generatedMaps[0],e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))})))}updateSpecialColumnsInPersistedEntities(){this.insertSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.insertSubjects),this.updateSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.updateSubjects),this.softRemoveSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.softRemoveSubjects),this.recoverSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.recoverSubjects),this.removeSubjects.length&&this.removeSubjects.forEach((e=>{e.entity&&e.metadata.primaryColumns.forEach((t=>{t.setEntityValue(e.entity,void 0)}))})),this.allSubjects.forEach((e=>{e.entity&&(e.metadata.relationIds.forEach((t=>{t.setValue(e.entity)})),s.a.isMongoEntityManager(this.queryRunner.manager)&&e.metadata.objectIdColumn&&e.metadata.objectIdColumn.databaseName&&e.metadata.objectIdColumn.databaseName!==e.metadata.objectIdColumn.propertyName&&delete e.entity[e.metadata.objectIdColumn.databaseName])}))}updateSpecialColumnsInInsertedAndUpdatedEntities(e){e.forEach((e=>{e.entity&&(e.metadata.columns.forEach((t=>{if(!(e.metadata.childEntityMetadatas.length>0&&-1!==e.metadata.childEntityMetadatas.map((e=>e.target)).indexOf(t.target)||t.isVirtual)){if(t.isNullable){void 0===t.getEntityValue(e.entity)&&t.setEntityValue(e.entity,null)}e.updatedRelationMaps.length>0&&e.updatedRelationMaps.forEach((t=>{t.relation.joinColumns.forEach((n=>{!0!==n.isVirtual&&n.setEntityValue(e.entity,E.g.isObject(t.value)?n.referencedColumn.getEntityValue(t.value):t.value)}))}))}})),e.generatedMap&&this.queryRunner.manager.merge(e.metadata.target,e.entity,e.generatedMap))}))}groupBulkSubjects(e,t){const n={},a=[],i=e.some((e=>e.metadata.getInsertionReturningColumns().length>0)),s="delete"===t||this.queryRunner.connection.driver.isReturningSqlSupported("insert")||!1===i;return e.forEach(((e,t)=>{const i=s||e.metadata.isJunction?e.metadata.name:e.metadata.name+"_"+t;n[i]?n[i].push(e):(n[i]=[e],a.push(i))})),[n,a]}}var K=n(9381);class Subject{constructor(e){this["@instanceof"]=Symbol.for("Subject"),this.identifier=void 0,this.entityWithFulfilledIds=void 0,this.databaseEntityLoaded=!1,this.changeMaps=[],this.canBeInserted=!1,this.canBeUpdated=!1,this.mustBeRemoved=!1,this.canBeSoftRemoved=!1,this.canBeRecovered=!1,this.updatedRelationMaps=[],this.diffColumns=[],this.diffRelations=[],this.metadata=e.metadata,this.entity=e.entity,this.parentSubject=e.parentSubject,void 0!==e.canBeInserted&&(this.canBeInserted=e.canBeInserted),void 0!==e.canBeUpdated&&(this.canBeUpdated=e.canBeUpdated),void 0!==e.mustBeRemoved&&(this.mustBeRemoved=e.mustBeRemoved),void 0!==e.canBeSoftRemoved&&(this.canBeSoftRemoved=e.canBeSoftRemoved),void 0!==e.canBeRecovered&&(this.canBeRecovered=e.canBeRecovered),void 0!==e.identifier&&(this.identifier=e.identifier),void 0!==e.changeMaps&&this.changeMaps.push(...e.changeMaps),this.recompute()}get mustBeInserted(){return this.canBeInserted&&!this.databaseEntity}get mustBeUpdated(){return this.canBeUpdated&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)&&this.changeMaps.length>0}get mustBeSoftRemoved(){return this.canBeSoftRemoved&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)}get mustBeRecovered(){return this.canBeRecovered&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)}createValueSetAndPopChangeMap(){const e=[],t=this.changeMaps.reduce(((t,n)=>{let a,i=n.value;if(s.a.isSubject(i)&&(i=i.insertedValueSet?i.insertedValueSet:i.entity),this.metadata.isJunction&&n.column)a=n.column.createValueMap(n.column.referencedColumn.getEntityValue(i));else if(n.column)a=n.column.createValueMap(i);else if(n.relation)if(E.g.isObject(i)&&!Buffer.isBuffer(i)){const s=n.relation.getRelationIdMap(i);if(void 0===s)return e.push(n),this.canBeUpdated=!0,t;a=n.relation.createValueMap(s),this.updatedRelationMaps.push({relation:n.relation,value:s})}else a=n.relation.createValueMap(i),this.updatedRelationMaps.push({relation:n.relation,value:i});return j.s.mergeDeep(t,a),t}),{});return this.changeMaps=e,t}recompute(){this.entity?(this.entityWithFulfilledIds=Object.assign({},this.entity),this.parentSubject&&this.metadata.primaryColumns.forEach((e=>{if(e.relationMetadata&&e.relationMetadata.inverseEntityMetadata===this.parentSubject.metadata){const t=e.referencedColumn.getEntityValue(this.parentSubject.entity);e.setEntityValue(this.entityWithFulfilledIds,t)}})),this.identifier=this.metadata.getEntityIdMap(this.entityWithFulfilledIds)):this.databaseEntity&&(this.identifier=this.metadata.getEntityIdMap(this.databaseEntity))}}var V=n(5578),W=n(1962);class EntityMetadata{constructor(e){this["@instanceof"]=Symbol.for("EntityMetadata"),this.childEntityMetadatas=[],this.inheritanceTree=[],this.tableType="regular",this.withoutRowid=!1,this.synchronize=!0,this.hasNonNullableRelations=!1,this.isJunction=!1,this.isAlwaysUsingConstructor=!0,this.isClosureJunction=!1,this.hasMultiplePrimaryKeys=!1,this.hasUUIDGeneratedColumns=!1,this.ownColumns=[],this.columns=[],this.ancestorColumns=[],this.descendantColumns=[],this.nonVirtualColumns=[],this.ownerColumns=[],this.inverseColumns=[],this.generatedColumns=[],this.primaryColumns=[],this.ownRelations=[],this.relations=[],this.eagerRelations=[],this.lazyRelations=[],this.oneToOneRelations=[],this.ownerOneToOneRelations=[],this.oneToManyRelations=[],this.manyToOneRelations=[],this.manyToManyRelations=[],this.ownerManyToManyRelations=[],this.relationsWithJoinColumns=[],this.relationIds=[],this.relationCounts=[],this.foreignKeys=[],this.embeddeds=[],this.allEmbeddeds=[],this.ownIndices=[],this.indices=[],this.uniques=[],this.ownUniques=[],this.checks=[],this.exclusions=[],this.ownListeners=[],this.listeners=[],this.afterLoadListeners=[],this.beforeInsertListeners=[],this.afterInsertListeners=[],this.beforeUpdateListeners=[],this.afterUpdateListeners=[],this.beforeRemoveListeners=[],this.beforeSoftRemoveListeners=[],this.beforeRecoverListeners=[],this.afterRemoveListeners=[],this.afterSoftRemoveListeners=[],this.afterRecoverListeners=[],this.connection=e.connection,this.inheritanceTree=e.inheritanceTree||[],this.inheritancePattern=e.inheritancePattern,this.treeType=e.tableTree?e.tableTree.type:void 0,this.treeOptions=e.tableTree?e.tableTree.options:void 0,this.parentClosureEntityMetadata=e.parentClosureEntityMetadata,this.tableMetadataArgs=e.args,this.target=this.tableMetadataArgs.target,this.tableType=this.tableMetadataArgs.type,this.expression=this.tableMetadataArgs.expression,this.withoutRowid=this.tableMetadataArgs.withoutRowid,this.dependsOn=this.tableMetadataArgs.dependsOn}create(e,t){const n=!(!t||!0!==t.pojo);let a;return a="function"!=typeof this.target||n?{}:!(null==t?void 0:t.fromDeserializer)||this.isAlwaysUsingConstructor?new this.target:Object.create(this.target.prototype),this.connection.options.typename&&(a[this.connection.options.typename]=this.targetName),this.lazyRelations.forEach((t=>this.connection.relationLoader.enableLazyLoad(t,a,e))),a}hasId(e){return!!e&&this.primaryColumns.every((t=>{const n=t.getEntityValue(e);return null!=n&&""!==n}))}hasAllPrimaryKeys(e){return this.primaryColumns.every((t=>{const n=t.getEntityValue(e);return null!=n}))}ensureEntityIdMap(e){if(E.g.isObject(e))return e;if(this.hasMultiplePrimaryKeys)throw new V.d(this,e);return this.primaryColumns[0].createValueMap(e)}getEntityIdMap(e){if(e)return EntityMetadata.getValueMap(e,this.primaryColumns,{skipNulls:!0})}getEntityIdMixedMap(e){if(!e)return e;const t=this.getEntityIdMap(e);return this.hasMultiplePrimaryKeys?t:t?this.primaryColumns[0].getEntityValue(t):t}compareEntities(e,t){const n=this.getEntityIdMap(e);if(!n)return!1;const a=this.getEntityIdMap(t);return!!a&&j.s.compareIds(n,a)}findColumnWithPropertyName(e){return this.columns.find((t=>t.propertyName===e))}findColumnWithDatabaseName(e){return this.columns.find((t=>t.databaseName===e))}hasColumnWithPropertyPath(e){return this.columns.some((t=>t.propertyPath===e))||this.hasRelationWithPropertyPath(e)}findColumnWithPropertyPath(e){const t=this.columns.find((t=>t.propertyPath===e));if(t)return t;const n=this.relations.find((t=>t.propertyPath===e));return n&&1===n.joinColumns.length?n.joinColumns[0]:void 0}findColumnWithPropertyPathStrict(e){return this.columns.find((t=>t.propertyPath===e))}findColumnsWithPropertyPath(e){const t=this.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.findRelationWithPropertyPath(e);return n&&n.joinColumns?n.joinColumns:[]}hasRelationWithPropertyPath(e){return this.relations.some((t=>t.propertyPath===e))}findRelationWithPropertyPath(e){return this.relations.find((t=>t.propertyPath===e))}hasEmbeddedWithPropertyPath(e){return this.allEmbeddeds.some((t=>t.propertyPath===e))}findEmbeddedWithPropertyPath(e){return this.allEmbeddeds.find((t=>t.propertyPath===e))}mapPropertyPathsToColumns(e){return e.map((e=>{const t=this.findColumnWithPropertyPath(e);if(null==t)throw new W.B(e,this);return t}))}extractRelationValuesFromEntity(e,t){const n=[];return t.forEach((t=>{const a=t.getEntityValue(e);Array.isArray(a)?a.forEach((e=>n.push([t,e,this.getInverseEntityMetadata(e,t)]))):a&&n.push([t,a,this.getInverseEntityMetadata(a,t)])})),n}getInverseEntityMetadata(e,t){const n=t.inverseEntityMetadata.childEntityMetadatas.find((t=>t.target===e.constructor));return n||t.inverseEntityMetadata}static createPropertyPath(e,t,n=""){const a=[];return Object.keys(t).forEach((i=>{const s=n?n+"."+i:i;if(e.hasEmbeddedWithPropertyPath(s)){const n=this.createPropertyPath(e,t[i],s);a.push(...n)}else{const e=n?n+"."+i:i;a.push(e)}})),a}static difference(e,t){return e.filter((e=>!t.find((t=>j.s.compareIds(e,t)))))}static getValueMap(e,t,n){return t.reduce(((t,a)=>{const i=a.getEntityValueMap(e,n);if(void 0!==t&&null!=i)return j.s.mergeDeep(t,i)}),{})}build(){var e;const t=this.connection.namingStrategy,n=this.connection.options.entityPrefix,i=this.connection.options.entitySkipConstructor;this.engine=this.tableMetadataArgs.engine,this.database="entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.parentEntityMetadata.database:this.tableMetadataArgs.database,this.tableMetadataArgs.schema?this.schema=this.tableMetadataArgs.schema:"entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.schema=this.parentEntityMetadata.schema:(null===(e=this.connection.options)||void 0===e?void 0:e.hasOwnProperty("schema"))&&(this.schema=this.connection.options.schema),this.givenTableName="entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.parentEntityMetadata.givenTableName:this.tableMetadataArgs.name,this.synchronize=!1!==this.tableMetadataArgs.synchronize,this.targetName="function"==typeof this.tableMetadataArgs.target?this.tableMetadataArgs.target.name:this.tableMetadataArgs.target,"closure-junction"===this.tableMetadataArgs.type?this.tableNameWithoutPrefix=t.closureJunctionTableName(this.givenTableName):"entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.tableNameWithoutPrefix=t.tableName(this.parentEntityMetadata.targetName,this.parentEntityMetadata.givenTableName):(this.tableNameWithoutPrefix=t.tableName(this.targetName,this.givenTableName),"junction"===this.tableMetadataArgs.type&&this.connection.driver.maxAliasLength&&this.connection.driver.maxAliasLength>0&&this.tableNameWithoutPrefix.length>this.connection.driver.maxAliasLength&&(this.tableNameWithoutPrefix=(0,a.OV)(this.tableNameWithoutPrefix,{separator:"_",segmentLength:3}))),this.tableName=n?t.prefixTableName(n,this.tableNameWithoutPrefix):this.tableNameWithoutPrefix,this.target=this.target?this.target:this.tableName,this.name=this.targetName?this.targetName:this.tableName,this.expression=this.tableMetadataArgs.expression,this.withoutRowid=!0===this.tableMetadataArgs.withoutRowid,this.tablePath=this.connection.driver.buildTableName(this.tableName,this.schema,this.database),this.orderBy="function"==typeof this.tableMetadataArgs.orderBy?this.tableMetadataArgs.orderBy(this.propertiesMap):this.tableMetadataArgs.orderBy,void 0!==i&&(this.isAlwaysUsingConstructor=!i),this.isJunction="closure-junction"===this.tableMetadataArgs.type||"junction"===this.tableMetadataArgs.type,this.isClosureJunction="closure-junction"===this.tableMetadataArgs.type}registerColumn(e){-1===this.ownColumns.indexOf(e)&&(this.ownColumns.push(e),this.columns=this.embeddeds.reduce(((e,t)=>e.concat(t.columnsFromTree)),this.ownColumns),this.primaryColumns=this.columns.filter((e=>e.isPrimary)),this.hasMultiplePrimaryKeys=this.primaryColumns.length>1,this.hasUUIDGeneratedColumns=this.columns.filter((e=>e.isGenerated||"uuid"===e.generationStrategy)).length>0,this.propertiesMap=this.createPropertiesMap(),this.childEntityMetadatas&&this.childEntityMetadatas.forEach((t=>t.registerColumn(e))))}createPropertiesMap(){const e={};return this.columns.forEach((t=>j.s.mergeDeep(e,t.createValueMap(t.propertyPath)))),this.relations.forEach((t=>j.s.mergeDeep(e,t.createValueMap(t.propertyPath)))),e}getInsertionReturningColumns(){return this.columns.filter((e=>void 0!==e.default||e.isGenerated||e.isCreateDate||e.isUpdateDate||e.isDeleteDate||e.isVersion))}}class OneToManySubjectBuilder{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.metadata.oneToManyRelations.forEach((t=>{!1!==t.persistenceEnabled&&this.buildForSubjectRelation(e,t)}))}))}buildForSubjectRelation(e,t){let n=[];if(e.databaseEntity){const a=t.getEntityValue(e.databaseEntity);a&&(n=a.map((e=>t.inverseEntityMetadata.getEntityIdMap(e))))}let a=t.getEntityValue(e.entity);if(null===a&&(a=[]),void 0===a)return;const i=[];a.forEach((a=>{let s=t.inverseEntityMetadata.getEntityIdMap(a),r=this.subjects.find((e=>e.entity===a));if(r&&(s=r.identifier),!s){if(!r)return;return void r.changeMaps.push({relation:t.inverseRelation,value:e})}n.find((e=>j.s.compareIds(s,e)))||(r||(r=new Subject({metadata:t.inverseEntityMetadata,parentSubject:e,canBeUpdated:!0,identifier:s}),this.subjects.push(r)),r.changeMaps.push({relation:t.inverseRelation,value:e})),i.push(s)})),EntityMetadata.difference(n,i).forEach((n=>{const a=new Subject({metadata:t.inverseEntityMetadata,parentSubject:e,identifier:n});t.inverseRelation&&"nullify"!==t.inverseRelation.orphanedRowAction?"delete"===t.inverseRelation.orphanedRowAction?a.mustBeRemoved=!0:"soft-delete"===t.inverseRelation.orphanedRowAction&&(a.canBeSoftRemoved=!0):(a.canBeUpdated=!0,a.changeMaps=[{relation:t.inverseRelation,value:null}]),this.subjects.push(a)}))}}class OneToOneInverseSideSubjectBuilder{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.metadata.oneToOneRelations.forEach((t=>{t.isOwning||!1===t.persistenceEnabled||this.buildForSubjectRelation(e,t)}))}))}buildForSubjectRelation(e,t){let n;e.databaseEntity&&(n=t.getEntityValue(e.databaseEntity));let a=t.getEntityValue(e.entity);if(void 0===a)return;if(null===a){if(n){const a=new Subject({metadata:t.inverseEntityMetadata,parentSubject:e,canBeUpdated:!0,identifier:n,changeMaps:[{relation:t.inverseRelation,value:null}]});this.subjects.push(a)}return}let i=t.inverseEntityMetadata.getEntityIdMap(a),s=this.subjects.find((e=>!!e.entity&&e.entity===a));if(s&&(i=s.identifier),!i){if(!s)return;s.changeMaps.push({relation:t.inverseRelation,value:e})}n&&j.s.compareIds(i,n)||(s||(s=new Subject({metadata:t.inverseEntityMetadata,canBeUpdated:!0,identifier:i}),this.subjects.push(s)),s.changeMaps.push({relation:t.inverseRelation,value:e}))}}class ManyToManySubjectBuilder{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.entity&&e.metadata.manyToManyRelations.forEach((t=>{!1!==t.persistenceEnabled&&this.buildForSubjectRelation(e,t)}))}))}buildForAllRemoval(e){e.databaseEntity&&e.metadata.manyToManyRelations.forEach((t=>{if(!1===t.persistenceEnabled)return;t.getEntityValue(e.databaseEntity).forEach((n=>{const a=new Subject({metadata:t.junctionEntityMetadata,parentSubject:e,mustBeRemoved:!0,identifier:this.buildJunctionIdentifier(e,t,n)});this.subjects.push(a)}))}))}buildForSubjectRelation(e,t){let n=[];e.databaseEntity&&(n=t.getEntityValue(e.databaseEntity));let a=t.getEntityValue(e.entity);if(null===a&&(a=[]),!Array.isArray(a))return;a.forEach((a=>{let i=t.inverseEntityMetadata.getEntityIdMap(a);const s=this.subjects.find((e=>e.entity===a));if(s&&(i=s.identifier),!i&&!s)return;if(n.find((e=>j.s.compareIds(e,i))))return;const r=t.isOwning?e:s||a,o=t.isOwning?s||a:e,c=new Subject({metadata:t.junctionEntityMetadata,parentSubject:e,canBeInserted:!0});this.subjects.push(c),t.junctionEntityMetadata.ownerColumns.forEach((e=>{c.changeMaps.push({column:e,value:r})})),t.junctionEntityMetadata.inverseColumns.forEach((e=>{c.changeMaps.push({column:e,value:o})}))}));const i=[];a.forEach((e=>{let n=t.inverseEntityMetadata.getEntityIdMap(e);const a=this.subjects.find((t=>t.entity===e));a&&(n=a.identifier),null!=n&&i.push(n)}));n.filter((e=>!i.find((t=>j.s.compareIds(t,e))))).forEach((n=>{const a=new Subject({metadata:t.junctionEntityMetadata,parentSubject:e,mustBeRemoved:!0,identifier:this.buildJunctionIdentifier(e,t,n)});this.subjects.push(a)}))}buildJunctionIdentifier(e,t,n){const a=t.isOwning?e.entity:n,i=t.isOwning?n:e.entity,s={};return t.junctionEntityMetadata.ownerColumns.forEach((e=>{j.s.mergeDeep(s,e.createValueMap(e.referencedColumn.getEntityValue(a)))})),t.junctionEntityMetadata.inverseColumns.forEach((e=>{j.s.mergeDeep(s,e.createValueMap(e.referencedColumn.getEntityValue(i)))})),s}}class SubjectDatabaseEntityLoader{constructor(e,t){this.queryRunner=e,this.subjects=t}async load(e){const t=this.groupByEntityTargets().map((async t=>{const n=[],a=[];if(t.subjects.forEach((e=>{!e.databaseEntity&&e.identifier&&(n.push(e.identifier),a.push(e))})),!n.length)return;const i=[];"save"===e||"soft-remove"===e||"recover"===e?t.subjects.forEach((e=>{e.metadata.relations.forEach((t=>{void 0!==t.getEntityValue(e.entityWithFulfilledIds)&&-1===i.indexOf(t.propertyPath)&&i.push(t.propertyPath)}))})):i.push(...t.subjects[0].metadata.manyToManyRelations.map((e=>e.propertyPath)));const s={loadEagerRelations:!1,loadRelationIds:{relations:i,disableMixedMap:!0},withDeleted:!0};let r=[];if("mongodb"===this.queryRunner.connection.driver.options.type){const e=this.queryRunner.manager.getRepository(t.target);r=await e.findByIds(n,s)}else r=await this.queryRunner.manager.getRepository(t.target).createQueryBuilder().setFindOptions(s).whereInIds(n).getMany();r.forEach((e=>{this.findByPersistEntityLike(t.target,e).forEach((t=>{t.databaseEntity=e,t.identifier||(t.identifier=t.metadata.hasAllPrimaryKeys(e)?t.metadata.getEntityIdMap(e):void 0)}))}));for(let e of a)e.databaseEntityLoaded=!0}));await Promise.all(t)}findByPersistEntityLike(e,t){return this.subjects.filter((n=>!!n.entity&&(n.entity===t||n.metadata.target===e&&n.metadata.compareEntities(n.entityWithFulfilledIds,t))))}groupByEntityTargets(){return this.subjects.reduce(((e,t)=>{let n=e.find((e=>e.target===t.metadata.target));return n||(n={target:t.metadata.target,subjects:[]},e.push(n)),n.subjects.push(t),e}),[])}}class CascadesSubjectBuilder{constructor(e){this.allSubjects=e}build(e,t){e.metadata.extractRelationValuesFromEntity(e.entity,e.metadata.relations).forEach((([n,a,i])=>{if(null==a||!n.isCascadeInsert&&!n.isCascadeUpdate&&!n.isCascadeSoftRemove&&!n.isCascadeRecover)return;if(!E.g.isObject(a))return;const s=this.findByPersistEntityLike(i.target,a);if(s)return!1===s.canBeInserted&&(s.canBeInserted=!0===n.isCascadeInsert&&"save"===t),!1===s.canBeUpdated&&(s.canBeUpdated=!0===n.isCascadeUpdate&&"save"===t),!1===s.canBeSoftRemoved&&(s.canBeSoftRemoved=!0===n.isCascadeSoftRemove&&"soft-remove"===t),void(!1===s.canBeRecovered&&(s.canBeRecovered=!0===n.isCascadeRecover&&"recover"===t));const r=new Subject({metadata:i,parentSubject:e,entity:a,canBeInserted:!0===n.isCascadeInsert&&"save"===t,canBeUpdated:!0===n.isCascadeUpdate&&"save"===t,canBeSoftRemoved:!0===n.isCascadeSoftRemove&&"soft-remove"===t,canBeRecovered:!0===n.isCascadeRecover&&"recover"===t});this.allSubjects.push(r),this.build(r,t)}))}findByPersistEntityLike(e,t){return this.allSubjects.find((n=>!!n.entity&&(n.entity===t||n.metadata.target===e&&n.metadata.compareEntities(n.entityWithFulfilledIds,t))))}}class EntityPersistExecutor{constructor(e,t,n,a,i,s){this.connection=e,this.queryRunner=t,this.mode=n,this.target=a,this.entity=i,this.options=s}async execute(){if(!this.entity||"object"!=typeof this.entity)return Promise.reject(new N.B(this.mode,this.entity));await Promise.resolve();const e=this.queryRunner||this.connection.createQueryRunner();let t=e.data;this.options&&this.options.data&&(e.data=this.options.data);try{const n=Array.isArray(this.entity)?this.entity:[this.entity],a=this.options&&this.options.chunk&&this.options.chunk>0?j.s.chunk(n,this.options.chunk):[n],i=await Promise.all(a.map((async t=>{const n=[];t.forEach((e=>{const t=this.target?this.target:e.constructor;if(t===Object)throw new K.c(this.mode);let a=this.connection.getMetadata(t);if("STI"===a.inheritancePattern&&a.childEntityMetadatas.length>0){const t=a.childEntityMetadatas.find((t=>e.constructor===t.target));t&&(a=t)}n.push(new Subject({metadata:a,entity:e,canBeInserted:"save"===this.mode,canBeUpdated:"save"===this.mode,mustBeRemoved:"remove"===this.mode,canBeSoftRemoved:"soft-remove"===this.mode,canBeRecovered:"recover"===this.mode}))}));const a=new CascadesSubjectBuilder(n);return n.forEach((e=>{a.build(e,this.mode)})),await new SubjectDatabaseEntityLoader(e,n).load(this.mode),"save"===this.mode||"soft-remove"===this.mode||"recover"===this.mode?(new OneToManySubjectBuilder(n).build(),new OneToOneInverseSideSubjectBuilder(n).build(),new ManyToManySubjectBuilder(n).build()):n.forEach((e=>{e.mustBeRemoved&&new ManyToManySubjectBuilder(n).buildForAllRemoval(e)})),new SubjectExecutor(e,n,this.options)}))),s=i.filter((e=>e.hasExecutableOperations));if(0===s.length)return;let r=!1;try{e.isTransactionActive||this.options&&!1===this.options.transaction||(r=!0,await e.startTransaction());for(const e of s)await e.execute();!0===r&&await e.commitTransaction()}catch(t){if(r)try{await e.rollbackTransaction()}catch(e){}throw t}}finally{e.data=t,this.queryRunner||await e.release()}}}class EntityManager{constructor(e,t){this["@instanceof"]=Symbol.for("EntityManager"),this.repositories=[],this.treeRepositories=[],this.plainObjectToEntityTransformer=new PlainObjectToNewEntityTransformer,this.connection=e,t&&(this.queryRunner=t,E.g.assign(this.queryRunner,{manager:this}))}async transaction(e,t){const n="string"==typeof e?e:void 0,a="function"==typeof e?e:t;if(!a)throw new i.K_("Transaction method requires callback in second parameter if isolation level is supplied.");if(this.queryRunner&&this.queryRunner.isReleased)throw new m.i;const s=this.queryRunner||this.connection.createQueryRunner();try{await s.startTransaction(n);const e=await a(s.manager);return await s.commitTransaction(),e}catch(e){try{await s.rollbackTransaction()}catch(e){}throw e}finally{this.queryRunner||await s.release()}}async query(e,t){return this.connection.query(e,t,this.queryRunner)}createQueryBuilder(e,t,n){return t?this.connection.createQueryBuilder(e,t,n||this.queryRunner):this.connection.createQueryBuilder(e||n||this.queryRunner)}hasId(e,t){const n=2===arguments.length?e:e.constructor,a=2===arguments.length?t:e;return this.connection.getMetadata(n).hasId(a)}getId(e,t){const n=2===arguments.length?e:e.constructor,a=2===arguments.length?t:e;return this.connection.getMetadata(n).getEntityIdMixedMap(a)}create(e,t){const n=this.connection.getMetadata(e);if(!t)return n.create(this.queryRunner);if(Array.isArray(t))return t.map((t=>this.create(e,t)));const a=n.create(this.queryRunner);return this.plainObjectToEntityTransformer.transform(a,t,n,!0),a}merge(e,t,...n){const a=this.connection.getMetadata(e);return n.forEach((e=>this.plainObjectToEntityTransformer.transform(t,e,a))),t}async preload(e,t){const n=this.connection.getMetadata(e),a=new PlainObjectToDatabaseEntityTransformer(this.connection.manager),i=await a.transform(t,n);if(i)return this.merge(e,i,t)}save(e,t,n){let a=arguments.length>1&&("function"==typeof e||s.a.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return s.a.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new EntityPersistExecutor(this.connection,this.queryRunner,"save",a,i,r).execute().then((()=>i))}remove(e,t,n){const a=arguments.length>1&&("function"==typeof e||"string"==typeof e)?e:void 0,i=a?t:e,s=a?n:t;return Array.isArray(i)&&0===i.length?Promise.resolve(i):new EntityPersistExecutor(this.connection,this.queryRunner,"remove",a,i,s).execute().then((()=>i))}softRemove(e,t,n){let a=arguments.length>1&&("function"==typeof e||s.a.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return s.a.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new EntityPersistExecutor(this.connection,this.queryRunner,"soft-remove",a,i,r).execute().then((()=>i))}recover(e,t,n){let a=arguments.length>1&&("function"==typeof e||s.a.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return s.a.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new EntityPersistExecutor(this.connection,this.queryRunner,"recover",a,i,r).execute().then((()=>i))}async insert(e,t){return this.createQueryBuilder().insert().into(e).values(t).execute()}async upsert(e,t,n){const a=this.connection.getMetadata(e);let i,s;i=Array.isArray(n)?{conflictPaths:n}:n,s=Array.isArray(t)?t:[t];const r=a.mapPropertyPathsToColumns(i.conflictPaths),o=a.columns.filter((e=>!r.includes(e)&&s.some((t=>void 0!==e.getEntityValue(t)))));return this.createQueryBuilder().insert().into(e).values(s).orUpdate([...r,...o].map((e=>e.databaseName)),r.map((e=>e.databaseName)),{skipUpdateIfNoValuesChanged:i.skipUpdateIfNoValuesChanged}).execute()}update(e,t,n){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new i.K_("Empty criteria(s) are not allowed for the update method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().update(e).set(n).whereInIds(t).execute():this.createQueryBuilder().update(e).set(n).where(t).execute()}delete(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new i.K_("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().delete().from(e).whereInIds(t).execute():this.createQueryBuilder().delete().from(e).where(t).execute()}softDelete(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new i.K_("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().softDelete().from(e).whereInIds(t).execute():this.createQueryBuilder().softDelete().from(e).where(t).execute()}restore(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new i.K_("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().restore().from(e).whereInIds(t).execute():this.createQueryBuilder().restore().from(e).where(t).execute()}count(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,g.Z.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getCount()}countBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getCount()}async find(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,g.Z.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getMany()}async findBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getMany()}findAndCount(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,g.Z.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getManyAndCount()}findAndCountBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getManyAndCount()}async findByIds(e,t){if(!t.length)return Promise.resolve([]);const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).andWhereInIds(t).getMany()}async findOne(e,t){let n=this.connection.getMetadata(e).name;if(t&&t.join&&(n=t.join.alias),!t.where)throw new Error("You must provide selection conditions in order to find a single row.");return this.createQueryBuilder(e,n).setFindOptions({...t,take:1}).getOne()}async findOneBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t,take:1}).getOne()}async findOneById(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({take:1}).whereInIds(n.ensureEntityIdMap(t)).getOne()}async findOneOrFail(e,t){return this.findOne(e,t).then((n=>null===n?Promise.reject(new p.E(e,t)):Promise.resolve(n)))}async findOneByOrFail(e,t){return this.findOneBy(e,t).then((n=>null===n?Promise.reject(new p.E(e,t)):Promise.resolve(n)))}async clear(e){const t=this.connection.getMetadata(e),n=this.queryRunner||this.connection.createQueryRunner();try{return await n.clearTable(t.tablePath)}finally{this.queryRunner||await n.release()}}async increment(e,t,n,a){const s=this.connection.getMetadata(e),r=s.findColumnWithPropertyPath(n);if(!r)throw new i.K_(`Column ${n} was not found in ${s.targetName} entity.`);if(isNaN(Number(a)))throw new i.K_(`Value "${a}" is not a number.`);const o=n.split(".").reduceRight(((e,t)=>({[t]:e})),(()=>this.connection.driver.escape(r.databaseName)+" + "+a));return this.createQueryBuilder(e,"entity").update(e).set(o).where(t).execute()}async decrement(e,t,n,a){const s=this.connection.getMetadata(e),r=s.findColumnWithPropertyPath(n);if(!r)throw new i.K_(`Column ${n} was not found in ${s.targetName} entity.`);if(isNaN(Number(a)))throw new i.K_(`Value "${a}" is not a number.`);const o=n.split(".").reduceRight(((e,t)=>({[t]:e})),(()=>this.connection.driver.escape(r.databaseName)+" - "+a));return this.createQueryBuilder(e,"entity").update(e).set(o).where(t).execute()}getRepository(e){const t=this.repositories.find((t=>t.target===e));if(t)return t;if("mongodb"===this.connection.driver.options.type){const t=new MongoRepository(e,this,this.queryRunner);return this.repositories.push(t),t}{const t=new Repository(e,this,this.queryRunner);return this.repositories.push(t),t}}getTreeRepository(e){if(!1===this.connection.driver.treeSupport)throw new i.A(this.connection.driver);const t=this.treeRepositories.find((t=>t.target===e));if(t)return t;const n=new TreeRepository(e,this,this.queryRunner);return this.treeRepositories.push(n),n}getMongoRepository(e){return this.connection.getMongoRepository(e)}withRepository(e){const t=e.constructor,{target:n,manager:a,queryRunner:i,...s}=e;return Object.assign(new t(e.target,this),{...s})}getCustomRepository(e){const t=le().entityRepositories.find((t=>t.target===("function"==typeof e?e:e.constructor)));if(!t)throw new i.nJ(e);const n=t.entity?this.connection.getMetadata(t.entity):void 0,a=new t.target(this,n);if(a instanceof class AbstractRepository{get repository(){const e=this.getCustomRepositoryTarget(this);if(!e)throw new T.b(this.constructor);return this.manager.getRepository(e)}get treeRepository(){const e=this.getCustomRepositoryTarget(this);if(!e)throw new T.b(this.constructor);return this.manager.getTreeRepository(e)}createQueryBuilder(e){const t=this.getCustomRepositoryTarget(this.constructor);if(!t)throw new T.b(this.constructor);return this.manager.getRepository(t).createQueryBuilder(e)}createQueryBuilderFor(e,t){return this.getRepositoryFor(e).createQueryBuilder(t)}getRepositoryFor(e){return this.manager.getRepository(e)}getTreeRepositoryFor(e){return this.manager.getTreeRepository(e)}getCustomRepositoryTarget(e){const t=le().entityRepositories.find((t=>t.target===("function"==typeof e?e:e.constructor)));if(!t)throw new b.n(e);return t.entity}})a.manager||(a.manager=this);else{if(!n)throw new i.Re(e);a.manager=this,a.metadata=n}return a}async release(){if(!this.queryRunner)throw new y.r;return this.queryRunner.release()}}class SqljsEntityManager extends EntityManager{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("SqljsEntityManager"),this.driver=e.driver}async loadDatabase(e){await this.driver.load(e)}async saveDatabase(e){await this.driver.save(e)}exportDatabase(){return this.driver.export()}}class EntityManagerFactory{create(e,t){return"mongodb"===e.driver.options.type?new MongoEntityManager(e):"sqljs"===e.driver.options.type?new SqljsEntityManager(e,t):new EntityManager(e,t)}}var G=n(9700);class View{constructor(e){this["@instanceof"]=Symbol.for("View"),e&&(this.database=e.database,this.schema=e.schema,this.name=e.name,this.expression=e.expression,this.materialized=!!e.materialized)}clone(){return new View({database:this.database,schema:this.schema,name:this.name,expression:this.expression,materialized:this.materialized})}static create(e,t){const n={database:e.database,schema:e.schema,name:t.buildTableName(e.tableName,e.schema,e.database),expression:e.expression,materialized:e.tableMetadataArgs.materialized};return new View(n)}}class ViewUtils{static viewMetadataCmp(e,t){return e&&t?e.dependsOn&&(e.dependsOn.has(t.target)||e.dependsOn.has(t.name))?1:t.dependsOn&&(t.dependsOn.has(e.target)||t.dependsOn.has(e.name))?-1:0:0}}class RdbmsSchemaBuilder{constructor(e){this.connection=e,this["@instanceof"]=Symbol.for("RdbmsSchemaBuilder")}async build(){this.queryRunner=this.connection.createQueryRunner(),this.currentDatabase=this.connection.driver.database,this.currentSchema=this.connection.driver.schema;const e=!("cockroachdb"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type||"none"===this.connection.options.migrationsTransactionMode);await this.queryRunner.beforeMigration(),e&&await this.queryRunner.startTransaction();try{await this.createMetadataTableIfNecessary(this.queryRunner);const t=this.entityToSyncMetadatas.map((e=>this.getTablePath(e)));await this.queryRunner.getTables(t),await this.queryRunner.getViews([]),await this.executeSchemaSyncOperationsInProperOrder(),this.connection.queryResultCache&&await this.connection.queryResultCache.synchronize(this.queryRunner),e&&await this.queryRunner.commitTransaction()}catch(t){try{e&&await this.queryRunner.rollbackTransaction()}catch(e){}throw t}finally{await this.queryRunner.afterMigration(),await this.queryRunner.release()}}async createMetadataTableIfNecessary(e){(this.viewEntityToSyncMetadatas.length>0||this.hasGeneratedColumns())&&await this.createTypeormMetadataTable(e)}async log(){this.queryRunner=this.connection.createQueryRunner();try{const e=this.entityToSyncMetadatas.map((e=>this.getTablePath(e)));return await this.queryRunner.getTables(e),await this.queryRunner.getViews([]),this.queryRunner.enableSqlMemory(),await this.executeSchemaSyncOperationsInProperOrder(),this.connection.queryResultCache&&await this.connection.queryResultCache.synchronize(this.queryRunner),this.queryRunner.getMemorySql()}finally{this.queryRunner.disableSqlMemory(),await this.queryRunner.release()}}get entityToSyncMetadatas(){return this.connection.entityMetadatas.filter((e=>e.synchronize&&"entity-child"!==e.tableType&&"view"!==e.tableType))}get viewEntityToSyncMetadatas(){return this.connection.entityMetadatas.filter((e=>"view"===e.tableType&&e.synchronize)).sort(ViewUtils.viewMetadataCmp)}hasGeneratedColumns(){return this.connection.entityMetadatas.some((e=>e.columns.some((e=>e.generatedType))))}async executeSchemaSyncOperationsInProperOrder(){await this.dropOldViews(),await this.dropOldForeignKeys(),await this.dropOldIndices(),await this.dropOldChecks(),await this.dropOldExclusions(),await this.dropCompositeUniqueConstraints(),await this.renameColumns(),await this.createNewTables(),await this.dropRemovedColumns(),await this.addNewColumns(),await this.updatePrimaryKeys(),await this.updateExistColumns(),await this.createNewIndices(),await this.createNewChecks(),await this.createNewExclusions(),await this.createCompositeUniqueConstraints(),await this.createForeignKeys(),await this.createViews()}getTablePath(e){const t=this.connection.driver.parseTableName(e);return this.connection.driver.buildTableName(t.tableName,t.schema||this.currentSchema,t.database||this.currentDatabase)}async dropOldForeignKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.foreignKeys.filter((t=>{const n=e.foreignKeys.find((e=>t.name===e.name&&this.getTablePath(t)===this.getTablePath(e.referencedEntityMetadata)));return!n||n.onDelete&&n.onDelete!==t.onDelete||n.onUpdate&&n.onUpdate!==t.onUpdate}));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old foreign keys of ${t.name}: ${n.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropForeignKeys(t,n))}}async renameTables(){}async renameColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;if(e.columns.length!==t.columns.length)continue;const n=e.columns.filter((e=>!t.columns.find((t=>t.name===e.databaseName&&t.type===this.connection.driver.normalizeType(e)&&t.isNullable===e.isNullable&&t.isUnique===this.connection.driver.normalizeIsUnique(e)))));if(0===n.length||n.length>1)continue;const a=t.columns.filter((t=>!e.columns.find((e=>e.databaseName===t.name&&this.connection.driver.normalizeType(e)===t.type&&e.isNullable===t.isNullable&&this.connection.driver.normalizeIsUnique(e)===t.isUnique))));if(0===a.length||a.length>1)continue;const i=a[0].clone();i.name=n[0].databaseName,this.connection.logger.logSchemaBuild(`renaming column "${a[0].name}" in to "${i.name}"`),await this.queryRunner.renameColumn(t,a[0],i)}}async dropOldIndices(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.indices.filter((t=>{const n=e.indices.find((e=>e.name===t.name));return!n||!1!==n.synchronize&&(n.isUnique!==t.isUnique||(n.isSpatial!==t.isSpatial||(!(!this.connection.driver.isFullTextColumnTypeSupported()||n.isFulltext===t.isFulltext)||(n.columns.length!==t.columnNames.length||!n.columns.every((e=>-1!==t.columnNames.indexOf(e.databaseName)))))))})).map((async e=>{this.connection.logger.logSchemaBuild(`dropping an index: "${e.name}" from table ${t.name}`),await this.queryRunner.dropIndex(t,e)}));await Promise.all(n)}}async dropOldChecks(){if(!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.checks.filter((t=>!e.checks.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old check constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropCheckConstraints(t,n))}}async dropCompositeUniqueConstraints(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.uniques.filter((t=>t.columnNames.length>1&&!e.uniques.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old unique constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropUniqueConstraints(t,n))}}async dropOldExclusions(){if("postgres"===this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.exclusions.filter((t=>!e.exclusions.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old exclusion constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropExclusionConstraints(t,n))}}async createNewTables(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(t)continue;this.connection.logger.logSchemaBuild(`creating a new table: ${this.getTablePath(e)}`);const n=Table.create(e,this.connection.driver);await this.queryRunner.createTable(n,!1,!1),this.queryRunner.loadedTables.push(n)}}async createViews(){for(const e of this.viewEntityToSyncMetadatas){const t=this.queryRunner.loadedViews.find((t=>{const n="string"==typeof t.expression?t.expression.trim():t.expression(this.connection).getQuery(),a="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.getTablePath(t)===this.getTablePath(e)&&n===a}));if(t)continue;this.connection.logger.logSchemaBuild(`creating a new view: ${this.getTablePath(e)}`);const n=View.create(e,this.connection.driver);await this.queryRunner.createView(n),this.queryRunner.loadedViews.push(n)}}async dropOldViews(){const e=[],t=this.viewEntityToSyncMetadatas,n=new Map;for(const e of this.queryRunner.loadedViews){const a=t.find((t=>this.getTablePath(e)===this.getTablePath(t)));a&&n.set(e,a)}for(const t of this.queryRunner.loadedViews){const a=n.get(t);if(!a)continue;("string"==typeof t.expression?t.expression.trim():t.expression(this.connection).getQuery())!==("string"==typeof a.expression?a.expression.trim():a.expression(this.connection).getQuery())&&(this.connection.logger.logSchemaBuild(`dropping an old view: ${t.name}`),e.push(t))}const a=e=>{const t=n.get(e);let i=[e];if(!t)return i;for(const[s,r]of n.entries())s!==e&&r.dependsOn&&(r.dependsOn.has(t.target)||r.dependsOn.has(t.name))&&(i=i.concat(a(s)));return i},i=new Set(e.map((e=>a(e))).reduce(((e,t)=>e.concat(t)),[]).sort(((e,t)=>ViewUtils.viewMetadataCmp(n.get(e),n.get(t)))).reverse());for(const e of i)await this.queryRunner.dropView(e);this.queryRunner.loadedViews=this.queryRunner.loadedViews.filter((e=>!i.has(e)))}async dropRemovedColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.columns.filter((t=>!e.columns.find((e=>e.databaseName===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`columns dropped in ${t.name}: `+n.map((e=>e.name)).join(", ")),await this.queryRunner.dropColumns(t,n))}}async addNewColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.columns.filter((e=>!t.columns.find((t=>t.name===e.databaseName))));if(0===n.length)continue;const a=this.metadataColumnsToTableColumnOptions(n).map((e=>new TableColumn(e)));0!==a.length&&(this.connection.logger.logSchemaBuild("new columns added: "+n.map((e=>e.databaseName)).join(", ")),await this.queryRunner.addColumns(t,a))}}async updatePrimaryKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.columns.filter((e=>e.isPrimary));if(t.columns.filter((e=>e.isPrimary)).length!==n.length&&n.length>1){const e=n.map((e=>new TableColumn(TableUtils.createTableColumnOptions(e,this.connection.driver))));await this.queryRunner.updatePrimaryKeys(t,e)}}}async updateExistColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=this.connection.driver.findChangedColumns(t.columns,e.columns);if(0===n.length)continue;for(const t of n)await this.dropColumnReferencedForeignKeys(this.getTablePath(e),t.databaseName);for(const t of n)await this.dropColumnCompositeIndices(this.getTablePath(e),t.databaseName);if(!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type)for(const t of n)await this.dropColumnCompositeUniques(this.getTablePath(e),t.databaseName);const a=n.map((e=>{const n=t.columns.find((t=>t.name===e.databaseName)),a=TableUtils.createTableColumnOptions(e,this.connection.driver);return{oldColumn:n,newColumn:new TableColumn(a)}}));0!==a.length&&(this.connection.logger.logSchemaBuild(`columns changed in "${t.name}". updating: `+n.map((e=>e.databaseName)).join(", ")),await this.queryRunner.changeColumns(t,a))}}async createNewIndices(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.indices.filter((e=>!t.indices.find((t=>t.name===e.name))&&!0===e.synchronize)).map((e=>TableIndex.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new indices ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createIndices(t,n))}}async createNewChecks(){if(!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.checks.filter((e=>!t.checks.find((t=>t.name===e.name)))).map((e=>TableCheck.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new check constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createCheckConstraints(t,n))}}async createCompositeUniqueConstraints(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.uniques.filter((e=>e.columns.length>1&&!t.uniques.find((t=>t.name===e.name)))).map((e=>TableUnique.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new unique constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createUniqueConstraints(t,n))}}async createNewExclusions(){if("postgres"===this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.exclusions.filter((e=>!t.exclusions.find((t=>t.name===e.name)))).map((e=>TableExclusion.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new exclusion constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createExclusionConstraints(t,n))}}async createForeignKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.foreignKeys.filter((e=>!t.foreignKeys.find((t=>t.name===e.name&&this.getTablePath(t)===this.getTablePath(e.referencedEntityMetadata)))));if(0===n.length)continue;const a=n.map((e=>TableForeignKey.create(e,this.connection.driver)));this.connection.logger.logSchemaBuild(`creating a foreign keys: ${n.map((e=>e.name)).join(", ")} on table "${t.name}"`),await this.queryRunner.createForeignKeys(t,a)}}async dropColumnReferencedForeignKeys(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=[],i=n.foreignKeys.find((e=>-1!==e.columnNames.indexOf(t)));if(i){const e=n.clone();e.foreignKeys=[i],a.push(e),n.removeForeignKey(i)}for(const n of this.queryRunner.loadedTables){const i=n.foreignKeys.filter((n=>this.getTablePath(n)===e&&-1!==n.referencedColumnNames.indexOf(t)));if(i.length>0){const e=n.clone();e.foreignKeys=i,a.push(e),i.forEach((e=>n.removeForeignKey(e)))}}if(a.length>0)for(const e of a)this.connection.logger.logSchemaBuild(`dropping related foreign keys of ${e.name}: ${e.foreignKeys.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropForeignKeys(e,e.foreignKeys)}async dropColumnCompositeIndices(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=n.indices.filter((e=>e.columnNames.length>1&&-1!==e.columnNames.indexOf(t)));0!==a.length&&(this.connection.logger.logSchemaBuild(`dropping related indices of "${e}"."${t}": ${a.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropIndices(n,a))}async dropColumnCompositeUniques(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=n.uniques.filter((e=>e.columnNames.length>1&&-1!==e.columnNames.indexOf(t)));0!==a.length&&(this.connection.logger.logSchemaBuild(`dropping related unique constraints of "${e}"."${t}": ${a.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropUniqueConstraints(n,a))}metadataColumnsToTableColumnOptions(e){return e.map((e=>TableUtils.createTableColumnOptions(e,this.connection.driver)))}async createTypeormMetadataTable(e){const t=this.currentSchema,n=this.currentDatabase,a=this.connection.driver.buildTableName(this.connection.metadataTableName,t,n),i="spanner"===this.connection.driver.options.type;await e.createTable(new Table({database:n,schema:t,name:a,columns:[{name:"type",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataType}),isNullable:!1,isPrimary:i},{name:"database",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataDatabase}),isNullable:!0,isPrimary:i},{name:"schema",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataSchema}),isNullable:!0,isPrimary:i},{name:"table",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataTable}),isNullable:!0,isPrimary:i},{name:"name",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataName}),isNullable:!0,isPrimary:i},{name:"value",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataValue}),isNullable:!0,isPrimary:i}]}),!0)}}class AbstractSqliteDriver{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="nested",this.supportedDataTypes=["int","integer","tinyint","smallint","mediumint","bigint","unsigned big int","int2","int8","integer","character","varchar","varying character","nchar","native character","nvarchar","text","clob","text","blob","real","double","double precision","float","real","numeric","decimal","boolean","date","time","datetime"],this.supportedUpsertType="on-conflict-do-update",this.withLengthColumnTypes=["character","varchar","varying character","nchar","native character","nvarchar","text","blob","clob"],this.spatialTypes=[],this.withPrecisionColumnTypes=["real","double","double precision","float","real","numeric","decimal","date","time","datetime"],this.withScaleColumnTypes=["real","double","double precision","float","real","numeric","decimal"],this.mappedDataTypes={createDate:"datetime",createDateDefault:"datetime('now')",updateDate:"datetime",updateDateDefault:"datetime('now')",deleteDate:"datetime",deleteDateNullable:!0,version:"integer",treeLevel:"integer",migrationId:"integer",migrationName:"varchar",migrationTimestamp:"bigint",cacheId:"int",cacheIdentifier:"varchar",cacheTime:"bigint",cacheDuration:"int",cacheQuery:"text",cacheResult:"text",metadataType:"varchar",metadataDatabase:"varchar",metadataSchema:"varchar",metadataTable:"varchar",metadataName:"varchar",metadataValue:"text"},this.cteCapabilities={enabled:!0,requiresRecursiveHint:!0},this.attachedDatabases={},this.connection=e,this.options=e.options,this.database=d.z.buildDriverOptions(this.options).database}async connect(){this.databaseConnection=await this.createDatabaseConnection()}afterConnect(){return Promise.resolve()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close((n=>n?t(n):e()))}))}hasAttachedDatabases(){return!!Object.keys(this.attachedDatabases).length}getAttachedDatabaseHandleByRelativePath(e){var t,n;return null===(n=null===(t=this.attachedDatabases)||void 0===t?void 0:t[e])||void 0===n?void 0:n.attachHandle}getAttachedDatabasePathRelativeByHandle(e){var t;return null===(t=Object.values(this.attachedDatabases).find((({attachHandle:t})=>e===t)))||void 0===t?void 0:t.attachFilepathRelative}createSchemaBuilder(){return new RdbmsSchemaBuilder(this.connection)}preparePersistentValue(e,t){return t.transformer&&(e=B.A.transformTo(t.transformer,e)),null==e?e:t.type===Boolean||"boolean"===t.type?!0===e?1:0:"date"===t.type?DateUtils.mixedDateToDateString(e):"time"===t.type?DateUtils.mixedDateToTimeString(e):"datetime"===t.type||t.type===Date?DateUtils.mixedDateToUtcDatetimeString(e):"simple-array"===t.type?DateUtils.simpleArrayToString(e):"simple-json"===t.type?DateUtils.simpleJsonToString(e):"simple-enum"===t.type?DateUtils.simpleEnumToString(e):e}prepareHydratedValue(e,t){return null==e?t.transformer?B.A.transformFrom(t.transformer,e):e:(t.type===Boolean||"boolean"===t.type?e=!!e:"datetime"===t.type||t.type===Date?(e&&"string"==typeof e&&(/^\d\d\d\d-\d\d-\d\d \d\d:\d\d/.test(e)&&(e=e.replace(" ","T")),/^\d\d\d\d-\d\d-\d\dT\d\d:\d\d(:\d\d(\.\d\d\d)?)?$/.test(e)&&(e+="Z")),e=DateUtils.normalizeHydratedDate(e)):"date"===t.type?e=DateUtils.mixedDateToDateString(e):"time"===t.type?e=DateUtils.mixedTimeToString(e):"simple-array"===t.type?e=DateUtils.stringToSimpleArray(e):"simple-json"===t.type?e=DateUtils.stringToSimpleJson(e):"simple-enum"===t.type&&(e=DateUtils.stringToSimpleEnum(e,t)),t.transformer&&(e=B.A.transformFrom(t.transformer,e)),e)}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>"boolean"==typeof n[e]?!0===n[e]?1:0:n[e]instanceof Date?DateUtils.mixedDateToUtcDatetimeString(n[e]):n[e]));return t&&Object.keys(t).length?[e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let s=t[i];return n?s.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):"function"==typeof s?s():"number"==typeof s?String(s):s instanceof Date?(a.push(DateUtils.mixedDateToUtcDatetimeString(s)),this.createParameter(i,a.length-1)):(a.push(s),this.createParameter(i,a.length-1))})),a]:[e,a]}escape(e){return'"'+e+'"'}buildTableName(e,t,n){return e}parseTableName(e){var t;const n=this.database,a=void 0;if(s.a.isTable(e)||s.a.isView(e)){const t=this.parseTableName(e.schema?`"${e.schema}"."${e.name}"`:e.name);return{database:e.database||t.database||n,schema:e.schema||t.schema||a,tableName:t.tableName}}if(s.a.isTableForeignKey(e)){const t=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||t.database||n,schema:e.referencedSchema||t.schema||a,tableName:t.tableName}}if(s.a.isEntityMetadata(e))return{database:e.database||n,schema:e.schema||a,tableName:e.tableName};const i=e.split(".");if(3===i.length)return{database:i[0]||n,schema:i[1]||a,tableName:i[2]};if(2===i.length){return{database:null!==(t=this.getAttachedDatabasePathRelativeByHandle(i[0]))&&void 0!==t?t:n,schema:i[0],tableName:i[1]}}return{database:n,schema:a,tableName:e}}normalizeType(e){return e.type===Number||"int"===e.type?"integer":e.type===String?"varchar":e.type===Date?"datetime":e.type===Boolean?"boolean":"uuid"===e.type?"varchar":"simple-array"===e.type||"simple-json"===e.type?"text":"simple-enum"===e.type?"varchar":e.type||""}normalizeDefault(e){const t=e.default;return"number"==typeof t?""+t:"boolean"==typeof t?t?"1":"0":"function"==typeof t?t():"string"==typeof t?`'${t}'`:null!=t?`${t}`:void 0}normalizeIsUnique(e){return e.entityMetadata.uniques.some((t=>1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){return e.length?e.length.toString():""}createFullType(e){let t=e.type;return e.enum?"varchar":(e.length?t+="("+e.length+")":null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+="("+e.precision+","+e.scale+")":null!==e.precision&&void 0!==e.precision&&(t+="("+e.precision+")"),e.isArray&&(t+=" array"),t)}obtainMasterConnection(){return Promise.resolve()}obtainSlaveConnection(){return Promise.resolve()}createGeneratedMap(e,t,n,a){const i=e.generatedColumns.reduce(((e,i)=>{let s;return"increment"===i.generationStrategy&&t&&(s=t-a+n+1),s?j.s.mergeDeep(e,i.createValueMap(s)):e}),{});return Object.keys(i).length>0?i:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));if(!n)return!1;return n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==t.length||n.precision!==t.precision||n.scale!==t.scale||this.normalizeDefault(t)!==n.default||n.isPrimary!==t.isPrimary||n.isNullable!==t.isNullable||n.generatedType!==t.generatedType||n.asExpression!==t.asExpression||n.isUnique!==this.normalizeIsUnique(t)||"uuid"!==t.generationStrategy&&n.isGenerated!==t.isGenerated}))}isReturningSqlSupported(){return!1}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!1}createParameter(e,t){return"?"}createDatabaseConnection(){throw new i.K_("Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers")}loadDependencies(){}}var z,H=n(5128),J=n(7316),Y=n(6556);class Query{constructor(e,t){this.query=e,this.parameters=t,this["@instanceof"]=Symbol.for("Query")}}class SqlInMemory{constructor(){this.upQueries=[],this.downQueries=[]}}class BaseQueryRunner{constructor(){this.isReleased=!1,this.isTransactionActive=!1,this.data={},this.loadedTables=[],this.loadedViews=[],this.sqlMemoryMode=!1,this.sqlInMemory=new SqlInMemory,this.transactionDepth=0,this.cachedTablePaths={}}async beforeMigration(){}async afterMigration(){}async getTable(e){return this.loadedTables=await this.loadTables([e]),this.loadedTables.length>0?this.loadedTables[0]:void 0}async getTables(e){return e?(this.loadedTables=await this.loadTables(e),this.loadedTables):await this.loadTables(e)}async getView(e){return this.loadedViews=await this.loadViews([e]),this.loadedViews.length>0?this.loadedViews[0]:void 0}async getViews(e){return this.loadedViews=await this.loadViews(e),this.loadedViews}enableSqlMemory(){this.sqlInMemory=new SqlInMemory,this.sqlMemoryMode=!0}disableSqlMemory(){this.sqlInMemory=new SqlInMemory,this.sqlMemoryMode=!1}clearSqlMemory(){this.sqlInMemory=new SqlInMemory}getMemorySql(){return this.sqlInMemory}async executeMemoryUpSql(){for(const{query:e,parameters:t}of this.sqlInMemory.upQueries)await this.query(e,t)}async executeMemoryDownSql(){for(const{query:e,parameters:t}of this.sqlInMemory.downQueries.reverse())await this.query(e,t)}getReplicationMode(){return this.mode}async getCachedView(e){const t=this.loadedViews.find((t=>t.name===e));if(t)return t;const n=await this.loadViews([e]);if(n.length>0)return this.loadedViews.push(n[0]),n[0];throw new f.K(`View "${e}" does not exist.`)}async getCachedTable(e){if(e in this.cachedTablePaths){const t=this.cachedTablePaths[e],n=this.loadedTables.find((e=>this.getTablePath(e)===t));if(n)return n}const t=await this.loadTables([e]);if(t.length>0){const n=this.getTablePath(t[0]),a=this.loadedTables.find((e=>this.getTablePath(e)===n));return a||(this.cachedTablePaths[e]=this.getTablePath(t[0]),this.loadedTables.push(t[0]),t[0])}throw new f.K(`Table "${e}" does not exist.`)}replaceCachedTable(e,t){const n=this.getTablePath(e),a=this.loadedTables.find((e=>this.getTablePath(e)===n));for(const[e,a]of Object.entries(this.cachedTablePaths))a===n&&(this.cachedTablePaths[e]=this.getTablePath(t));a&&(a.database=t.database,a.schema=t.schema,a.name=t.name,a.columns=t.columns,a.indices=t.indices,a.foreignKeys=t.foreignKeys,a.uniques=t.uniques,a.checks=t.checks,a.justCreated=t.justCreated,a.engine=t.engine)}getTablePath(e){const t=this.connection.driver.parseTableName(e);return this.connection.driver.buildTableName(t.tableName,t.schema,t.database)}getTypeormMetadataTableName(){const e=this.connection.driver.options;return this.connection.driver.buildTableName(this.connection.metadataTableName,e.schema,e.database)}selectTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i}){const s=this.connection.createQueryBuilder(),r=s.select().from(this.getTypeormMetadataTableName(),"t").where(`${s.escape("type")} = :type`,{type:a}).andWhere(`${s.escape("name")} = :name`,{name:i});e&&r.andWhere(`${s.escape("database")} = :database`,{database:e}),t&&r.andWhere(`${s.escape("schema")} = :schema`,{schema:t}),n&&r.andWhere(`${s.escape("table")} = :table`,{table:n});const[o,c]=r.getQueryAndParameters();return new Query(o,c)}insertTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i,value:s}){const[r,o]=this.connection.createQueryBuilder().insert().into(this.getTypeormMetadataTableName()).values({database:e,schema:t,table:n,type:a,name:i,value:s}).getQueryAndParameters();return new Query(r,o)}deleteTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i}){const s=this.connection.createQueryBuilder(),r=s.delete().from(this.getTypeormMetadataTableName()).where(`${s.escape("type")} = :type`,{type:a}).andWhere(`${s.escape("name")} = :name`,{name:i});e&&r.andWhere(`${s.escape("database")} = :database`,{database:e}),t&&r.andWhere(`${s.escape("schema")} = :schema`,{schema:t}),n&&r.andWhere(`${s.escape("table")} = :table`,{table:n});const[o,c]=r.getQueryAndParameters();return new Query(o,c)}isColumnChanged(e,t,n,a){return e.charset!==t.charset||e.collation!==t.collation||e.precision!==t.precision||e.scale!==t.scale||e.width!==t.width||e.zerofill!==t.zerofill||e.unsigned!==t.unsigned||e.asExpression!==t.asExpression||n&&e.default!==t.default||e.onUpdate!==t.onUpdate||e.isNullable!==t.isNullable||a&&e.comment!==t.comment||!j.s.isArraysEqual(e.enum||[],t.enum||[])}isDefaultColumnLength(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n){if(this.connection.driver.getColumnLength(n))return!1}}return!!(this.connection.driver.dataTypeDefaults&&this.connection.driver.dataTypeDefaults[t.type]&&this.connection.driver.dataTypeDefaults[t.type].length)&&this.connection.driver.dataTypeDefaults[t.type].length.toString()===n.toString()}isDefaultColumnPrecision(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&null!==n.precision&&void 0!==n.precision)return!1}return!(!this.connection.driver.dataTypeDefaults||!this.connection.driver.dataTypeDefaults[t.type]||null===this.connection.driver.dataTypeDefaults[t.type].precision||void 0===this.connection.driver.dataTypeDefaults[t.type].precision)&&this.connection.driver.dataTypeDefaults[t.type].precision===n}isDefaultColumnScale(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&null!==n.scale&&void 0!==n.scale)return!1}return!(!this.connection.driver.dataTypeDefaults||!this.connection.driver.dataTypeDefaults[t.type]||null===this.connection.driver.dataTypeDefaults[t.type].scale||void 0===this.connection.driver.dataTypeDefaults[t.type].scale)&&this.connection.driver.dataTypeDefaults[t.type].scale===n}async executeQueries(e,t){if(s.a.isQuery(e)&&(e=[e]),s.a.isQuery(t)&&(t=[t]),this.sqlInMemory.upQueries.push(...e),this.sqlInMemory.downQueries.push(...t),!0===this.sqlMemoryMode)return Promise.resolve();for(const{query:t,parameters:n}of e)await this.query(t,n)}}!function(e){e.VIEW="VIEW",e.MATERIALIZED_VIEW="MATERIALIZED_VIEW",e.GENERATED_COLUMN="GENERATED_COLUMN"}(z||(z={}));class AbstractSqliteQueryRunner extends BaseQueryRunner{constructor(){super(),this.transactionPromise=null}connect(){return Promise.resolve(this.driver.databaseConnection)}release(){return this.loadedTables=[],this.clearSqlMemory(),Promise.resolve()}async startTransaction(e){if("none"===this.driver.transactionSupport)throw new i.K_(`Transactions aren't supported by ${this.connection.driver.options.type}.`);if(this.isTransactionActive&&"simple"===this.driver.transactionSupport)throw new i.SF;if(e&&"READ UNCOMMITTED"!==e&&"SERIALIZABLE"!==e)throw new i.K_("SQLite only supports SERIALIZABLE and READ UNCOMMITTED isolation");this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(e&&("READ UNCOMMITTED"===e?await this.query("PRAGMA read_uncommitted = true"):await this.query("PRAGMA read_uncommitted = false")),await this.query("BEGIN TRANSACTION")):await this.query(`SAVEPOINT typeorm_${this.transactionDepth}`),this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?await this.query("RELEASE SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.query("COMMIT"),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?await this.query("ROLLBACK TO SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.query("ROLLBACK"),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}stream(e,t,n,a){throw new i.K_("Stream is not supported by sqlite driver.")}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){return Promise.resolve(!1)}async getCurrentDatabase(){return Promise.resolve(void 0)}async hasSchema(e){throw new i.K_("This driver does not support table schemas")}async getCurrentSchema(){return Promise.resolve(void 0)}async hasTable(e){const t=`SELECT * FROM "sqlite_master" WHERE "type" = 'table' AND "name" = '${s.a.isTable(e)?e.name:e}'`;return!!(await this.query(t)).length}async hasColumn(e,t){const n=s.a.isTable(e)?e.name:e,a=`PRAGMA table_xinfo(${this.escapePath(n)})`;return!!(await this.query(a)).find((e=>e.name===t))}async createDatabase(e,t){return Promise.resolve()}async dropDatabase(e,t){return Promise.resolve()}async createSchema(e,t){return Promise.resolve()}async dropSchema(e,t){return Promise.resolve()}async createTable(e,t=!1,n=!0,a=!0){const i=[],s=[];if(t){if(await this.hasTable(e))return Promise.resolve()}i.push(this.createTableSql(e,n)),s.push(this.dropTableSql(e)),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),s.push(this.dropIndexSql(t))}));const r=e.columns.filter((e=>e.generatedType&&e.asExpression));for(const t of r){const n=this.insertTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name});i.push(n),s.push(a)}await this.executeQueries(i,s)}async dropTable(e,t,n=!0,a=!0){if(t){if(!await this.hasTable(e))return Promise.resolve()}const i=n,r=s.a.isTable(e)?e:await this.getCachedTable(e),o=[],c=[];a&&r.indices.forEach((e=>{o.push(this.dropIndexSql(e)),c.push(this.createIndexSql(r,e))})),o.push(this.dropTableSql(r,t)),c.push(this.createTableSql(r,i));const l=r.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of l){const t=this.deleteTypeormMetadataSql({table:r.name,type:z.GENERATED_COLUMN,name:e.name}),n=this.insertTypeormMetadataSql({table:r.name,type:z.GENERATED_COLUMN,name:e.name,value:e.asExpression});o.push(t),c.push(n)}await this.executeQueries(o,c)}async createView(e){const t=[],n=[];t.push(this.createViewSql(e)),t.push(this.insertViewDefinitionSql(e)),n.push(this.dropViewSql(e)),n.push(this.deleteViewDefinitionSql(e)),await this.executeQueries(t,n)}async dropView(e){const t=s.a.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();a.name=t;const i=new Query(`ALTER TABLE ${this.escapePath(n.name)} RENAME TO ${this.escapePath(t)}`),r=new Query(`ALTER TABLE ${this.escapePath(t)} RENAME TO ${this.escapePath(n.name)}`);await this.executeQueries(i,r),a.uniques.forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(n,e.columnNames);e.name===t&&(e.name=this.connection.namingStrategy.uniqueConstraintName(a,e.columnNames))})),a.foreignKeys.forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(n,e.columnNames,this.getTablePath(e),e.referencedColumnNames);e.name===t&&(e.name=this.connection.namingStrategy.foreignKeyName(a,e.columnNames,this.getTablePath(e),e.referencedColumnNames))})),a.indices.forEach((e=>{const t=this.connection.namingStrategy.indexName(n,e.columnNames,e.where);e.name===t&&(e.name=this.connection.namingStrategy.indexName(a,e.columnNames,e.where))})),n.name=a.name,await this.recreateTable(a,n)}async addColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);return this.addColumns(n,[t])}async addColumns(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addColumn(e))),await this.recreateTable(a,n)}async renameColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e),r=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!r)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);let o;return s.a.isTableColumn(n)?o=n:(o=r.clone(),o.name=n),this.changeColumn(a,r,o)}async changeColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e),r=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!r)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);await this.changeColumns(a,[{oldColumn:r,newColumn:n}])}async changeColumns(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>{e.newColumn.name!==e.oldColumn.name&&(a.findColumnUniques(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.uniqueConstraintName(n,t.columnNames);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.uniqueConstraintName(a,t.columnNames))})),a.findColumnForeignKeys(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.foreignKeyName(a,t.columnNames,this.getTablePath(t),t.referencedColumnNames))})),a.findColumnIndices(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.indexName(n,t.columnNames,t.where);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.indexName(a,t.columnNames,t.where))})));const t=a.columns.find((t=>t.name===e.oldColumn.name));t&&(a.columns[a.columns.indexOf(t)]=e.newColumn)})),await this.recreateTable(a,n)}async dropColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new i.K_(`Column "${t}" was not found in table "${n.name}"`);await this.dropColumns(n,[a])}async dropColumns(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>{const t=s.a.isTableColumn(e)?e:n.findColumnByName(e);if(!t)throw new Error(`Column "${e}" was not found in table "${n.name}"`);a.removeColumn(t),a.findColumnUniques(t).forEach((e=>a.removeUniqueConstraint(e))),a.findColumnIndices(t).forEach((e=>a.removeIndex(e))),a.findColumnForeignKeys(t).forEach((e=>a.removeForeignKey(e)))})),await this.recreateTable(a,n)}async createPrimaryKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();a.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)})),await this.recreateTable(a,n),n.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)}))}async updatePrimaryKeys(e,t){await Promise.resolve()}async dropPrimaryKey(e){const t=s.a.isTable(e)?e:await this.getCachedTable(e),n=t.clone();n.primaryColumns.forEach((e=>{e.isPrimary=!1})),await this.recreateTable(n,t),t.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){await this.createUniqueConstraints(e,[t])}async createUniqueConstraints(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addUniqueConstraint(e))),await this.recreateTable(a,n)}async dropUniqueConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableUnique(t)?t:n.uniques.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied unique constraint was not found in table ${n.name}`);await this.dropUniqueConstraints(n,[a])}async dropUniqueConstraints(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeUniqueConstraint(e))),await this.recreateTable(a,n)}async createCheckConstraint(e,t){await this.createCheckConstraints(e,[t])}async createCheckConstraints(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addCheckConstraint(e))),await this.recreateTable(a,n)}async dropCheckConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableCheck(t)?t:n.checks.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied check constraint was not found in table ${n.name}`);await this.dropCheckConstraints(n,[a])}async dropCheckConstraints(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeCheckConstraint(e))),await this.recreateTable(a,n)}async createExclusionConstraint(e,t){throw new i.K_("Sqlite does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new i.K_("Sqlite does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new i.K_("Sqlite does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new i.K_("Sqlite does not support exclusion constraints.")}async createForeignKey(e,t){await this.createForeignKeys(e,[t])}async createForeignKeys(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addForeignKey(e))),await this.recreateTable(a,n)}async dropForeignKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied foreign key was not found in table ${n.name}`);await this.dropForeignKeys(e,[a])}async dropForeignKeys(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeForeignKey(e))),await this.recreateTable(a,n)}async createIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.indexName(n,t.columnNames,t.where));const a=this.createIndexSql(n,t),i=this.dropIndexSql(t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){const n=t.map((t=>this.createIndex(e,t)));await Promise.all(n)}async dropIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied index ${t} was not found in table ${n.name}`);const r=this.dropIndexSql(a),o=this.createIndexSql(n,a);await this.executeQueries(r,o),n.removeIndex(a)}async dropIndices(e,t){const n=t.map((t=>this.dropIndex(e,t)));await Promise.all(n)}async clearTable(e){await this.query(`DELETE FROM ${this.escapePath(e)}`)}async clearDatabase(e){let t;e&&this.driver.getAttachedDatabaseHandleByRelativePath(e)&&(t=this.driver.getAttachedDatabaseHandleByRelativePath(e)),await this.query("PRAGMA foreign_keys = OFF");const n=this.isTransactionActive;n||await this.startTransaction();try{const e=t?`SELECT 'DROP VIEW "${t}"."' || name || '";' as query FROM "${t}"."sqlite_master" WHERE "type" = 'view'`:"SELECT 'DROP VIEW \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'view'",a=await this.query(e);await Promise.all(a.map((e=>this.query(e.query))));const i=t?`SELECT 'DROP TABLE "${t}"."' || name || '";' as query FROM "${t}"."sqlite_master" WHERE "type" = 'table' AND "name" != 'sqlite_sequence'`:"SELECT 'DROP TABLE \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'table' AND \"name\" != 'sqlite_sequence'",s=await this.query(i);await Promise.all(s.map((e=>this.query(e.query)))),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}finally{await this.query("PRAGMA foreign_keys = ON")}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=e.map((e=>"'"+e+"'")).join(", ");let n=`SELECT "t".* FROM "${this.getTypeormMetadataTableName()}" "t" INNER JOIN "sqlite_master" s ON "s"."name" = "t"."name" AND "s"."type" = 'view' WHERE "t"."type" = '${z.VIEW}'`;t.length>0&&(n+=` AND "t"."name" IN (${t})`);return(await this.query(n)).map((e=>{const t=new View;return t.name=e.name,t.expression=e.value,t}))}async loadTableRecords(e,t){let n;const[a,i]=this.splitTablePath(e);a&&this.driver.getAttachedDatabasePathRelativeByHandle(a)&&(n=this.driver.getAttachedDatabasePathRelativeByHandle(a));return await this.query(`SELECT ${n?`'${n}'`:null} as database, ${a?`'${a}'`:null} as schema, * FROM ${a?`"${a}".`:""}${this.escapePath("sqlite_master")} WHERE "type" = '${t}' AND "${"table"===t?"name":"tbl_name"}" IN ('${i}')`)}async loadPragmaRecords(e,t){const[,n]=this.splitTablePath(e);return await this.query(`PRAGMA ${t}("${n}")`)}async loadTables(e){if(e&&0===e.length)return[];let t,n=[];if(e)n=(await Promise.all(e.map((e=>this.loadTableRecords(e,"table"))))).reduce(((e,t)=>[...e,...t]),[]).filter(Boolean),t=(await Promise.all((null!=e?e:[]).map((e=>this.loadTableRecords(e,"index"))))).reduce(((e,t)=>[...e,...t]),[]).filter(Boolean);else{const e='SELECT * FROM "sqlite_master" WHERE "type" = \'table\'';n.push(...await this.query(e));const a=n.map((({name:e})=>`'${e}'`)).join(", ");t=await this.query(`SELECT * FROM "sqlite_master" WHERE "type" = 'index' AND "tbl_name" IN (${a})`)}return 0===n.length?[]:Promise.all(n.map((async e=>{const n=e.database&&this.driver.getAttachedDatabaseHandleByRelativePath(e.database)?`${this.driver.getAttachedDatabaseHandleByRelativePath(e.database)}.${e.name}`:e.name,a=new Table({name:n}),i=e.sql,[s,r,o]=await Promise.all([this.loadPragmaRecords(n,"table_xinfo"),this.loadPragmaRecords(n,"index_list"),this.loadPragmaRecords(n,"foreign_key_list")]);let c;const l=e.sql;let u,h=l.toUpperCase().indexOf("AUTOINCREMENT");if(-1!==h){c=l.substr(0,h);const e=c.lastIndexOf(","),t=c.lastIndexOf("(");-1!==e?(c=c.substr(e),c=c.substr(0,c.lastIndexOf('"')),c=c.substr(c.indexOf('"')+1)):-1!==t&&(c=c.substr(t),c=c.substr(0,c.lastIndexOf('"')),c=c.substr(c.indexOf('"')+1))}a.columns=await Promise.all(s.map((async e=>{const t=new TableColumn;if(t.name=e.name,t.type=e.type.toLowerCase(),t.default=null!==e.dflt_value&&void 0!==e.dflt_value?e.dflt_value:void 0,t.isNullable=0===e.notnull,t.isPrimary=e.pk>0,t.comment="",t.isGenerated=c===e.name,t.isGenerated&&(t.generationStrategy="increment"),2===e.hidden||3===e.hidden){t.generatedType=2===e.hidden?"VIRTUAL":"STORED";const n=await this.selectTypeormMetadataSql({table:a.name,type:z.GENERATED_COLUMN,name:t.name}),i=await this.query(n.query,n.parameters);i[0]&&i[0].value?t.asExpression=i[0].value:t.asExpression=""}if("varchar"===t.type){const e=i.match(new RegExp('"('+t.name+")\" varchar CHECK\\s*\\(\\s*\"\\1\"\\s+IN\\s*\\(('[^']+'(?:\\s*,\\s*'[^']+')+)\\s*\\)\\s*\\)"));e&&(t.enum=e[2].substr(1,e[2].length-2).split("','"))}let n=t.type.indexOf("(");if(-1!==n){const e=t.type;let a=e.substr(0,n);if(this.driver.withLengthColumnTypes.find((e=>e===a))){let i=parseInt(e.substring(n+1,e.length-1));i&&(t.length=i.toString(),t.type=a)}if(this.driver.withPrecisionColumnTypes.find((e=>e===a))){const n=new RegExp(`^${a}\\((\\d+),?\\s?(\\d+)?\\)`),i=e.match(n);i&&i[1]&&(t.precision=+i[1]),this.driver.withScaleColumnTypes.find((e=>e===a))&&i&&i[2]&&(t.scale=+i[2]),t.type=a}}return t})));const d=[],p=/CONSTRAINT "([^"]*)" FOREIGN KEY \((.*?)\) REFERENCES "([^"]*)" /g;for(;null!==(u=p.exec(i));)d.push({name:u[1],columns:u[2].substr(1,u[2].length-2).split('", "'),referencedTableName:u[3]});const m=j.s.uniq(o,(e=>e.id));let y;a.foreignKeys=m.map((e=>{const t=o.filter((t=>t.id===e.id&&t.table===e.table)),n=t.map((e=>e.from)),a=t.map((e=>e.to)),i=d.find((t=>t.referencedTableName===e.table&&t.columns.every((e=>-1!==n.indexOf(e)))));return new TableForeignKey({name:i.name,columnNames:n,referencedTableName:e.table,referencedColumnNames:a,onDelete:e.on_delete,onUpdate:e.on_update})}));const f=[],g=/CONSTRAINT "([^"]*)" UNIQUE \((.*?)\)/g;for(;null!==(y=g.exec(i));)f.push({name:y[1],columns:y[2].substr(1,y[2].length-2).split('", "')});const E=r.filter((e=>"u"===e.origin)).map((e=>e.name)).filter(((e,t,n)=>n.indexOf(e)===t)).map((async e=>{const t=r.find((t=>t.name===e)),n=(await this.query(`PRAGMA index_info("${t.name}")`)).sort(((e,t)=>parseInt(e.seqno)-parseInt(t.seqno))).map((e=>e.name));if(1===n.length){const e=a.columns.find((e=>!!n.find((t=>t===e.name))));e&&(e.isUnique=!0)}const i=f.find((e=>e.columns.every((e=>-1!==n.indexOf(e)))));return new TableUnique({name:i?i.name:this.connection.namingStrategy.uniqueConstraintName(a,n),columnNames:n})}));let T;a.uniques=await Promise.all(E);const b=/CONSTRAINT "([^"]*)" CHECK (\(.*?\))([,]|[)]$)/g;for(;null!==(T=b.exec(i));)a.checks.push(new TableCheck({name:T[1],expression:T[2]}));const N=r.filter((e=>"c"===e.origin)).map((e=>e.name)).filter(((e,t,n)=>n.indexOf(e)===t)).map((async n=>{const i=t.find((e=>e.name===n)),s=/WHERE (.*)/.exec(i.sql),o=r.find((e=>e.name===n)),c=(await this.query(`PRAGMA index_info("${o.name}")`)).sort(((e,t)=>parseInt(e.seqno)-parseInt(t.seqno))).map((e=>e.name)),l=`${e.database?`${e.database}.`:""}${o.name}`,u="1"===o.unique||1===o.unique;return new TableIndex({table:a,name:l,columnNames:c,isUnique:u,where:s?s[1]:void 0})})),w=await Promise.all(N);return a.indices=w.filter((e=>!!e)),a})))}createTableSql(e,t){const n=e.columns.filter((e=>e.isPrimary)),a=n.find((e=>e.isGenerated&&"increment"===e.generationStrategy)),s=n.length>1;if(s&&a)throw new i.K_("Sqlite does not support AUTOINCREMENT on composite primary key");const r=e.columns.map((e=>this.buildCreateColumnSql(e,s))).join(", "),[o]=this.splitTablePath(e.name);let c=`CREATE TABLE ${this.escapePath(e.name)} (${r}`;if(e.columns.filter((e=>e.isUnique)).forEach((t=>{e.uniques.some((e=>1===e.columnNames.length&&e.columnNames[0]===t.name))||e.uniques.push(new TableUnique({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name]}))})),e.uniques.length>0){c+=`, ${e.uniques.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.uniqueConstraintName(e,t.columnNames)}" UNIQUE (${t.columnNames.map((e=>`"${e}"`)).join(", ")})`)).join(", ")}`}if(e.checks.length>0){c+=`, ${e.checks.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.checkConstraintName(e,t.expression)}" CHECK (${t.expression})`)).join(", ")}`}if(e.foreignKeys.length>0&&t){c+=`, ${e.foreignKeys.filter((e=>{const[t]=this.splitTablePath(e.referencedTableName);return t===o})).map((t=>{const[,n]=this.splitTablePath(t.referencedTableName),a=t.columnNames.map((e=>`"${e}"`)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const i=t.referencedColumnNames.map((e=>`"${e}"`)).join(", ");let s=`CONSTRAINT "${t.name}" FOREIGN KEY (${a}) REFERENCES "${n}" (${i})`;return t.onDelete&&(s+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(s+=` ON UPDATE ${t.onUpdate}`),s})).join(", ")}`}if(n.length>1){c+=`, PRIMARY KEY (${n.map((e=>`"${e.name}"`)).join(", ")})`}c+=")";const l=this.connection.entityMetadatas.find((t=>this.getTablePath(e)===this.getTablePath(t)));return l&&l.withoutRowid&&(c+=" WITHOUT ROWID"),new Query(c)}dropTableSql(e,t){const n=s.a.isTable(e)?e.name:e,a=t?`DROP TABLE IF EXISTS ${this.escapePath(n)}`:`DROP TABLE ${this.escapePath(n)}`;return new Query(a)}createViewSql(e){return"string"==typeof e.expression?new Query(`CREATE VIEW "${e.name}" AS ${e.expression}`):new Query(`CREATE VIEW "${e.name}" AS ${e.expression(this.connection).getQuery()}`)}insertViewDefinitionSql(e){const t="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:z.VIEW,name:e.name,value:t})}dropViewSql(e){const t=s.a.isView(e)?e.name:e;return new Query(`DROP VIEW "${t}"`)}deleteViewDefinitionSql(e){const t=s.a.isView(e)?e.name:e;return this.deleteTypeormMetadataSql({type:z.VIEW,name:t})}createIndexSql(e,t){const n=t.columnNames.map((e=>`"${e}"`)).join(", "),[a,i]=this.splitTablePath(e.name);return new Query(`CREATE ${t.isUnique?"UNIQUE ":""}INDEX ${a?`"${a}".`:""}${this.escapePath(t.name)} ON "${i}" (${n}) ${t.where?"WHERE "+t.where:""}`)}dropIndexSql(e){let t=s.a.isTableIndex(e)?e.name:e;return new Query(`DROP INDEX ${this.escapePath(t)}`)}buildCreateColumnSql(e,t){let n='"'+e.name+'"';return s.a.isColumnMetadata(e)?n+=" "+this.driver.normalizeType(e):n+=" "+this.connection.driver.createFullType(e),e.enum&&(n+=' CHECK( "'+e.name+'" IN ('+e.enum.map((e=>"'"+e+"'")).join(",")+") )"),e.isPrimary&&!t&&(n+=" PRIMARY KEY"),!0===e.isGenerated&&"increment"===e.generationStrategy&&(n+=" AUTOINCREMENT"),e.collation&&(n+=" COLLATE "+e.collation),!0!==e.isNullable&&(n+=" NOT NULL"),e.asExpression?n+=` AS (${e.asExpression}) ${e.generatedType?e.generatedType:"VIRTUAL"}`:void 0!==e.default&&null!==e.default&&(n+=" DEFAULT ("+e.default+")"),n}async recreateTable(e,t,n=!0){const a=[],i=[];t.indices.forEach((e=>{a.push(this.dropIndexSql(e)),i.push(this.createIndexSql(t,e))}));let[s,r]=this.splitTablePath(e.name),[,o]=this.splitTablePath(t.name);if(e.name=r=`${s?`${s}.`:""}temporary_${r}`,a.push(this.createTableSql(e,!0)),i.push(this.dropTableSql(e)),n){let n=e.columns.filter((e=>!e.generatedType)).map((e=>`"${e.name}"`)),s=t.columns.filter((e=>!e.generatedType)).map((e=>`"${e.name}"`));s.length<n.length?n=e.columns.filter((e=>{const n=t.columns.find((t=>t.name===e.name));return(!n||!n.generatedType)&&(!e.generatedType&&n)})).map((e=>`"${e.name}"`)):s.length>n.length&&(s=t.columns.filter((t=>!t.generatedType&&e.columns.find((e=>e.name===t.name)))).map((e=>`"${e.name}"`))),a.push(new Query(`INSERT INTO ${this.escapePath(e.name)}(${n.join(", ")}) SELECT ${s.join(", ")} FROM ${this.escapePath(t.name)}`)),i.push(new Query(`INSERT INTO ${this.escapePath(t.name)}(${s.join(", ")}) SELECT ${n.join(", ")} FROM ${this.escapePath(e.name)}`))}a.push(this.dropTableSql(t)),i.push(this.createTableSql(t,!0)),a.push(new Query(`ALTER TABLE ${this.escapePath(e.name)} RENAME TO ${this.escapePath(o)}`)),i.push(new Query(`ALTER TABLE ${this.escapePath(t.name)} RENAME TO ${this.escapePath(r)}`)),e.name=t.name,e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),a.push(this.createIndexSql(e,t)),i.push(this.dropIndexSql(t))})),t.columns.filter((t=>{const n=e.columns.find((e=>e.name===t.name));return t.generatedType&&t.asExpression&&(!n||!n.generatedType&&!n.asExpression)})).forEach((e=>{const n=this.deleteTypeormMetadataSql({table:t.name,type:z.GENERATED_COLUMN,name:e.name}),s=this.insertTypeormMetadataSql({table:t.name,type:z.GENERATED_COLUMN,name:e.name,value:e.asExpression});a.push(n),i.push(s)})),e.columns.filter((e=>e.generatedType&&e.asExpression&&!t.columns.some((t=>t.name===e.name)))).forEach((t=>{const n=this.insertTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),s=this.deleteTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name});a.push(n),i.push(s)})),e.columns.filter((e=>e.generatedType&&e.asExpression)).forEach((n=>{const s=t.columns.find((e=>e.name===n.name&&e.generatedType&&n.generatedType&&e.asExpression!==n.asExpression));if(!s)return;const r=this.deleteTypeormMetadataSql({table:t.name,type:z.GENERATED_COLUMN,name:s.name}),o=this.insertTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:n.name,value:n.asExpression});a.push(r),a.push(o);const c=this.insertTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:s.name,value:s.asExpression}),l=this.deleteTypeormMetadataSql({table:t.name,type:z.GENERATED_COLUMN,name:n.name});i.push(c),i.push(l)})),await this.executeQueries(a,i),this.replaceCachedTable(t,e)}splitTablePath(e){return-1!==e.indexOf(".")?e.split("."):[void 0,e]}escapePath(e,t){return(s.a.isTable(e)||s.a.isView(e)?e.name:e).replace(/^\.+|\.+$/g,"").split(".").map((e=>t?e:`"${e}"`)).join(".")}}class Broadcaster{constructor(e){this.queryRunner=e}async broadcast(e,...t){const n=new Q.D,a=this[`broadcast${e}Event`];"function"==typeof a&&a.call(this,n,...t),await n.wait()}broadcastBeforeInsertEvent(e,t,n){n&&t.beforeInsertListeners.length&&t.beforeInsertListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((a=>{if(this.isAllowedSubscriber(a,t.target)&&a.beforeInsert){const i=a.beforeInsert({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t});i instanceof Promise&&e.promises.push(i),e.count++}}))}broadcastBeforeUpdateEvent(e,t,n,a,i,s){n&&t.beforeUpdateListeners.length&&t.beforeUpdateListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.beforeUpdate){const o=r.beforeUpdate({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,updatedColumns:i||[],updatedRelations:s||[]});o instanceof Promise&&e.promises.push(o),e.count++}}))}broadcastBeforeRemoveEvent(e,t,n,a){n&&t.beforeRemoveListeners.length&&t.beforeRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.beforeRemove){const s=i.beforeRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastBeforeSoftRemoveEvent(e,t,n,a){n&&t.beforeSoftRemoveListeners.length&&t.beforeSoftRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.beforeSoftRemove){const s=i.beforeSoftRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastBeforeRecoverEvent(e,t,n,a){n&&t.beforeRecoverListeners.length&&t.beforeRecoverListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.beforeRecover){const s=i.beforeRecover({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterInsertEvent(e,t,n){n&&t.afterInsertListeners.length&&t.afterInsertListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((a=>{if(this.isAllowedSubscriber(a,t.target)&&a.afterInsert){const i=a.afterInsert({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t});i instanceof Promise&&e.promises.push(i),e.count++}}))}broadcastBeforeTransactionStartEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionStart){const n=t.beforeTransactionStart({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionStartEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionStart){const n=t.afterTransactionStart({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastBeforeTransactionCommitEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionCommit){const n=t.beforeTransactionCommit({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionCommitEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionCommit){const n=t.afterTransactionCommit({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastBeforeTransactionRollbackEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionRollback){const n=t.beforeTransactionRollback({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionRollbackEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionRollback){const n=t.afterTransactionRollback({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterUpdateEvent(e,t,n,a,i,s){n&&t.afterUpdateListeners.length&&t.afterUpdateListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.afterUpdate){const o=r.afterUpdate({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,updatedColumns:i||[],updatedRelations:s||[]});o instanceof Promise&&e.promises.push(o),e.count++}}))}broadcastAfterRemoveEvent(e,t,n,a){n&&t.afterRemoveListeners.length&&t.afterRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.afterRemove){const s=i.afterRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterSoftRemoveEvent(e,t,n,a){n&&t.afterSoftRemoveListeners.length&&t.afterSoftRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.afterSoftRemove){const s=i.afterSoftRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterRecoverEvent(e,t,n,a){n&&t.afterRecoverListeners.length&&t.afterRecoverListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.afterRecover){const s=i.afterRecover({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastLoadEventsForAll(e,t,n){return this.broadcastLoadEvent(e,t,n)}broadcastLoadEvent(e,t,n){const a=this.queryRunner.connection.subscribers.filter((e=>this.isAllowedSubscriber(e,t.target)&&e.afterLoad));if(t.relations.length||t.afterLoadListeners.length||a.length){const i=n.filter((e=>!(e instanceof Promise)));t.relations.length&&t.relations.forEach((t=>{i.forEach((n=>{if(t.isLazy&&!n.hasOwnProperty(t.propertyName))return;const a=t.getEntityValue(n);E.g.isObject(a)&&this.broadcastLoadEvent(e,t.inverseEntityMetadata,Array.isArray(a)?a:[a])}))})),t.afterLoadListeners.length&&t.afterLoadListeners.forEach((t=>{i.forEach((n=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}}))})),a.forEach((n=>{i.forEach((a=>{const i=n.afterLoad(a,{entity:a,metadata:t,connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});i instanceof Promise&&e.promises.push(i),e.count++}))}))}}isAllowedSubscriber(e,t){return!e.listenTo||!e.listenTo()||e.listenTo()===Object||e.listenTo()===t||e.listenTo().isPrototypeOf(t)}}class QueryResult{constructor(){this.records=[]}}class CordovaQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const i=+new Date;try{const s=await new Promise((async(n,i)=>{a.executeSql(e,t,(e=>n(e)),(e=>i(e)))})),r=this.driver.options.maxQueryExecutionTime,o=+new Date-i;r&&o>r&&this.driver.connection.logger.logQuerySlow(o,e,t,this);const c=new QueryResult;if("INSERT INTO"===e.substr(0,11))c.raw=s.insertId;else{let e=[];for(let t=0;t<s.rows.length;t++)e.push(s.rows.item(t));c.records=e,c.raw=e}return n?c:c.raw}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}async startTransaction(){throw new i.K_("Transactions are not supported by the Cordova driver")}async commitTransaction(){throw new i.K_("Transactions are not supported by the Cordova driver")}async rollbackTransaction(){throw new i.K_("Transactions are not supported by the Cordova driver")}async clearDatabase(){await this.query("PRAGMA foreign_keys = OFF");try{const e="SELECT 'DROP VIEW \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'view'",t=await this.query(e),n="SELECT 'DROP TABLE \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'table' AND \"name\" != 'sqlite_sequence'",a=await this.query(n);await Promise.all(t.map((e=>this.query(e.query)))),await Promise.all(a.map((e=>this.query(e.query))))}finally{await this.query("PRAGMA foreign_keys = ON")}}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}var X=n(4547),Z=n(6908);class CordovaDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.database=this.options.database,!this.options.database)throw new X.f("database");if(!this.options.location)throw new X.f("location");this.loadDependencies()}async disconnect(){return this.queryRunner=void 0,new Promise(((e,t)=>{this.databaseConnection.close(e,t)}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new CordovaQueryRunner(this)),this.queryRunner}async createDatabaseConnection(){const e=Object.assign({},{name:this.options.database,location:this.options.location},this.options.extra||{}),t=await new Promise((t=>{this.sqlite.openDatabase(e,(e=>t(e)))}));return await new Promise(((e,n)=>{t.executeSql("PRAGMA foreign_keys = ON",[],(()=>e()),(e=>n(e)))})),t}loadDependencies(){try{const e=this.options.driver||window.sqlitePlugin;this.sqlite=e}catch(e){throw new Z.z("Cordova-SQLite","cordova-sqlite-storage")}}}class ReactNativeQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}query(e,t,n=!1){if(this.isReleased)throw new H.Y;return new Promise((async(a,i)=>{const s=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const r=+new Date;s.executeSql(e,t,(i=>{const s=this.driver.options.maxQueryExecutionTime,o=+new Date-r;s&&o>s&&this.driver.connection.logger.logQuerySlow(o,e,t,this);const c=new QueryResult;if("INSERT INTO"===e.substr(0,11)&&(c.raw=i.insertId),(null==i?void 0:i.hasOwnProperty("rowsAffected"))&&(c.affected=i.rowsAffected),null==i?void 0:i.hasOwnProperty("rows")){let e=[];for(let t=0;t<i.rows.length;t++)e.push(i.rows.item(t));c.raw=e,c.records=e}a(n?c:c.raw)}),(n=>{this.driver.connection.logger.logQueryError(n,e,t,this),i(new J.O(e,t,n))}))}))}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}class ReactNativeDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.database=this.options.database,!this.options.database)throw new X.f("database");if(!this.options.location)throw new X.f("location");this.loadDependencies()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close(e,t)}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new ReactNativeQueryRunner(this)),this.queryRunner}createDatabaseConnection(){return new Promise(((e,t)=>{const n=Object.assign({},{name:this.options.database,location:this.options.location},this.options.extra||{});this.sqlite.openDatabase(n,(n=>{const a=n;a.executeSql("PRAGMA foreign_keys = ON",[],(t=>{e(a)}),(e=>{t(e)}))}),(e=>{t(e)}))}))}loadDependencies(){try{const e=this.options.driver||n(2094);this.sqlite=e}catch(e){throw new Z.z("React-Native","react-native-sqlite-storage")}}}class NativescriptQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=this.driver.connection;return new Promise((async(i,s)=>{const r=await this.connect(),o="INSERT INTO"===e.substr(0,11);a.logger.logQuery(e,t,this);const c=(r,c)=>{const u=this.driver.options.maxQueryExecutionTime,h=+new Date-l;u&&h>u&&a.logger.logQuerySlow(h,e,t,this),r&&(a.logger.logQueryError(r,e,t,this),s(new J.O(e,t,r)));const d=new QueryResult;d.raw=c,!o&&Array.isArray(c)&&(d.records=c),i(n?d:d.raw)},l=+new Date;o?r.execSQL(e,t,c):r.all(e,t,c)}))}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}class NativescriptDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.connection=e,this.options=e.options,this.database=this.options.database,this.driver=this.options.driver,!this.options.database)throw new X.f("database");this.loadDependencies()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close().then(e).catch(t)}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new NativescriptQueryRunner(this)),this.queryRunner}normalizeType(e){return e.type===Buffer?"blob":super.normalizeType(e)}createDatabaseConnection(){return new Promise(((e,t)=>{const n=Object.assign({},{readOnly:this.options.readOnly,key:this.options.key,multithreading:this.options.multithreading,migrate:this.options.migrate,iosFlags:this.options.iosFlags,androidFlags:this.options.androidFlags},this.options.extra||{});new this.sqlite(this.options.database,n,((n,a)=>{if(n)return t(n);a.resultType(this.sqlite.RESULTSASOBJECT),a.execSQL("PRAGMA foreign_keys = ON",[],((n,i)=>{if(n)return t(n);e(a)}))}))}))}loadDependencies(){if(this.sqlite=this.driver,!this.driver)throw new Z.z("Nativescript","nativescript-sqlite")}}class SqljsQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.isDirty=!1,this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async flush(){this.isDirty&&(await this.driver.autoSave(),this.isDirty=!1)}async release(){return await this.flush(),super.release()}async commitTransaction(){await super.commitTransaction(),await this.flush()}async query(e,t=[],n=!1){if(this.isReleased)throw new H.Y;const a=e.trim().split(" ",1)[0],i=this.driver.databaseConnection;this.driver.connection.logger.logQuery(e,t,this);const s=+new Date;let r;try{r=i.prepare(e),t&&(t=t.map((e=>void 0!==e?e:null)),r.bind(t));const o=this.driver.options.maxQueryExecutionTime,c=+new Date-s;o&&c>o&&this.driver.connection.logger.logQuerySlow(c,e,t,this);const l=[];for(;r.step();)l.push(r.getAsObject());const u=new QueryResult;return u.affected=i.getRowsModified(),u.records=l,u.raw=l,r.free(),"SELECT"!==a&&(this.isDirty=!0),n?u:u.raw}catch(n){throw r&&r.free(),this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}}class SqljsDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.options.autoSave&&!this.options.location&&!this.options.autoSaveCallback)throw new X.f("location or autoSaveCallback");this.loadDependencies()}async connect(){this.databaseConnection=await this.createDatabaseConnection()}async disconnect(){this.queryRunner=void 0,this.databaseConnection.close()}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new SqljsQueryRunner(this)),this.queryRunner}async load(e,t=!0){if("string"==typeof e){if("node"===PlatformTools.type){if(PlatformTools.fileExist(e)){const t=PlatformTools.readFileSync(e);return this.createDatabaseConnectionWithImport(t)}if(t)throw new i.K_(`File ${e} does not exist`);return this.createDatabaseConnectionWithImport()}{let n=null;if(this.options.useLocalForage){if(!window.localforage)throw new i.K_("localforage is not defined - please import localforage.js into your site");n=await window.localforage.getItem(e)}else n=PlatformTools.getGlobalVariable().localStorage.getItem(e);if(null!=n)return this.createDatabaseConnectionWithImport(JSON.parse(n));if(t)throw new i.K_(`File ${e} does not exist`);return this.createDatabaseConnectionWithImport()}}return this.createDatabaseConnectionWithImport(e)}async save(e){if(!e&&!this.options.location)throw new i.K_("No location is set, specify a location parameter or add the location option to your configuration");let t="";if(e?t=e:this.options.location&&(t=this.options.location),"node"===PlatformTools.type)try{const e=Buffer.from(this.databaseConnection.export());await PlatformTools.writeFile(t,e)}catch(e){throw new i.K_(`Could not save database, error: ${e}`)}else{const e=this.databaseConnection.export(),n=[].slice.call(e);if(this.options.useLocalForage){if(!window.localforage)throw new i.K_("localforage is not defined - please import localforage.js into your site");await window.localforage.setItem(t,JSON.stringify(n))}else PlatformTools.getGlobalVariable().localStorage.setItem(t,JSON.stringify(n))}}async autoSave(){this.options.autoSave&&(this.options.autoSaveCallback?await this.options.autoSaveCallback(this.export()):await this.save())}export(){return this.databaseConnection.export()}createGeneratedMap(e,t){const n=e.generatedColumns.reduce(((e,t)=>{if(t.isPrimary&&"increment"===t.generationStrategy){const n="SELECT last_insert_rowid()";try{let a=this.databaseConnection.exec(n);return this.connection.logger.logQuery(n),j.s.mergeDeep(e,t.createValueMap(a[0].values[0][0]))}catch(e){this.connection.logger.logQueryError(e,n,[])}}return e}),{});return Object.keys(n).length>0?n:void 0}createDatabaseConnection(){return this.options.location?this.load(this.options.location,!1):this.createDatabaseConnectionWithImport(this.options.database)}async createDatabaseConnectionWithImport(e){const t="function"==typeof this.sqlite.Database?this.sqlite:await this.sqlite(this.options.sqlJsConfig);return e&&e.length>0?this.databaseConnection=new t.Database(e):this.databaseConnection=new t.Database,this.databaseConnection.exec("PRAGMA foreign_keys = ON"),this.databaseConnection}loadDependencies(){if("browser"===PlatformTools.type){const e=this.options.driver||window.SQL;this.sqlite=e}else try{const e=this.options.driver||PlatformTools.load("sql.js");this.sqlite=e}catch(e){throw new Z.z("sql.js","sql.js")}}}class ExpoQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async startTransaction(){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive&&void 0===this.transaction)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transaction=void 0,this.isTransactionActive=!1,this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive&&void 0===this.transaction)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transaction=void 0,this.isTransactionActive=!1,this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}async beforeMigration(){const e=await this.connect();return new Promise(((t,n)=>{e.exec([{sql:"PRAGMA foreign_keys = OFF",args:[]}],!1,(e=>e?n(e):t()))}))}async afterMigration(){const e=await this.connect();return new Promise(((t,n)=>{e.exec([{sql:"PRAGMA foreign_keys = ON",args:[]}],!1,(e=>e?n(e):t()))}))}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;return new Promise((async(a,i)=>{const s=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const r=+new Date;s.transaction((async s=>{void 0===this.transaction&&(await this.startTransaction(),this.transaction=s),this.transaction.executeSql(e,t,((i,s)=>{const o=this.driver.options.maxQueryExecutionTime,c=+new Date-r;o&&c>o&&this.driver.connection.logger.logQuerySlow(c,e,t,this);const l=new QueryResult;if((null==s?void 0:s.hasOwnProperty("rowsAffected"))&&(l.affected=s.rowsAffected),null==s?void 0:s.hasOwnProperty("rows")){let e=[];for(let t=0;t<s.rows.length;t++)e.push(s.rows.item(t));l.raw=e,l.records=e}e.startsWith("INSERT INTO")&&(l.raw=s.insertId),a(n?l:l.raw)}),((n,a)=>{this.driver.connection.logger.logQueryError(a,e,t,this),i(new J.O(e,t,a))}))}),(async e=>{await this.rollbackTransaction(),i(e)}),(()=>{this.isTransactionActive=!1,this.transaction=void 0}))}))}}class ExpoDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.database=this.options.database,!this.options.database)throw new X.f("database");if(!this.options.driver)throw new X.f("driver");this.sqlite=this.options.driver}async disconnect(){return new Promise(((e,t)=>{try{this.queryRunner=void 0,this.databaseConnection._db.close(),this.databaseConnection=void 0,e()}catch(e){t(e)}}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new ExpoQueryRunner(this)),this.queryRunner}createDatabaseConnection(){return new Promise(((e,t)=>{try{const n=this.sqlite.openDatabase(this.options.database);n.transaction((a=>{a.executeSql("PRAGMA foreign_keys = ON",[],((t,a)=>{e(n)}),((e,n)=>{t({transaction:e,error:n})}))}),(e=>{t(e)}))}catch(e){t(e)}}))}}class AuroraMysqlQueryRunner extends BaseQueryRunner{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.client=t,this.broadcaster=new Broadcaster(this)}async connect(){return{}}release(){return this.isReleased=!0,this.databaseConnection&&this.databaseConnection.release(),Promise.resolve()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?await this.client.startTransaction():await this.query(`SAVEPOINT typeorm_${this.transactionDepth}`),this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?await this.query("RELEASE SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.client.commitTransaction(),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?await this.query("ROLLBACK TO SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.client.rollbackTransaction(),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=await this.client.query(e,t),i=new QueryResult;return i.raw=a,(null==a?void 0:a.hasOwnProperty("records"))&&Array.isArray(a.records)&&(i.records=a.records),(null==a?void 0:a.hasOwnProperty("numberOfRecordsUpdated"))&&(i.affected=a.numberOfRecordsUpdated),n?i:i.raw}stream(e,t,n,a){if(this.isReleased)throw new H.Y;return new Promise((async(i,s)=>{try{const s=(await this.connect()).query(e,t);n&&s.on("end",n),a&&s.on("error",a),i(s)}catch(e){s(e)}}))}async getDatabases(){return Promise.resolve([])}async getSchemas(e){throw new i.K_("MySql driver does not support table schemas")}async hasDatabase(e){return!!(await this.query(`SELECT * FROM \`INFORMATION_SCHEMA\`.\`SCHEMATA\` WHERE \`SCHEMA_NAME\` = '${e}'`)).length}async getCurrentDatabase(){return(await this.query("SELECT DATABASE() AS `db_name`"))[0].db_name}async hasSchema(e){throw new i.K_("MySql driver does not support table schemas")}async getCurrentSchema(){return(await this.query("SELECT SCHEMA() AS `schema_name`"))[0].schema_name}async hasTable(e){const t=this.driver.parseTableName(e),n=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_SCHEMA\` = '${t.database}' AND \`TABLE_NAME\` = '${t.tableName}'`;return!!(await this.query(n)).length}async hasColumn(e,t){const n=this.driver.parseTableName(e),a=s.a.isTableColumn(t)?t.name:t,i=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_SCHEMA\` = '${n.database}' AND \`TABLE_NAME\` = '${n.tableName}' AND \`COLUMN_NAME\` = '${a}'`;return!!(await this.query(i)).length}async createDatabase(e,t){const n=t?`CREATE DATABASE IF NOT EXISTS \`${e}\``:`CREATE DATABASE \`${e}\``,a=`DROP DATABASE \`${e}\``;await this.executeQueries(new Query(n),new Query(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS \`${e}\``:`DROP DATABASE \`${e}\``,a=`CREATE DATABASE \`${e}\``;await this.executeQueries(new Query(n),new Query(a))}async createSchema(e,t){throw new i.K_("Schema create queries are not supported by MySql driver.")}async dropSchema(e,t){throw new i.K_("Schema drop queries are not supported by MySql driver.")}async createTable(e,t=!1,n=!0){if(t){if(await this.hasTable(e))return Promise.resolve()}const a=[],i=[];return a.push(this.createTableSql(e,n)),i.push(this.dropTableSql(e)),e.indices.forEach((t=>i.push(this.dropIndexSql(e,t)))),n&&e.foreignKeys.forEach((t=>i.push(this.dropForeignKeySql(e,t)))),this.executeQueries(a,i)}async dropTable(e,t,n=!0){if(t){if(!await this.hasTable(e))return Promise.resolve()}const a=n,i=this.getTablePath(e),s=await this.getCachedTable(i),r=[],o=[];n&&s.foreignKeys.forEach((e=>r.push(this.dropForeignKeySql(s,e)))),s.indices.forEach((e=>r.push(this.dropIndexSql(s,e)))),r.push(this.dropTableSql(s)),o.push(this.createTableSql(s,a)),await this.executeQueries(r,o)}async createView(e){const t=[],n=[];t.push(this.createViewSql(e)),t.push(await this.insertViewDefinitionSql(e)),n.push(this.dropViewSql(e)),n.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(t,n)}async dropView(e){const t=s.a.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=[],a=[],i=s.a.isTable(e)?e:await this.getCachedTable(e),r=i.clone(),{database:o}=this.driver.parseTableName(i);r.name=o?`${o}.${t}`:t,n.push(new Query(`RENAME TABLE ${this.escapePath(i)} TO ${this.escapePath(r)}`)),a.push(new Query(`RENAME TABLE ${this.escapePath(r)} TO ${this.escapePath(i)}`)),r.indices.forEach((e=>{const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=this.connection.namingStrategy.indexName(r,e.columnNames,e.where);let s="";e.isUnique&&(s+="UNIQUE "),e.isSpatial&&(s+="SPATIAL "),e.isFulltext&&(s+="FULLTEXT "),n.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP INDEX \`${e.name}\`, ADD ${s}INDEX \`${i}\` (${t})`)),a.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP INDEX \`${i}\`, ADD ${s}INDEX \`${e.name}\` (${t})`)),e.name=i})),r.foreignKeys.forEach((e=>{const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=e.referencedColumnNames.map((e=>`\`${e}\``)).join(","),s=this.connection.namingStrategy.foreignKeyName(r,e.columnNames);let o=`ALTER TABLE ${this.escapePath(r)} DROP FOREIGN KEY \`${e.name}\`, ADD CONSTRAINT \`${s}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(o+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(o+=` ON UPDATE ${e.onUpdate}`);let c=`ALTER TABLE ${this.escapePath(r)} DROP FOREIGN KEY \`${s}\`, ADD CONSTRAINT \`${e.name}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(c+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(c+=` ON UPDATE ${e.onUpdate}`),n.push(new Query(o)),a.push(new Query(c)),e.name=s})),await this.executeQueries(n,a),i.name=r.name,this.replaceCachedTable(i,r)}async addColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=[],r=[],o=a.primaryColumns.length>0;if(i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(t,o,!1)}`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN \`${t.name}\``)),t.isPrimary&&o){const e=a.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const a=e.clone();a.isGenerated=!1,a.generationStrategy=void 0,i.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(a,!0)}`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${a.name}\` ${this.buildCreateColumnSql(t,!0)}`))}const s=a.primaryColumns;let o=s.map((e=>`\`${e.name}\``)).join(", ");if(i.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${o})`)),s.push(t),o=s.map((e=>`\`${e.name}\``)).join(", "),i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${o})`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),e){const a=e.clone();a.isGenerated=!1,a.generationStrategy=void 0,i.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${a.name}\` ${this.buildCreateColumnSql(t,!0)}`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(a,!0)}`))}}const c=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(c)i.push(this.createIndexSql(n,c)),r.push(this.dropIndexSql(n,c));else if(t.isUnique){const e=new TableIndex({name:this.connection.namingStrategy.indexName(n,[t.name]),columnNames:[t.name],isUnique:!0});a.indices.push(e),a.uniques.push(new TableUnique({name:e.name,columnNames:e.columnNames})),i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD UNIQUE INDEX \`${e.name}\` (\`${t.name}\`)`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP INDEX \`${e.name}\``))}await this.executeQueries(i,r),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e),r=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!r)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);let o;s.a.isTableColumn(n)?o=n:(o=r.clone(),o.name=n),await this.changeColumn(a,r,o)}async changeColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e);let r=a.clone();const o=[],c=[],l=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!l)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);if(n.isGenerated!==l.isGenerated&&"uuid"!==n.generationStrategy||l.type!==n.type||l.length!==n.length||l.generatedType!==n.generatedType)await this.dropColumn(a,l),await this.addColumn(a,n),r=a.clone();else{if(n.name!==l.name){o.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${l.name}\` \`${n.name}\` ${this.buildCreateColumnSql(l,!0,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${n.name}\` \`${l.name}\` ${this.buildCreateColumnSql(l,!0,!0)}`)),r.findColumnIndices(l).forEach((e=>{e.columnNames.splice(e.columnNames.indexOf(l.name),1),e.columnNames.push(n.name);const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=this.connection.namingStrategy.indexName(r,e.columnNames,e.where);let s="";e.isUnique&&(s+="UNIQUE "),e.isSpatial&&(s+="SPATIAL "),e.isFulltext&&(s+="FULLTEXT "),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\`, ADD ${s}INDEX \`${i}\` (${t})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${i}\`, ADD ${s}INDEX \`${e.name}\` (${t})`)),e.name=i})),r.findColumnForeignKeys(l).forEach((e=>{e.columnNames.splice(e.columnNames.indexOf(l.name),1),e.columnNames.push(n.name);const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=e.referencedColumnNames.map((e=>`\`${e}\``)).join(","),s=this.connection.namingStrategy.foreignKeyName(r,e.columnNames);let u=`ALTER TABLE ${this.escapePath(a)} DROP FOREIGN KEY \`${e.name}\`, ADD CONSTRAINT \`${s}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(u+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(u+=` ON UPDATE ${e.onUpdate}`);let h=`ALTER TABLE ${this.escapePath(a)} DROP FOREIGN KEY \`${s}\`, ADD CONSTRAINT \`${e.name}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(h+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(h+=` ON UPDATE ${e.onUpdate}`),o.push(new Query(u)),c.push(new Query(h)),e.name=s}));const e=r.columns.find((e=>e.name===l.name));r.columns[r.columns.indexOf(e)].name=n.name,l.name=n.name}if(this.isColumnChanged(l,n,!0)&&(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${l.name}\` ${this.buildCreateColumnSql(n,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${n.name}\` ${this.buildCreateColumnSql(l,!0)}`))),n.isPrimary!==l.isPrimary){const e=r.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,o.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`))}const t=r.primaryColumns;if(t.length>0){const e=t.map((e=>`\`${e.name}\``)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`))}if(!0===n.isPrimary){t.push(n);r.columns.find((e=>e.name===n.name)).isPrimary=!0;const e=t.map((e=>`\`${e.name}\``)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`))}else{const e=t.find((e=>e.name===n.name));t.splice(t.indexOf(e),1);if(r.columns.find((e=>e.name===n.name)).isPrimary=!1,t.length>0){const e=t.map((e=>`\`${e.name}\``)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`))}}if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,o.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`))}}if(n.isUnique!==l.isUnique)if(!0===n.isUnique){const e=new TableIndex({name:this.connection.namingStrategy.indexName(a,[n.name]),columnNames:[n.name],isUnique:!0});r.indices.push(e),r.uniques.push(new TableUnique({name:e.name,columnNames:e.columnNames})),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD UNIQUE INDEX \`${e.name}\` (\`${n.name}\`)`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\``))}else{const e=r.indices.find((e=>1===e.columnNames.length&&!0===e.isUnique&&!!e.columnNames.find((e=>e===n.name))));r.indices.splice(r.indices.indexOf(e),1);const t=r.uniques.find((t=>t.name===e.name));r.uniques.splice(r.uniques.indexOf(t),1),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\``)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD UNIQUE INDEX \`${e.name}\` (\`${n.name}\`)`))}}await this.executeQueries(o,c),this.replaceCachedTable(a,r)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new i.K_(`Column "${t}" was not found in table "${n.name}"`);const r=n.clone(),o=[],c=[];if(a.isPrimary){const e=r.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,o.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`))}const t=r.primaryColumns.map((e=>`\`${e.name}\``)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP PRIMARY KEY`)),c.push(new Query(`ALTER TABLE ${this.escapePath(r)} ADD PRIMARY KEY (${t})`));if(r.findColumnByName(a.name).isPrimary=!1,r.primaryColumns.length>0){const e=r.primaryColumns.map((e=>`\`${e.name}\``)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(r)} ADD PRIMARY KEY (${e})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP PRIMARY KEY`))}if(e&&e.name!==a.name){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,o.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`))}}const l=r.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));if(l)r.indices.splice(r.indices.indexOf(l),1),o.push(this.dropIndexSql(n,l)),c.push(this.createIndexSql(n,l));else if(a.isUnique){const e=this.connection.namingStrategy.uniqueConstraintName(n,[a.name]),t=r.uniques.find((t=>t.name===e));t&&r.uniques.splice(r.uniques.indexOf(t),1);const i=this.connection.namingStrategy.indexName(n,[a.name]),s=r.indices.find((e=>e.name===i));s&&r.indices.splice(r.indices.indexOf(s),1),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP INDEX \`${i}\``)),c.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD UNIQUE INDEX \`${i}\` (\`${a.name}\`)`))}o.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN \`${a.name}\``)),c.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(a,!0)}`)),await this.executeQueries(o,c),r.removeColumn(a),this.replaceCachedTable(n,r)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=this.createPrimaryKeySql(n,t),r=this.dropPrimaryKeySql(n);await this.executeQueries(i,r),a.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)})),this.replaceCachedTable(n,a)}async updatePrimaryKeys(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=t.map((e=>e.name)),r=[],o=[],c=a.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(c){const e=c.clone();e.isGenerated=!1,e.generationStrategy=void 0,r.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${c.name}\` ${this.buildCreateColumnSql(e,!0)}`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(c,!0)}`))}const l=a.primaryColumns;if(l.length>0){const e=l.map((e=>`\`${e.name}\``)).join(", ");r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${e})`))}a.columns.filter((e=>-1!==i.indexOf(e.name))).forEach((e=>e.isPrimary=!0));const u=i.map((e=>`\`${e}\``)).join(", ");r.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${u})`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`));const h=c||t.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(h){const e=h.clone();e.isGenerated=!1,e.generationStrategy=void 0,r.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(h,!0)}`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${h.name}\` ${this.buildCreateColumnSql(e,!0)}`));const t=a.columns.find((e=>e.name===h.name));t.isGenerated=!0,t.generationStrategy="increment"}await this.executeQueries(r,o),this.replaceCachedTable(n,a)}async dropPrimaryKey(e){const t=s.a.isTable(e)?e:await this.getCachedTable(e),n=this.dropPrimaryKeySql(t),a=this.createPrimaryKeySql(t,t.primaryColumns.map((e=>e.name)));await this.executeQueries(n,a),t.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){throw new i.K_("MySql does not support unique constraints. Use unique index instead.")}async createUniqueConstraints(e,t){throw new i.K_("MySql does not support unique constraints. Use unique index instead.")}async dropUniqueConstraint(e,t){throw new i.K_("MySql does not support unique constraints. Use unique index instead.")}async dropUniqueConstraints(e,t){throw new i.K_("MySql does not support unique constraints. Use unique index instead.")}async createCheckConstraint(e,t){throw new i.K_("MySql does not support check constraints.")}async createCheckConstraints(e,t){throw new i.K_("MySql does not support check constraints.")}async dropCheckConstraint(e,t){throw new i.K_("MySql does not support check constraints.")}async dropCheckConstraints(e,t){throw new i.K_("MySql does not support check constraints.")}async createExclusionConstraint(e,t){throw new i.K_("MySql does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new i.K_("MySql does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new i.K_("MySql does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new i.K_("MySql does not support exclusion constraints.")}async createForeignKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){const n=t.map((t=>this.createForeignKey(e,t)));await Promise.all(n)}async dropForeignKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied foreign key was not found in table ${n.name}`);const r=this.dropForeignKeySql(n,a),o=this.createForeignKeySql(n,a);await this.executeQueries(r,o),n.removeForeignKey(a)}async dropForeignKeys(e,t){const n=t.map((t=>this.dropForeignKey(e,t)));await Promise.all(n)}async createIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.indexName(n,t.columnNames,t.where));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t,!0)}async createIndices(e,t){const n=t.map((t=>this.createIndex(e,t)));await Promise.all(n)}async dropIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied index ${t} was not found in table ${n.name}`);const r=this.dropIndexSql(n,a),o=this.createIndexSql(n,a);await this.executeQueries(r,o),n.removeIndex(a,!0)}async dropIndices(e,t){const n=t.map((t=>this.dropIndex(e,t)));await Promise.all(n)}async clearTable(e){await this.query(`TRUNCATE TABLE ${this.escapePath(e)}`)}async clearDatabase(e){const t=e||this.driver.database;if(!t)throw new i.K_("Can not clear database. No database is specified");if(!await this.hasDatabase(t))return Promise.resolve();const n=this.isTransactionActive;n||await this.startTransaction();try{const e=`SELECT concat('DROP VIEW IF EXISTS \`', table_schema, '\`.\`', table_name, '\`') AS \`query\` FROM \`INFORMATION_SCHEMA\`.\`VIEWS\` WHERE \`TABLE_SCHEMA\` = '${t}'`,a=await this.query(e);await Promise.all(a.map((e=>this.query(e.query))));const i="SET FOREIGN_KEY_CHECKS = 0;",s=`SELECT concat('DROP TABLE IF EXISTS \`', table_schema, '\`.\`', table_name, '\`') AS \`query\` FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_SCHEMA\` = '${t}'`,r="SET FOREIGN_KEY_CHECKS = 1;";await this.query(i);const o=await this.query(s);await Promise.all(o.map((e=>this.query(e.query)))),await this.query(r),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=await this.getCurrentDatabase(),n=e.map((e=>{let{database:n,tableName:a}=this.driver.parseTableName(e);return n||(n=t),`(\`t\`.\`schema\` = '${n}' AND \`t\`.\`name\` = '${a}')`})).join(" OR "),a=`SELECT \`t\`.*, \`v\`.\`check_option\` FROM ${this.escapePath(this.getTypeormMetadataTableName())} \`t\` INNER JOIN \`information_schema\`.\`views\` \`v\` ON \`v\`.\`table_schema\` = \`t\`.\`schema\` AND \`v\`.\`table_name\` = \`t\`.\`name\` WHERE \`t\`.\`type\` = '${z.VIEW}' ${n?`AND (${n})`:""}`;return(await this.query(a)).map((e=>{const n=new View,a=e.schema===t?void 0:e.schema;return n.database=e.schema,n.name=this.driver.buildTableName(e.name,void 0,a),n.expression=e.value,n}))}async loadTables(e){if(e&&0===e.length)return[];const t=[],n=await this.getCurrentDatabase();if(e){const a="SELECT TABLE_NAME, TABLE_SCHEMA FROM `INFORMATION_SCHEMA`.`TABLES` WHERE "+e.map((e=>{let[t,a]=e.split(".");return a||(a=t,t=this.driver.database||n),`(\`TABLE_SCHEMA\` = '${t}' AND \`TABLE_NAME\` = '${a}')`})).join(" OR ");t.push(...await this.query(a))}else{const e="SELECT TABLE_NAME, TABLE_SCHEMA FROM `INFORMATION_SCHEMA`.`TABLES`";t.push(...await this.query(e))}if(0===t.length)return[];const a=t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`TABLE_SCHEMA\` = '${t}' AND \`TABLE_NAME\` = '${e}')`)).join(" OR "),i="SELECT * FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE "+a,s=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` WHERE \`CONSTRAINT_NAME\` = 'PRIMARY' AND (${a})`,r=`SELECT \`s\`.* FROM \`INFORMATION_SCHEMA\`.\`STATISTICS\` \`s\` LEFT JOIN \`INFORMATION_SCHEMA\`.\`REFERENTIAL_CONSTRAINTS\` \`rc\` ON \`s\`.\`INDEX_NAME\` = \`rc\`.\`CONSTRAINT_NAME\` WHERE (${t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`s\`.\`TABLE_SCHEMA\` = '${t}' AND \`s\`.\`TABLE_NAME\` = '${e}')`)).join(" OR ")}) AND \`s\`.\`INDEX_NAME\` != 'PRIMARY' AND \`rc\`.\`CONSTRAINT_NAME\` IS NULL`,o="SELECT `kcu`.`TABLE_SCHEMA`, `kcu`.`TABLE_NAME`, `kcu`.`CONSTRAINT_NAME`, `kcu`.`COLUMN_NAME`, `kcu`.`REFERENCED_TABLE_SCHEMA`, `kcu`.`REFERENCED_TABLE_NAME`, `kcu`.`REFERENCED_COLUMN_NAME`, `rc`.`DELETE_RULE` `ON_DELETE`, `rc`.`UPDATE_RULE` `ON_UPDATE` FROM `INFORMATION_SCHEMA`.`KEY_COLUMN_USAGE` `kcu` INNER JOIN `INFORMATION_SCHEMA`.`REFERENTIAL_CONSTRAINTS` `rc` ON `rc`.`constraint_name` = `kcu`.`constraint_name` WHERE "+t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`kcu\`.\`TABLE_SCHEMA\` = '${t}' AND \`kcu\`.\`TABLE_NAME\` = '${e}')`)).join(" OR "),[c,l,u,h,d]=await Promise.all([this.query(i),this.query(s),this.query("SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME` as `CHARSET`, `DEFAULT_COLLATION_NAME` AS `COLLATION` FROM `INFORMATION_SCHEMA`.`SCHEMATA`"),this.query(r),this.query(o)]);return Promise.all(t.map((async e=>{const t=new Table,a=u.find((t=>t.SCHEMA_NAME===e.TABLE_SCHEMA)),i=a.COLLATION,s=a.CHARSET,r=e.TABLE_SCHEMA===n?void 0:e.TABLE_SCHEMA;t.database=e.TABLE_SCHEMA,t.name=this.driver.buildTableName(e.TABLE_NAME,void 0,r),t.columns=c.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)).map((n=>{const a=h.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA&&t.COLUMN_NAME===n.COLUMN_NAME&&0===parseInt(t.NON_UNIQUE,10))),r=this.connection.entityMetadatas.find((e=>this.getTablePath(t)===this.getTablePath(e))),o=a.length>0&&r&&r.indices.some((e=>a.some((t=>e.name===t.INDEX_NAME&&!1===e.synchronize)))),c=a.every((e=>h.some((t=>t.INDEX_NAME===e.INDEX_NAME&&t.COLUMN_NAME!==n.COLUMN_NAME)))),u=new TableColumn;if(u.name=n.COLUMN_NAME,u.type=n.DATA_TYPE.toLowerCase(),-1!==this.driver.withWidthColumnTypes.indexOf(u.type)){const e=n.COLUMN_TYPE.substring(n.COLUMN_TYPE.indexOf("(")+1,n.COLUMN_TYPE.indexOf(")"));u.width=e&&!this.isDefaultColumnWidth(t,u,parseInt(e))?parseInt(e):void 0}if(null===n.COLUMN_DEFAULT||void 0===n.COLUMN_DEFAULT?u.default=void 0:u.default="CURRENT_TIMESTAMP"===n.COLUMN_DEFAULT?n.COLUMN_DEFAULT:`'${n.COLUMN_DEFAULT}'`,-1!==n.EXTRA.indexOf("on update")&&(u.onUpdate=n.EXTRA.substring(n.EXTRA.indexOf("on update")+10)),n.GENERATION_EXPRESSION&&(u.asExpression=n.GENERATION_EXPRESSION,u.generatedType=-1!==n.EXTRA.indexOf("VIRTUAL")?"VIRTUAL":"STORED"),u.isUnique=a.length>0&&!o&&!c,u.isNullable="YES"===n.IS_NULLABLE,u.isPrimary=l.some((e=>e.TABLE_NAME===n.TABLE_NAME&&e.TABLE_SCHEMA===n.TABLE_SCHEMA&&e.COLUMN_NAME===n.COLUMN_NAME)),u.zerofill=-1!==n.COLUMN_TYPE.indexOf("zerofill"),u.unsigned=!!u.zerofill||-1!==n.COLUMN_TYPE.indexOf("unsigned"),u.isGenerated=-1!==n.EXTRA.indexOf("auto_increment"),u.isGenerated&&(u.generationStrategy="increment"),u.comment="string"==typeof n.COLUMN_COMMENT&&0===n.COLUMN_COMMENT.length?void 0:n.COLUMN_COMMENT,n.CHARACTER_SET_NAME&&(u.charset=n.CHARACTER_SET_NAME===s?void 0:n.CHARACTER_SET_NAME),n.COLLATION_NAME&&(u.collation=n.COLLATION_NAME===i?void 0:n.COLLATION_NAME),-1!==this.driver.withLengthColumnTypes.indexOf(u.type)&&n.CHARACTER_MAXIMUM_LENGTH){const e=n.CHARACTER_MAXIMUM_LENGTH.toString();u.length=this.isDefaultColumnLength(t,u,e)?"":e}if("decimal"!==u.type&&"double"!==u.type&&"float"!==u.type||(null===n.NUMERIC_PRECISION||this.isDefaultColumnPrecision(t,u,n.NUMERIC_PRECISION)||(u.precision=parseInt(n.NUMERIC_PRECISION)),null===n.NUMERIC_SCALE||this.isDefaultColumnScale(t,u,n.NUMERIC_SCALE)||(u.scale=parseInt(n.NUMERIC_SCALE))),"enum"===u.type||"simple-enum"===u.type||"set"===u.type){const e=n.COLUMN_TYPE,t=e.substring(e.indexOf("(")+1,e.lastIndexOf(")")).split(",");u.enum=t.map((e=>e.substring(1,e.length-1))),u.length=""}return"datetime"!==u.type&&"time"!==u.type&&"timestamp"!==u.type||null===n.DATETIME_PRECISION||void 0===n.DATETIME_PRECISION||this.isDefaultColumnPrecision(t,u,parseInt(n.DATETIME_PRECISION))||(u.precision=parseInt(n.DATETIME_PRECISION)),u}));const o=j.s.uniq(d.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)),(e=>e.CONSTRAINT_NAME));t.foreignKeys=o.map((e=>{const t=d.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME)),a=e.REFERENCED_TABLE_SCHEMA===n?void 0:e.REFERENCED_TABLE_SCHEMA,i=this.driver.buildTableName(e.REFERENCED_TABLE_NAME,void 0,a);return new TableForeignKey({name:e.CONSTRAINT_NAME,columnNames:t.map((e=>e.COLUMN_NAME)),referencedDatabase:e.REFERENCED_TABLE_SCHEMA,referencedTableName:i,referencedColumnNames:t.map((e=>e.REFERENCED_COLUMN_NAME)),onDelete:e.ON_DELETE,onUpdate:e.ON_UPDATE})}));const p=j.s.uniq(h.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)),(e=>e.INDEX_NAME));return t.indices=p.map((e=>{const n=h.filter((t=>t.TABLE_SCHEMA===e.TABLE_SCHEMA&&t.TABLE_NAME===e.TABLE_NAME&&t.INDEX_NAME===e.INDEX_NAME)),a=parseInt(e.NON_UNIQUE,10);return new TableIndex({table:t,name:e.INDEX_NAME,columnNames:n.map((e=>e.COLUMN_NAME)),isUnique:0===a,isSpatial:"SPATIAL"===e.INDEX_TYPE,isFulltext:"FULLTEXT"===e.INDEX_TYPE})})),t})))}createTableSql(e,t){const n=e.columns.map((e=>this.buildCreateColumnSql(e,!0))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;if(e.columns.filter((e=>e.isUnique)).forEach((t=>{const n=e.indices.some((e=>1===e.columnNames.length&&!!e.isUnique&&-1!==e.columnNames.indexOf(t.name))),a=e.uniques.some((e=>1===e.columnNames.length&&-1!==e.columnNames.indexOf(t.name)));n||a||e.indices.push(new TableIndex({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name],isUnique:!0}))})),e.uniques.length>0&&e.uniques.forEach((t=>{e.indices.some((e=>e.name===t.name))||e.indices.push(new TableIndex({name:t.name,columnNames:t.columnNames,isUnique:!0}))})),e.indices.length>0){a+=`, ${e.indices.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where));let a="";return t.isUnique&&(a+="UNIQUE "),t.isSpatial&&(a+="SPATIAL "),t.isFulltext&&(a+="FULLTEXT "),`${a}INDEX \`${t.name}\` (${n})`})).join(", ")}`}if(e.foreignKeys.length>0&&t){a+=`, ${e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames));const a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(", ");let i=`CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),i})).join(", ")}`}if(e.primaryColumns.length>0){a+=`, PRIMARY KEY (${e.primaryColumns.map((e=>`\`${e.name}\``)).join(", ")})`}return a+=`) ENGINE=${e.engine||"InnoDB"}`,new Query(a)}dropTableSql(e){return new Query(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){return"string"==typeof e.expression?new Query(`CREATE VIEW ${this.escapePath(e)} AS ${e.expression}`):new Query(`CREATE VIEW ${this.escapePath(e)} AS ${e.expression(this.connection).getQuery()}`)}async insertViewDefinitionSql(e){const t=await this.getCurrentDatabase(),n="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:z.VIEW,schema:t,name:e.name,value:n})}dropViewSql(e){return new Query(`DROP VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){const t=await this.getCurrentDatabase(),n=s.a.isView(e)?e.name:e;return this.deleteTypeormMetadataSql({type:z.VIEW,schema:t,name:n})}createIndexSql(e,t){const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");let a="";return t.isUnique&&(a+="UNIQUE "),t.isSpatial&&(a+="SPATIAL "),t.isFulltext&&(a+="FULLTEXT "),new Query(`CREATE ${a}INDEX \`${t.name}\` ON ${this.escapePath(e)} (${n})`)}dropIndexSql(e,t){let n=s.a.isTableIndex(t)?t.name:t;return new Query(`DROP INDEX \`${n}\` ON ${this.escapePath(e)}`)}createPrimaryKeySql(e,t){const n=t.map((e=>`\`${e}\``)).join(", ");return new Query(`ALTER TABLE ${this.escapePath(e)} ADD PRIMARY KEY (${n})`)}dropPrimaryKeySql(e){return new Query(`ALTER TABLE ${this.escapePath(e)} DROP PRIMARY KEY`)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>`\`${e}\``)).join(", "),a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))}(${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),new Query(i)}dropForeignKeySql(e,t){const n=s.a.isTableForeignKey(t)?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP FOREIGN KEY \`${n}\``)}escapeComment(e){return e&&0!==e.length?`'${e=e.replace(/\\/g,"\\\\").replace(/'/g,"''").replace(/\u0000/g,"")}'`:"''"}escapePath(e){const{database:t,tableName:n}=this.driver.parseTableName(e);return t&&t!==this.driver.database?`\`${t}\`.\`${n}\``:`\`${n}\``}buildCreateColumnSql(e,t,n=!1){let a="";return a=n?this.connection.driver.createFullType(e):`\`${e.name}\` ${this.connection.driver.createFullType(e)}`,e.asExpression&&(a+=` AS (${e.asExpression}) ${e.generatedType?e.generatedType:"VIRTUAL"}`),e.zerofill?a+=" ZEROFILL":e.unsigned&&(a+=" UNSIGNED"),e.enum&&(a+=` (${e.enum.map((e=>"'"+e+"'")).join(", ")})`),e.charset&&(a+=` CHARACTER SET "${e.charset}"`),e.collation&&(a+=` COLLATE "${e.collation}"`),e.isNullable||(a+=" NOT NULL"),e.isNullable&&(a+=" NULL"),e.isPrimary&&!t&&(a+=" PRIMARY KEY"),e.isGenerated&&"increment"===e.generationStrategy&&(a+=" AUTO_INCREMENT"),e.comment&&(a+=` COMMENT ${this.escapeComment(e.comment)}`),void 0!==e.default&&null!==e.default&&(a+=` DEFAULT ${e.default}`),e.onUpdate&&(a+=` ON UPDATE ${e.onUpdate}`),a}isDefaultColumnWidth(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&n.width)return!1}const a=this.connection.driver.dataTypeDefaults&&this.connection.driver.dataTypeDefaults[t.type]&&this.connection.driver.dataTypeDefaults[t.type].width;return!!a&&a===n}}class AuroraMysqlDriver_AuroraMysqlDriver{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="nested",this.supportedDataTypes=["bit","int","integer","tinyint","smallint","mediumint","bigint","float","double","double precision","real","decimal","dec","numeric","fixed","bool","boolean","date","datetime","timestamp","time","year","char","nchar","national char","varchar","nvarchar","national varchar","blob","text","tinyblob","tinytext","mediumblob","mediumtext","longblob","longtext","enum","set","binary","varbinary","json","geometry","point","linestring","polygon","multipoint","multilinestring","multipolygon","geometrycollection"],this.supportedUpsertType="on-duplicate-key-update",this.spatialTypes=["geometry","point","linestring","polygon","multipoint","multilinestring","multipolygon","geometrycollection"],this.withLengthColumnTypes=["char","varchar","nvarchar","binary","varbinary"],this.withWidthColumnTypes=["bit","tinyint","smallint","mediumint","int","integer","bigint"],this.withPrecisionColumnTypes=["decimal","dec","numeric","fixed","float","double","double precision","real","time","datetime","timestamp"],this.withScaleColumnTypes=["decimal","dec","numeric","fixed","float","double","double precision","real"],this.unsignedAndZerofillTypes=["int","integer","smallint","tinyint","mediumint","bigint","decimal","dec","numeric","fixed","float","double","double precision","real"],this.mappedDataTypes={createDate:"datetime",createDatePrecision:6,createDateDefault:"CURRENT_TIMESTAMP(6)",updateDate:"datetime",updateDatePrecision:6,updateDateDefault:"CURRENT_TIMESTAMP(6)",deleteDate:"datetime",deleteDatePrecision:6,deleteDateNullable:!0,version:"int",treeLevel:"int",migrationId:"int",migrationName:"varchar",migrationTimestamp:"bigint",cacheId:"int",cacheIdentifier:"varchar",cacheTime:"bigint",cacheDuration:"int",cacheQuery:"text",cacheResult:"text",metadataType:"varchar",metadataDatabase:"varchar",metadataSchema:"varchar",metadataTable:"varchar",metadataName:"varchar",metadataValue:"text"},this.dataTypeDefaults={varchar:{length:255},nvarchar:{length:255},"national varchar":{length:255},char:{length:1},binary:{length:1},varbinary:{length:255},decimal:{precision:10,scale:0},dec:{precision:10,scale:0},numeric:{precision:10,scale:0},fixed:{precision:10,scale:0},float:{precision:12},double:{precision:22},time:{precision:0},datetime:{precision:0},timestamp:{precision:0},bit:{width:1},int:{width:11},integer:{width:11},tinyint:{width:4},smallint:{width:6},mediumint:{width:9},bigint:{width:20}},this.maxAliasLength=63,this.cteCapabilities={enabled:!1},this.connection=e,this.options=e.options,this.loadDependencies(),this.client=new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),this.database=d.z.buildDriverOptions(this.options).database}async connect(){if(!this.database){const e=await this.createQueryRunner("master");this.database=await e.getCurrentDatabase(),await e.release()}}afterConnect(){return Promise.resolve()}async disconnect(){}createSchemaBuilder(){return new RdbmsSchemaBuilder(this.connection)}createQueryRunner(e){return new AuroraMysqlQueryRunner(this,new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions))}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>n[e]));return t&&Object.keys(t).length?[e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let s=t[i];return n?s.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):"function"==typeof s?s():(a.push(s),this.createParameter(i,a.length-1))})),a]:[e,a]}escape(e){return"`"+e+"`"}buildTableName(e,t,n){let a=[e];return n&&a.unshift(n),a.join(".")}parseTableName(e){const t=this.database,n=void 0;if(s.a.isTable(e)||s.a.isView(e)){const a=this.parseTableName(e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(s.a.isTableForeignKey(e)){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(s.a.isEntityMetadata(e))return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return{database:(a.length>1?a[0]:void 0)||t,schema:n,tableName:a.length>1?a[1]:a[0]}}preparePersistentValue(e,t){return t.transformer&&(e=B.A.transformTo(t.transformer,e)),this.options.formatOptions&&!1===this.options.formatOptions.castParameters?null==e?e:t.type===Boolean?!0===e?1:0:"date"===t.type?DateUtils.mixedDateToDateString(e):"time"===t.type?DateUtils.mixedDateToTimeString(e):"json"===t.type?JSON.stringify(e):"timestamp"===t.type||"datetime"===t.type||t.type===Date?DateUtils.mixedDateToDate(e):"simple-array"===t.type||"set"===t.type?DateUtils.simpleArrayToString(e):"simple-json"===t.type?DateUtils.simpleJsonToString(e):"enum"===t.type||"simple-enum"===t.type?""+e:e:this.client.preparePersistentValue(e,t)}prepareHydratedValue(e,t){return null==e?t.transformer?B.A.transformFrom(t.transformer,e):e:this.options.formatOptions&&!1===this.options.formatOptions.castParameters?(t.type===Boolean||"bool"===t.type||"boolean"===t.type?e=!!e:"datetime"===t.type||t.type===Date?e=DateUtils.normalizeHydratedDate(e):"date"===t.type?e=DateUtils.mixedDateToDateString(e):"json"===t.type?e="string"==typeof e?JSON.parse(e):e:"time"===t.type?e=DateUtils.mixedTimeToString(e):"simple-array"===t.type||"set"===t.type?e=DateUtils.stringToSimpleArray(e):"simple-json"===t.type?e=DateUtils.stringToSimpleJson(e):("enum"===t.type||"simple-enum"===t.type)&&t.enum&&!isNaN(e)&&t.enum.indexOf(parseInt(e))>=0&&(e=parseInt(e)),t.transformer&&(e=B.A.transformFrom(t.transformer,e)),e):this.client.prepareHydratedValue(e,t)}normalizeType(e){return e.type===Number||"integer"===e.type?"int":e.type===String?"varchar":e.type===Date?"datetime":e.type===Buffer?"blob":e.type===Boolean?"tinyint":"uuid"===e.type?"varchar":"simple-array"===e.type||"simple-json"===e.type?"text":"simple-enum"===e.type?"enum":"double precision"===e.type||"real"===e.type?"double":"dec"===e.type||"numeric"===e.type||"fixed"===e.type?"decimal":"bool"===e.type||"boolean"===e.type?"tinyint":"nvarchar"===e.type||"national varchar"===e.type?"varchar":"nchar"===e.type||"national char"===e.type?"char":e.type||""}normalizeDefault(e){const t=e.default;if(null!==t){if(("enum"===e.type||"simple-enum"===e.type)&&void 0!==t)return`'${t}'`;if("set"===e.type&&void 0!==t)return`'${DateUtils.simpleArrayToString(t)}'`;if("number"==typeof t)return`${t}`;if("boolean"==typeof t)return t?"1":"0";if("function"==typeof t)return t();if("string"==typeof t)return`'${t}'`;if(void 0!==t)return`${t}`}}normalizeIsUnique(e){return e.entityMetadata.indices.some((t=>t.isUnique&&1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){if(e.length)return e.length.toString();if("uuid"===e.generationStrategy)return"36";switch(e.type){case String:case"varchar":case"nvarchar":case"national varchar":case"varbinary":return"255";default:return""}}createFullType(e){let t=e.type;return this.getColumnLength(e)?t+=`(${this.getColumnLength(e)})`:e.width?t+=`(${e.width})`:null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+=`(${e.precision},${e.scale})`:null!==e.precision&&void 0!==e.precision&&(t+=`(${e.precision})`),e.isArray&&(t+=" array"),t}obtainMasterConnection(){return new Promise(((e,t)=>{this.poolCluster?this.poolCluster.getConnection("MASTER",((n,a)=>{n?t(n):e(this.prepareDbConnection(a))})):this.pool?this.pool.getConnection(((n,a)=>{n?t(n):e(this.prepareDbConnection(a))})):t(new i.K_("Connection is not established with mysql database"))}))}obtainSlaveConnection(){return this.poolCluster?new Promise(((e,t)=>{this.poolCluster.getConnection("SLAVE*",((n,a)=>{n?t(n):e(this.prepareDbConnection(a))}))})):this.obtainMasterConnection()}createGeneratedMap(e,t,n){const a=e.generatedColumns.reduce(((e,a)=>{let i;return"increment"===a.generationStrategy&&t.insertId&&(i=t.insertId+n),j.s.mergeDeep(e,a.createValueMap(i))}),{});return Object.keys(a).length>0?a:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));if(!n)return!1;let a=t.length;return a||"uuid"!==t.generationStrategy||(a=this.getColumnLength(t)),n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==a||n.width!==t.width||n.precision!==t.precision||n.scale!==t.scale||n.zerofill!==t.zerofill||n.unsigned!==t.unsigned||n.asExpression!==t.asExpression||n.generatedType!==t.generatedType||n.comment!==this.escapeComment(t.comment)||!this.compareDefaultValues(this.normalizeDefault(t),n.default)||n.enum&&t.enum&&!j.s.isArraysEqual(n.enum,t.enum.map((e=>e+"")))||n.onUpdate!==t.onUpdate||n.isPrimary!==t.isPrimary||n.isNullable!==t.isNullable||n.isUnique!==this.normalizeIsUnique(t)||"uuid"!==t.generationStrategy&&n.isGenerated!==t.isGenerated}))}isReturningSqlSupported(){return!1}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!0}createParameter(e,t){return"?"}loadDependencies(){const e=this.options.driver||PlatformTools.load("typeorm-aurora-data-api-driver");this.DataApiDriver=e,this.DataApiDriver=this.DataApiDriver.default||this.DataApiDriver}createConnectionOptions(e,t){return t=Object.assign({},t,d.z.buildDriverOptions(t)),Object.assign({},{resourceArn:e.resourceArn,secretArn:e.secretArn,database:e.database,region:e.region,type:e.type},{host:t.host,user:t.username,password:t.password,database:t.database,port:t.port,ssl:e.ssl},e.extra||{})}async createPool(e){return{}}prepareDbConnection(e){const{logger:t}=this.connection;return 0===e.listeners("error").length&&e.on("error",(e=>t.log("warn",`MySQL connection raised an error. ${e}`))),e}compareDefaultValues(e,t){return"string"==typeof e&&"string"==typeof t&&(e=e.replace(/^'+|'+$/g,""),t=t.replace(/^'+|'+$/g,"")),e===t}escapeComment(e){return e?e=e.replace(/\u0000/g,""):e}}function ee(e=""){const t=[0,0,0];return e.split(".").forEach(((e,n)=>t[n]=parseInt(e,10))),t}class PostgresQueryRunner extends BaseQueryRunner{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.mode=t,this.broadcaster=new Broadcaster(this)}connect(){return this.databaseConnection?Promise.resolve(this.databaseConnection):(this.databaseConnectionPromise||("slave"===this.mode&&this.driver.isReplicated?this.databaseConnectionPromise=this.driver.obtainSlaveConnection().then((([e,t])=>{this.driver.connectedQueryRunners.push(this),this.databaseConnection=e;const n=e=>this.releasePostgresConnection(e);return this.releaseCallback=()=>{this.databaseConnection.removeListener("error",n),t()},this.databaseConnection.on("error",n),this.databaseConnection})):this.databaseConnectionPromise=this.driver.obtainMasterConnection().then((([e,t])=>{this.driver.connectedQueryRunners.push(this),this.databaseConnection=e;const n=e=>this.releasePostgresConnection(e);return this.releaseCallback=()=>{this.databaseConnection.removeListener("error",n),t()},this.databaseConnection.on("error",n),this.databaseConnection}))),this.databaseConnectionPromise)}async releasePostgresConnection(e){if(this.isReleased)return;this.isReleased=!0,this.releaseCallback&&(this.releaseCallback(e),this.releaseCallback=void 0);const t=this.driver.connectedQueryRunners.indexOf(this);-1!==t&&this.driver.connectedQueryRunners.splice(t,1)}release(){return this.releasePostgresConnection()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(await this.query("START TRANSACTION"),e&&await this.query("SET TRANSACTION ISOLATION LEVEL "+e)):await this.query(`SAVEPOINT typeorm_${this.transactionDepth}`),this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?await this.query("RELEASE SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.query("COMMIT"),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?await this.query("ROLLBACK TO SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.query("ROLLBACK"),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=await this.connect();this.driver.connection.logger.logQuery(e,t,this);try{const i=+new Date,s=await a.query(e,t),r=this.driver.options.maxQueryExecutionTime,o=+new Date-i;r&&o>r&&this.driver.connection.logger.logQuerySlow(o,e,t,this);const c=new QueryResult;if(s){switch(s.hasOwnProperty("rows")&&(c.records=s.rows),s.hasOwnProperty("rowCount")&&(c.affected=s.rowCount),s.command){case"DELETE":case"UPDATE":c.raw=[s.rows,s.rowCount];break;default:c.raw=s.rows}if(!n)return c.raw}return c}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}async stream(e,t,n,a){const i=this.driver.loadStreamDependency();if(this.isReleased)throw new H.Y;const s=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const r=s.query(new i(e,t));return n&&r.on("end",n),a&&r.on("error",a),r}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){return!!(await this.query(`SELECT * FROM pg_database WHERE datname='${e}';`)).length}async getCurrentDatabase(){return(await this.query("SELECT * FROM current_database()"))[0].current_database}async hasSchema(e){return!!(await this.query(`SELECT * FROM "information_schema"."schemata" WHERE "schema_name" = '${e}'`)).length}async getCurrentSchema(){return(await this.query("SELECT * FROM current_schema()"))[0].current_schema}async hasTable(e){const t=this.driver.parseTableName(e);t.schema||(t.schema=await this.getCurrentSchema());const n=`SELECT * FROM "information_schema"."tables" WHERE "table_schema" = '${t.schema}' AND "table_name" = '${t.tableName}'`;return!!(await this.query(n)).length}async hasColumn(e,t){const n=this.driver.parseTableName(e);n.schema||(n.schema=await this.getCurrentSchema());const a=`SELECT * FROM "information_schema"."columns" WHERE "table_schema" = '${n.schema}' AND "table_name" = '${n.tableName}' AND "column_name" = '${t}'`;return!!(await this.query(a)).length}async createDatabase(e,t){if(t){if(await this.hasDatabase(e))return Promise.resolve()}const n=`CREATE DATABASE "${e}"`,a=`DROP DATABASE "${e}"`;await this.executeQueries(new Query(n),new Query(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS "${e}"`:`DROP DATABASE "${e}"`,a=`CREATE DATABASE "${e}"`;await this.executeQueries(new Query(n),new Query(a))}async createSchema(e,t){const n=-1===e.indexOf(".")?e:e.split(".")[1],a=t?`CREATE SCHEMA IF NOT EXISTS "${n}"`:`CREATE SCHEMA "${n}"`,i=`DROP SCHEMA "${n}" CASCADE`;await this.executeQueries(new Query(a),new Query(i))}async dropSchema(e,t,n){const a=-1===e.indexOf(".")?e:e.split(".")[1],i=t?`DROP SCHEMA IF EXISTS "${a}" ${n?"CASCADE":""}`:`DROP SCHEMA "${a}" ${n?"CASCADE":""}`,s=`CREATE SCHEMA "${a}"`;await this.executeQueries(new Query(i),new Query(s))}async createTable(e,t=!1,n=!0,a=!0){if(t){if(await this.hasTable(e))return Promise.resolve()}const i=[],s=[],r=e.columns.filter((e=>"enum"===e.type||"simple-enum"===e.type)),o=[];for(const t of r){const n=await this.hasEnumType(e,t),a=this.buildEnumName(e,t);n||-1!==o.indexOf(a)||(o.push(a),i.push(this.createEnumTypeSql(e,t,a)),s.push(this.dropEnumTypeSql(e,t,a)))}const c=e.columns.filter((e=>"STORED"===e.generatedType&&e.asExpression));for(const t of c){const n=(await this.getTableNameWithSchema(e.name)).split("."),a=n[1],r=n[0],o=this.insertTypeormMetadataSql({database:this.driver.database,schema:r,table:a,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),c=this.deleteTypeormMetadataSql({database:this.driver.database,schema:r,table:a,type:z.GENERATED_COLUMN,name:t.name});i.push(o),s.push(c)}i.push(this.createTableSql(e,n)),s.push(this.dropTableSql(e)),n&&e.foreignKeys.forEach((t=>s.push(this.dropForeignKeySql(e,t)))),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),s.push(this.dropIndexSql(e,t))})),await this.executeQueries(i,s)}async dropTable(e,t,n=!0,a=!0){if(t){if(!await this.hasTable(e))return Promise.resolve()}const i=n,s=this.getTablePath(e),r=await this.getCachedTable(s),o=[],c=[];a&&r.indices.forEach((e=>{o.push(this.dropIndexSql(r,e)),c.push(this.createIndexSql(r,e))})),n&&r.foreignKeys.forEach((e=>o.push(this.dropForeignKeySql(r,e)))),o.push(this.dropTableSql(r)),c.push(this.createTableSql(r,i));const l=r.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of l){const t=(await this.getTableNameWithSchema(r.name)).split("."),n=t[1],a=t[0],i=this.deleteTypeormMetadataSql({database:this.driver.database,schema:a,table:n,type:z.GENERATED_COLUMN,name:e.name}),s=this.insertTypeormMetadataSql({database:this.driver.database,schema:a,table:n,type:z.GENERATED_COLUMN,name:e.name,value:e.asExpression});o.push(i),c.push(s)}await this.executeQueries(o,c)}async createView(e){const t=[],n=[];t.push(this.createViewSql(e)),t.push(await this.insertViewDefinitionSql(e)),n.push(this.dropViewSql(e)),n.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(t,n)}async dropView(e){const t=s.a.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=[],a=[],i=s.a.isTable(e)?e:await this.getCachedTable(e),r=i.clone(),{schema:o,tableName:c}=this.driver.parseTableName(i);if(r.name=o?`${o}.${t}`:t,n.push(new Query(`ALTER TABLE ${this.escapePath(i)} RENAME TO "${t}"`)),a.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME TO "${c}"`)),r.primaryColumns.length>0&&!r.primaryColumns[0].primaryKeyConstraintName){const e=r.primaryColumns.map((e=>e.name)),t=this.connection.namingStrategy.primaryKeyName(i,e),s=this.connection.namingStrategy.primaryKeyName(r,e);n.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${t}" TO "${s}"`)),a.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${t}"`))}r.columns.map((e=>{if(e.isGenerated&&"increment"===e.generationStrategy){const t=this.buildSequencePath(i,e.name),s=this.buildSequenceName(i,e.name),o=this.buildSequencePath(r,e.name),c=this.buildSequenceName(r,e.name),l=`ALTER SEQUENCE ${this.escapePath(t)} RENAME TO "${c}"`,u=`ALTER SEQUENCE ${this.escapePath(o)} RENAME TO "${s}"`;n.push(new Query(l)),a.push(new Query(u))}})),r.uniques.forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(i,e.columnNames);if(e.name!==t)return;const s=this.connection.namingStrategy.uniqueConstraintName(r,e.columnNames);n.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),a.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s})),r.indices.forEach((e=>{const t=this.connection.namingStrategy.indexName(i,e.columnNames,e.where);if(e.name!==t)return;const{schema:s}=this.driver.parseTableName(r),o=this.connection.namingStrategy.indexName(r,e.columnNames,e.where),c=s?`ALTER INDEX "${s}"."${e.name}" RENAME TO "${o}"`:`ALTER INDEX "${e.name}" RENAME TO "${o}"`,l=s?`ALTER INDEX "${s}"."${o}" RENAME TO "${e.name}"`:`ALTER INDEX "${o}" RENAME TO "${e.name}"`;n.push(new Query(c)),a.push(new Query(l)),e.name=o})),r.foreignKeys.forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(i,e.columnNames,this.getTablePath(e),e.referencedColumnNames);if(e.name!==t)return;const s=this.connection.namingStrategy.foreignKeyName(r,e.columnNames,this.getTablePath(e),e.referencedColumnNames);n.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),a.push(new Query(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s}));const l=r.columns.filter((e=>"enum"===e.type||"simple-enum"===e.type));for(let e of l){if(e.enumName)continue;const t=await this.getUserDefinedTypeName(i,e);n.push(new Query(`ALTER TYPE "${t.schema}"."${t.name}" RENAME TO ${this.buildEnumName(r,e,!1)}`)),a.push(new Query(`ALTER TYPE ${this.buildEnumName(r,e)} RENAME TO "${t.name}"`))}await this.executeQueries(n,a)}async addColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=[],r=[];if("enum"===t.type||"simple-enum"===t.type){await this.hasEnumType(n,t)||(i.push(this.createEnumTypeSql(n,t)),r.push(this.dropEnumTypeSql(n,t)))}if(i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(n,t)}`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN "${t.name}"`)),t.isPrimary){const e=a.primaryColumns;if(e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,e.map((e=>e.name))),s=e.map((e=>`"${e.name}"`)).join(", ");i.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${t}"`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${t}" PRIMARY KEY (${s})`))}e.push(t);const s=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,e.map((e=>e.name))),o=e.map((e=>`"${e.name}"`)).join(", ");i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${s}" PRIMARY KEY (${o})`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${s}"`))}const o=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(o&&(i.push(this.createIndexSql(n,o)),r.push(this.dropIndexSql(n,o))),t.isUnique){const e=new TableUnique({name:this.connection.namingStrategy.uniqueConstraintName(n,[t.name]),columnNames:[t.name]});a.uniques.push(e),i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${e.name}" UNIQUE ("${t.name}")`)),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${e.name}"`))}if("STORED"===t.generatedType&&t.asExpression){const e=(await this.getTableNameWithSchema(n.name)).split("."),a=e[1],s=e[0],o=this.insertTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),c=this.deleteTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:z.GENERATED_COLUMN,name:t.name});i.push(o),r.push(c)}t.comment&&(i.push(new Query(`COMMENT ON COLUMN ${this.escapePath(n)}."${t.name}" IS ${this.escapeComment(t.comment)}`)),r.push(new Query(`COMMENT ON COLUMN ${this.escapePath(n)}."${t.name}" IS ${this.escapeComment(t.comment)}`))),await this.executeQueries(i,r),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e),r=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!r)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);let o;return s.a.isTableColumn(n)?o=n:(o=r.clone(),o.name=n),this.changeColumn(a,r,o)}async changeColumn(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e);let r=a.clone();const o=[],c=[];let l=!1;const u=s.a.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!u)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);if(u.type!==n.type||u.length!==n.length||n.isArray!==u.isArray||!u.generatedType&&"STORED"===n.generatedType||u.asExpression!==n.asExpression&&"STORED"===n.generatedType)await this.dropColumn(a,u),await this.addColumn(a,n),r=a.clone();else{if(u.name!==n.name){if(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${u.name}" TO "${n.name}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${n.name}" TO "${u.name}"`)),"enum"===u.type||"simple-enum"===u.type){const e=await this.getUserDefinedTypeName(a,u);o.push(new Query(`ALTER TYPE "${e.schema}"."${e.name}" RENAME TO ${this.buildEnumName(a,n,!1)}`)),c.push(new Query(`ALTER TYPE ${this.buildEnumName(a,n)} RENAME TO "${e.name}"`))}if(!0===u.isPrimary&&!u.primaryKeyConstraintName){const e=r.primaryColumns.map((e=>e.name)),t=this.connection.namingStrategy.primaryKeyName(r,e);e.splice(e.indexOf(u.name),1),e.push(n.name);const i=this.connection.namingStrategy.primaryKeyName(r,e);o.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${t}" TO "${i}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${i}" TO "${t}"`))}if(!0===u.isGenerated&&"increment"===n.generationStrategy){const e=this.buildSequencePath(a,u.name),t=this.buildSequenceName(a,u.name),i=this.buildSequencePath(a,n.name),s=this.buildSequenceName(a,n.name),r=`ALTER SEQUENCE ${this.escapePath(e)} RENAME TO "${s}"`,l=`ALTER SEQUENCE ${this.escapePath(i)} RENAME TO "${t}"`;o.push(new Query(r)),c.push(new Query(l))}r.findColumnUniques(u).forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(r,e.columnNames);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(u.name),1),e.columnNames.push(n.name);const i=this.connection.namingStrategy.uniqueConstraintName(r,e.columnNames);o.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${e.name}" TO "${i}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${i}" TO "${e.name}"`)),e.name=i})),r.findColumnIndices(u).forEach((e=>{const t=this.connection.namingStrategy.indexName(r,e.columnNames,e.where);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(u.name),1),e.columnNames.push(n.name);const{schema:i}=this.driver.parseTableName(a),s=this.connection.namingStrategy.indexName(r,e.columnNames,e.where),l=i?`ALTER INDEX "${i}"."${e.name}" RENAME TO "${s}"`:`ALTER INDEX "${e.name}" RENAME TO "${s}"`,h=i?`ALTER INDEX "${i}"."${s}" RENAME TO "${e.name}"`:`ALTER INDEX "${s}" RENAME TO "${e.name}"`;o.push(new Query(l)),c.push(new Query(h)),e.name=s})),r.findColumnForeignKeys(u).forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(r,e.columnNames,this.getTablePath(e),e.referencedColumnNames);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(u.name),1),e.columnNames.push(n.name);const i=this.connection.namingStrategy.foreignKeyName(r,e.columnNames,this.getTablePath(e),e.referencedColumnNames);o.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${e.name}" TO "${i}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${i}" TO "${e.name}"`)),e.name=i}));const e=r.columns.find((e=>e.name===u.name));r.columns[r.columns.indexOf(e)].name=n.name,u.name=n.name}if(n.precision===u.precision&&n.scale===u.scale||(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(u)}`))),!("enum"!==n.type&&"simple-enum"!==n.type||"enum"!==u.type&&"simple-enum"!==u.type||j.s.isArraysEqual(n.enum,u.enum)&&n.enumName===u.enumName)){const e=n.isArray?"[]":"",t=this.buildEnumName(a,n),i=this.buildEnumName(a,u),s=this.buildEnumName(a,u,!1),r=this.buildEnumName(a,u,!0,!1,!0),h=this.buildEnumName(a,u,!1,!1,!0);o.push(new Query(`ALTER TYPE ${i} RENAME TO ${h}`)),c.push(new Query(`ALTER TYPE ${r} RENAME TO ${s}`)),o.push(this.createEnumTypeSql(a,n,t)),c.push(this.dropEnumTypeSql(a,n,t)),null!==u.default&&void 0!==u.default&&(l=!0,o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" SET DEFAULT ${u.default}`)));const d=`${t}${e} USING "${n.name}"::"text"::${t}${e}`,p=`${r}${e} USING "${n.name}"::"text"::${r}${e}`;o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${d}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${p}`)),null!==n.default&&void 0!==n.default&&(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${n.default}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))),o.push(this.dropEnumTypeSql(a,u,r)),c.push(this.createEnumTypeSql(a,u,r))}if(u.isNullable!==n.isNullable&&(n.isNullable?(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" DROP NOT NULL`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" SET NOT NULL`))):(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" SET NOT NULL`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" DROP NOT NULL`)))),u.comment!==n.comment&&(o.push(new Query(`COMMENT ON COLUMN ${this.escapePath(a)}."${u.name}" IS ${this.escapeComment(n.comment)}`)),c.push(new Query(`COMMENT ON COLUMN ${this.escapePath(a)}."${n.name}" IS ${this.escapeComment(u.comment)}`))),n.isPrimary!==u.isPrimary){const e=r.primaryColumns;if(e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(r,e.map((e=>e.name))),n=e.map((e=>`"${e.name}"`)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${n})`))}if(!0===n.isPrimary){e.push(n);r.columns.find((e=>e.name===n.name)).isPrimary=!0;const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(r,e.map((e=>e.name))),i=e.map((e=>`"${e.name}"`)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${i})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`))}else{const t=e.find((e=>e.name===n.name));e.splice(e.indexOf(t),1);if(r.columns.find((e=>e.name===n.name)).isPrimary=!1,e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(r,e.map((e=>e.name))),n=e.map((e=>`"${e.name}"`)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${n})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`))}}}if(n.isUnique!==u.isUnique)if(!0===n.isUnique){const e=new TableUnique({name:this.connection.namingStrategy.uniqueConstraintName(a,[n.name]),columnNames:[n.name]});r.uniques.push(e),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${e.name}" UNIQUE ("${n.name}")`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${e.name}"`))}else{const e=r.uniques.find((e=>1===e.columnNames.length&&!!e.columnNames.find((e=>e===n.name))));r.uniques.splice(r.uniques.indexOf(e),1),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${e.name}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${e.name}" UNIQUE ("${n.name}")`))}if(u.isGenerated!==n.isGenerated&&(u.isGenerated&&("uuid"===u.generationStrategy?(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${u.name}" SET DEFAULT ${this.driver.uuidGenerator}`))):"increment"===u.generationStrategy&&(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),o.push(new Query(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),c.push(new Query(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`)))),"uuid"===n.generationStrategy?!0===n.isGenerated?(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${this.driver.uuidGenerator}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${this.driver.uuidGenerator}`))):"increment"===n.generationStrategy&&(!0===n.isGenerated?(o.push(new Query(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`)),c.push(new Query(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),o.push(new Query(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),c.push(new Query(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`))))),n.default===u.default||l||(null!==n.default&&void 0!==n.default?(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${n.default}`)),null!==u.default&&void 0!==u.default?c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${u.default}`)):c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):null!==u.default&&void 0!==u.default&&(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${u.default}`)))),(n.spatialFeatureType||"").toLowerCase()===(u.spatialFeatureType||"").toLowerCase()&&n.srid===u.srid||(o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(u)}`))),n.generatedType!==u.generatedType&&(!n.generatedType||"VIRTUAL"===n.generatedType)){const e=(await this.getTableNameWithSchema(a.name)).split("."),t=e[1],i=e[0];o.push(new Query(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${u.name}" TO "TEMP_OLD_${u.name}"`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD ${this.buildCreateColumnSql(a,n)}`)),o.push(new Query(`UPDATE ${this.escapePath(a)} SET "${n.name}" = "TEMP_OLD_${u.name}"`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP COLUMN "TEMP_OLD_${u.name}"`)),o.push(this.deleteTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:z.GENERATED_COLUMN,name:u.name})),c.push(this.insertTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:z.GENERATED_COLUMN,name:u.name,value:u.asExpression})),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} ADD ${this.buildCreateColumnSql(a,u)}`)),c.push(new Query(`ALTER TABLE ${this.escapePath(a)} DROP COLUMN "${n.name}"`))}}await this.executeQueries(o,c),this.replaceCachedTable(a,r)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new i.K_(`Column "${t}" was not found in table "${n.name}"`);const r=n.clone(),o=[],c=[];if(a.isPrimary){const e=a.primaryKeyConstraintName?a.primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(r,r.primaryColumns.map((e=>e.name))),t=r.primaryColumns.map((e=>`"${e.name}"`)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP CONSTRAINT "${e}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(r)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`));if(r.findColumnByName(a.name).isPrimary=!1,r.primaryColumns.length>0){const e=r.primaryColumns[0].primaryKeyConstraintName?r.primaryColumns[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(r,r.primaryColumns.map((e=>e.name))),t=r.primaryColumns.map((e=>`"${e.name}"`)).join(", ");o.push(new Query(`ALTER TABLE ${this.escapePath(r)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`)),c.push(new Query(`ALTER TABLE ${this.escapePath(r)} DROP CONSTRAINT "${e}"`))}}const l=r.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));l&&(r.indices.splice(r.indices.indexOf(l),1),o.push(this.dropIndexSql(n,l)),c.push(this.createIndexSql(n,l)));const u=r.checks.find((e=>!!e.columnNames&&1===e.columnNames.length&&e.columnNames[0]===a.name));u&&(r.checks.splice(r.checks.indexOf(u),1),o.push(this.dropCheckConstraintSql(n,u)),c.push(this.createCheckConstraintSql(n,u)));const h=r.uniques.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));if(h&&(r.uniques.splice(r.uniques.indexOf(h),1),o.push(this.dropUniqueConstraintSql(n,h)),c.push(this.createUniqueConstraintSql(n,h))),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN "${a.name}"`)),c.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(n,a)}`)),"enum"===a.type||"simple-enum"===a.type){if(await this.hasEnumType(n,a)){const e=await this.getUserDefinedTypeName(n,a),t=`"${e.schema}"."${e.name}"`;o.push(this.dropEnumTypeSql(n,a,t)),c.push(this.createEnumTypeSql(n,a,t))}}if("STORED"===a.generatedType){const e=(await this.getTableNameWithSchema(n.name)).split("."),t=e[1],i=e[0],s=this.deleteTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:z.GENERATED_COLUMN,name:a.name}),r=this.insertTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:z.GENERATED_COLUMN,name:a.name,value:a.asExpression});o.push(s),c.push(r)}await this.executeQueries(o,c),r.removeColumn(a),this.replaceCachedTable(n,r)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t,n){const a=s.a.isTable(e)?e:await this.getCachedTable(e),i=a.clone(),r=this.createPrimaryKeySql(a,t,n);i.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)}));const o=this.dropPrimaryKeySql(i);await this.executeQueries(r,o),this.replaceCachedTable(a,i)}async updatePrimaryKeys(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=t.map((e=>e.name)),r=[],o=[],c=a.primaryColumns;if(c.length>0){const e=c[0].primaryKeyConstraintName?c[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,c.map((e=>e.name))),t=c.map((e=>`"${e.name}"`)).join(", ");r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${e}"`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`))}a.columns.filter((e=>-1!==i.indexOf(e.name))).forEach((e=>e.isPrimary=!0));const l=c[0].primaryKeyConstraintName?c[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,i),u=i.map((e=>`"${e}"`)).join(", ");r.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${l}" PRIMARY KEY (${u})`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${l}"`)),await this.executeQueries(r,o),this.replaceCachedTable(n,a)}async dropPrimaryKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=this.dropPrimaryKeySql(n),i=this.createPrimaryKeySql(n,n.primaryColumns.map((e=>e.name)),t);await this.executeQueries(a,i),n.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.uniqueConstraintName(n,t.columnNames));const a=this.createUniqueConstraintSql(n,t),i=this.dropUniqueConstraintSql(n,t);await this.executeQueries(a,i),n.addUniqueConstraint(t)}async createUniqueConstraints(e,t){for(const n of t)await this.createUniqueConstraint(e,n)}async dropUniqueConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableUnique(t)?t:n.uniques.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied unique constraint was not found in table ${n.name}`);const r=this.dropUniqueConstraintSql(n,a),o=this.createUniqueConstraintSql(n,a);await this.executeQueries(r,o),n.removeUniqueConstraint(a)}async dropUniqueConstraints(e,t){for(const n of t)await this.dropUniqueConstraint(e,n)}async createCheckConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.checkConstraintName(n,t.expression));const a=this.createCheckConstraintSql(n,t),i=this.dropCheckConstraintSql(n,t);await this.executeQueries(a,i),n.addCheckConstraint(t)}async createCheckConstraints(e,t){const n=t.map((t=>this.createCheckConstraint(e,t)));await Promise.all(n)}async dropCheckConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableCheck(t)?t:n.checks.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied check constraint was not found in table ${n.name}`);const r=this.dropCheckConstraintSql(n,a),o=this.createCheckConstraintSql(n,a);await this.executeQueries(r,o),n.removeCheckConstraint(a)}async dropCheckConstraints(e,t){const n=t.map((t=>this.dropCheckConstraint(e,t)));await Promise.all(n)}async createExclusionConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.exclusionConstraintName(n,t.expression));const a=this.createExclusionConstraintSql(n,t),i=this.dropExclusionConstraintSql(n,t);await this.executeQueries(a,i),n.addExclusionConstraint(t)}async createExclusionConstraints(e,t){const n=t.map((t=>this.createExclusionConstraint(e,t)));await Promise.all(n)}async dropExclusionConstraint(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableExclusion(t)?t:n.exclusions.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied exclusion constraint was not found in table ${n.name}`);const r=this.dropExclusionConstraintSql(n,a),o=this.createExclusionConstraintSql(n,a);await this.executeQueries(r,o),n.removeExclusionConstraint(a)}async dropExclusionConstraints(e,t){const n=t.map((t=>this.dropExclusionConstraint(e,t)));await Promise.all(n)}async createForeignKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){for(const n of t)await this.createForeignKey(e,n)}async dropForeignKey(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied foreign key was not found in table ${n.name}`);const r=this.dropForeignKeySql(n,a),o=this.createForeignKeySql(n,a);await this.executeQueries(r,o),n.removeForeignKey(a)}async dropForeignKeys(e,t){for(const n of t)await this.dropForeignKey(e,n)}async createIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.indexName(n,t.columnNames,t.where));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){for(const n of t)await this.createIndex(e,n)}async dropIndex(e,t){const n=s.a.isTable(e)?e:await this.getCachedTable(e),a=s.a.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied index ${t} was not found in table ${n.name}`);const r=this.dropIndexSql(n,a),o=this.createIndexSql(n,a);await this.executeQueries(r,o),n.removeIndex(a)}async dropIndices(e,t){for(const n of t)await this.dropIndex(e,n)}async clearTable(e){await this.query(`TRUNCATE TABLE ${this.escapePath(e)}`)}async clearDatabase(){const e=[];this.connection.entityMetadatas.filter((e=>e.schema)).forEach((t=>{!!e.find((e=>e===t.schema))||e.push(t.schema)})),e.push(this.driver.options.schema||"current_schema()");const t=e.map((e=>"current_schema()"===e?e:"'"+e+"'")).join(", "),n=this.isTransactionActive;n||await this.startTransaction();try{const e=await this.getVersion(),a=`SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (${t}) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')`,i=await this.query(a);if(await Promise.all(i.map((e=>this.query(e.query)))),class VersionUtils{static isGreaterOrEqual(e,t){const n=ee(e),a=ee(t);return n[0]>a[0]||n[0]===a[0]&&n[1]>a[1]||n[0]===a[0]&&n[1]===a[1]&&n[2]>=a[2]}}.isGreaterOrEqual(e,"9.3")){const e=`SELECT 'DROP MATERIALIZED VIEW IF EXISTS "' || schemaname || '"."' || matviewname || '" CASCADE;' as "query" FROM "pg_matviews" WHERE "schemaname" IN (${t})`,n=await this.query(e);await Promise.all(n.map((e=>this.query(e.query))))}const s=`SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (${t}) AND "tablename" NOT IN ('spatial_ref_sys')`,r=await this.query(s);await Promise.all(r.map((e=>this.query(e.query)))),await this.dropEnumTypes(t),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=await this.getCurrentDatabase(),n=await this.getCurrentSchema(),a=0===e.length?"1=1":e.map((e=>this.driver.parseTableName(e))).map((({schema:e,tableName:t})=>(e||(e=this.driver.options.schema||n),`("t"."schema" = '${e}' AND "t"."name" = '${t}')`))).join(" OR "),i=`SELECT "t".* FROM ${this.escapePath(this.getTypeormMetadataTableName())} "t" INNER JOIN "pg_catalog"."pg_class" "c" ON "c"."relname" = "t"."name" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "c"."relnamespace" AND "n"."nspname" = "t"."schema" WHERE "t"."type" IN ('${z.VIEW}', '${z.MATERIALIZED_VIEW}') ${a?`AND (${a})`:""}`;return(await this.query(i)).map((e=>{const a=new View,i=e.schema!==n||this.driver.options.schema?e.schema:void 0;return a.database=t,a.schema=e.schema,a.name=this.driver.buildTableName(e.name,i),a.expression=e.value,a.materialized=e.type===z.MATERIALIZED_VIEW,a}))}async loadTables(e){if(e&&0===e.length)return[];const t=await this.getCurrentSchema(),n=await this.getCurrentDatabase(),a=[];if(e){const n='SELECT "table_schema", "table_name" FROM "information_schema"."tables" WHERE '+e.map((e=>this.driver.parseTableName(e))).map((({schema:e,tableName:n})=>`("table_schema" = '${e||t}' AND "table_name" = '${n}')`)).join(" OR ");a.push(...await this.query(n))}else{const e='SELECT "table_schema", "table_name" FROM "information_schema"."tables"';a.push(...await this.query(e))}if(0===a.length)return[];const i='SELECT columns.*, pg_catalog.col_description((\'"\' || table_catalog || \'"."\' || table_schema || \'"."\' || table_name || \'"\')::regclass::oid, ordinal_position) AS description, (\'"\' || "udt_schema" || \'"."\' || "udt_name" || \'"\')::"regtype" AS "regtype", pg_catalog.format_type("col_attr"."atttypid", "col_attr"."atttypmod") AS "format_type" FROM "information_schema"."columns" LEFT JOIN "pg_catalog"."pg_attribute" AS "col_attr" ON "col_attr"."attname" = "columns"."column_name" AND "col_attr"."attrelid" = ( SELECT "cls"."oid" FROM "pg_catalog"."pg_class" AS "cls" LEFT JOIN "pg_catalog"."pg_namespace" AS "ns" ON "ns"."oid" = "cls"."relnamespace" WHERE "cls"."relname" = "columns"."table_name" AND "ns"."nspname" = "columns"."table_schema" ) WHERE '+a.map((({table_schema:e,table_name:t})=>`("table_schema" = '${e}' AND "table_name" = '${t}')`)).join(" OR "),s=a.map((({table_schema:e,table_name:t})=>`("ns"."nspname" = '${e}' AND "t"."relname" = '${t}')`)).join(" OR "),r=`SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" IN ('r', 'p') AND (${s})`,o=`SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" IN ('r', 'p') AND "cnst"."contype" IS NULL AND (${s})`,c=`SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (${a.map((({table_schema:e,table_name:t})=>`("ns"."nspname" = '${e}' AND "cl"."relname" = '${t}')`)).join(" OR ")}) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" ${await this.hasSupportForPartitionedTables()?' AND "cl"."relispartition" = \'f\'':""}INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"`,[l,u,h,d]=await Promise.all([this.query(i),this.query(r),this.query(o),this.query(c)]);return Promise.all(a.map((async e=>{const a=new Table,i=(e,n)=>e[n]!==t||this.driver.options.schema&&this.driver.options.schema!==t?e[n]:void 0,s=i(e,"table_schema");a.database=n,a.schema=e.table_schema,a.name=this.driver.buildTableName(e.table_name,s),a.columns=await Promise.all(l.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)).map((async t=>{const i=u.filter((e=>e.table_name===t.table_name&&e.table_schema===t.table_schema&&e.column_name===t.column_name)),s=new TableColumn;if(s.name=t.column_name,s.type=t.regtype.toLowerCase(),"numeric"!==s.type&&"decimal"!==s.type&&"float"!==s.type||(null===t.numeric_precision||this.isDefaultColumnPrecision(a,s,t.numeric_precision)?null===t.numeric_scale||this.isDefaultColumnScale(a,s,t.numeric_scale)||(s.precision=void 0):s.precision=t.numeric_precision,null===t.numeric_scale||this.isDefaultColumnScale(a,s,t.numeric_scale)?null===t.numeric_precision||this.isDefaultColumnPrecision(a,s,t.numeric_precision)||(s.scale=void 0):s.scale=t.numeric_scale),"interval"!==s.type&&"time without time zone"!==s.type&&"time with time zone"!==s.type&&"timestamp without time zone"!==s.type&&"timestamp with time zone"!==s.type||(s.precision=this.isDefaultColumnPrecision(a,s,t.datetime_precision)?void 0:t.datetime_precision),"USER-DEFINED"===t.data_type||"ARRAY"===t.data_type){const{name:n}=await this.getUserDefinedTypeName(a,s),i=this.buildEnumName(a,s,!1,!0)!==n?n:void 0,r=`SELECT "e"."enumlabel" AS "value" FROM "pg_enum" "e" INNER JOIN "pg_type" "t" ON "t"."oid" = "e"."enumtypid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = '${e.table_schema}' AND "t"."typname" = '${i||n}'`,o=await this.query(r);if(o.length&&(s.type="enum",s.enum=o.map((e=>e.value)),s.enumName=i),"ARRAY"===t.data_type){s.isArray=!0;const e=s.type.replace("[]","");s.type=this.connection.driver.normalizeType({type:e})}}if("geometry"===s.type){const e=`SELECT * FROM (\n                        SELECT\n                          "f_table_schema" "table_schema",\n                          "f_table_name" "table_name",\n                          "f_geometry_column" "column_name",\n                          "srid",\n                          "type"\n                        FROM "geometry_columns"\n                      ) AS _\n                      WHERE\n                          "column_name" = '${t.column_name}' AND\n                          "table_schema" = '${t.table_schema}' AND\n                          "table_name" = '${t.table_name}'`,n=await this.query(e);n.length>0&&(s.spatialFeatureType=n[0].type,s.srid=n[0].srid)}if("geography"===s.type){const e=`SELECT * FROM (\n                        SELECT\n                          "f_table_schema" "table_schema",\n                          "f_table_name" "table_name",\n                          "f_geography_column" "column_name",\n                          "srid",\n                          "type"\n                        FROM "geography_columns"\n                      ) AS _\n                      WHERE\n                          "column_name" = '${t.column_name}' AND\n                          "table_schema" = '${t.table_schema}' AND\n                          "table_name" = '${t.table_name}'`,n=await this.query(e);n.length>0&&(s.spatialFeatureType=n[0].type,s.srid=n[0].srid)}if(-1!==this.driver.withLengthColumnTypes.indexOf(s.type)){let e;if(s.isArray){const n=/\((\d+)\)/.exec(t.format_type);e=n?n[1]:void 0}else t.character_maximum_length&&(e=t.character_maximum_length.toString());e&&(s.length=this.isDefaultColumnLength(a,s,e)?"":e)}s.isNullable="YES"===t.is_nullable;const r=i.find((e=>"PRIMARY"===e.constraint_type));if(r){s.isPrimary=!0;const e=u.filter((e=>e.table_name===t.table_name&&e.table_schema===t.table_schema&&e.column_name!==t.column_name&&"PRIMARY"===e.constraint_type)).map((e=>e.column_name));e.push(t.column_name);const n=this.connection.namingStrategy.primaryKeyName(a,e);r.constraint_name!==n&&(s.primaryKeyConstraintName=r.constraint_name)}const o=i.filter((e=>"UNIQUE"===e.constraint_type)),c=o.every((e=>u.some((n=>"UNIQUE"===n.constraint_type&&n.constraint_name===e.constraint_name&&n.column_name!==t.column_name))));if(s.isUnique=o.length>0&&!c,"YES"===t.is_identity)s.isGenerated=!0,s.generationStrategy="identity",s.generatedIdentity=t.identity_generation;else if(null!==t.column_default&&void 0!==t.column_default){const e=`nextval('${this.buildSequenceName(a,t.column_name)}'::regclass)`,n=`nextval('${this.buildSequencePath(a,t.column_name)}'::regclass)`,i=t.column_default.replace(/"/g,"");i===e||i===n?(s.isGenerated=!0,s.generationStrategy="increment"):"gen_random_uuid()"===t.column_default||/^uuid_generate_v\d\(\)/.test(t.column_default)?(s.isGenerated=!0,s.generationStrategy="uuid"):"now()"===t.column_default||-1!==t.column_default.indexOf("'now'::text")?s.default=t.column_default:(s.default=t.column_default.replace(/::[\w\s\.\[\]\"]+/g,""),s.default=s.default.replace(/^(-?\d+)$/,"'$1'"))}if("ALWAYS"===t.is_generated&&t.generation_expression){s.generatedType="STORED";const t=await this.selectTypeormMetadataSql({database:n,schema:e.table_schema,table:e.table_name,type:z.GENERATED_COLUMN,name:s.name}),a=await this.query(t.query,t.parameters);a[0]&&a[0].value?s.asExpression=a[0].value:s.asExpression=""}return s.comment=t.description?t.description:void 0,t.character_set_name&&(s.charset=t.character_set_name),t.collation_name&&(s.collation=t.collation_name),s})));const r=j.s.uniq(u.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"UNIQUE"===t.constraint_type)),(e=>e.constraint_name));a.uniques=r.map((e=>{const t=u.filter((t=>t.constraint_name===e.constraint_name));return new TableUnique({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),deferrable:e.deferrable?e.deferred:void 0})}));const o=j.s.uniq(u.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"CHECK"===t.constraint_type)),(e=>e.constraint_name));a.checks=o.map((e=>{const t=u.filter((t=>t.constraint_name===e.constraint_name));return new TableCheck({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),expression:e.expression.replace(/^\s*CHECK\s*\((.*)\)\s*$/i,"$1")})}));const c=j.s.uniq(u.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"EXCLUDE"===t.constraint_type)),(e=>e.constraint_name));a.exclusions=c.map((e=>new TableExclusion({name:e.constraint_name,expression:e.expression.substring(8)})));const p=j.s.uniq(d.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)),(e=>e.constraint_name));a.foreignKeys=p.map((e=>{const t=d.filter((t=>t.constraint_name===e.constraint_name)),n=i(e,"referenced_table_schema"),a=this.driver.buildTableName(e.referenced_table_name,n);return new TableForeignKey({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),referencedSchema:e.referenced_table_schema,referencedTableName:a,referencedColumnNames:t.map((e=>e.referenced_column_name)),onDelete:e.on_delete,onUpdate:e.on_update,deferrable:e.deferrable?e.deferred:void 0})}));const m=j.s.uniq(h.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)),(e=>e.constraint_name));return a.indices=m.map((e=>{const t=h.filter((t=>t.table_schema===e.table_schema&&t.table_name===e.table_name&&t.constraint_name===e.constraint_name));return new TableIndex({table:a,name:e.constraint_name,columnNames:t.map((e=>e.column_name)),isUnique:"TRUE"===e.is_unique,where:e.condition,isSpatial:t.every((e=>this.driver.spatialTypes.indexOf(e.type_name)>=0)),isFulltext:!1})})),a})))}createTableSql(e,t){const n=e.columns.map((t=>this.buildCreateColumnSql(e,t))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;if(e.columns.filter((e=>e.isUnique)).forEach((t=>{e.uniques.some((e=>1===e.columnNames.length&&e.columnNames[0]===t.name))||e.uniques.push(new TableUnique({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name]}))})),e.uniques.length>0){const t=e.uniques.map((t=>{let n=`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.uniqueConstraintName(e,t.columnNames)}" UNIQUE (${t.columnNames.map((e=>`"${e}"`)).join(", ")})`;return t.deferrable&&(n+=` DEFERRABLE ${t.deferrable}`),n})).join(", ");a+=`, ${t}`}if(e.checks.length>0){const t=e.checks.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.checkConstraintName(e,t.expression)}" CHECK (${t.expression})`)).join(", ");a+=`, ${t}`}if(e.exclusions.length>0){const t=e.exclusions.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.exclusionConstraintName(e,t.expression)}" EXCLUDE ${t.expression}`)).join(", ");a+=`, ${t}`}if(e.foreignKeys.length>0&&t){const t=e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`"${e}"`)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=t.referencedColumnNames.map((e=>`"${e}"`)).join(", ");let i=`CONSTRAINT "${t.name}" FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),t.deferrable&&(i+=` DEFERRABLE ${t.deferrable}`),i})).join(", ");a+=`, ${t}`}const i=e.columns.filter((e=>e.isPrimary));if(i.length>0){const t=i[0].primaryKeyConstraintName?i[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(e,i.map((e=>e.name))),n=i.map((e=>`"${e.name}"`)).join(", ");a+=`, CONSTRAINT "${t}" PRIMARY KEY (${n})`}return a+=")",e.columns.filter((e=>e.comment)).forEach((t=>a+=`; COMMENT ON COLUMN ${this.escapePath(e)}."${t.name}" IS ${this.escapeComment(t.comment)}`)),new Query(a)}async getVersion(){return(await this.query("SHOW SERVER_VERSION"))[0].server_version}dropTableSql(e){return new Query(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){const t=e.materialized?"MATERIALIZED ":"",n=this.escapePath(e);return"string"==typeof e.expression?new Query(`CREATE ${t}VIEW ${n} AS ${e.expression}`):new Query(`CREATE ${t}VIEW ${n} AS ${e.expression(this.connection).getQuery()}`)}async insertViewDefinitionSql(e){const t=await this.getCurrentSchema();let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=t);const i=e.materialized?z.MATERIALIZED_VIEW:z.VIEW,s="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:i,schema:n,name:a,value:s})}dropViewSql(e){const t=e.materialized?"MATERIALIZED ":"";return new Query(`DROP ${t}VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){const t=await this.getCurrentSchema();let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=t);const i=e.materialized?z.MATERIALIZED_VIEW:z.VIEW;return this.deleteTypeormMetadataSql({type:i,schema:n,name:a})}async dropEnumTypes(e){const t=`SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (${e}) GROUP BY "n"."nspname", "t"."typname"`,n=await this.query(t);await Promise.all(n.map((e=>this.query(e.query))))}async hasEnumType(e,t){let{schema:n}=this.driver.parseTableName(e);n||(n=await this.getCurrentSchema());const a=`SELECT "n"."nspname", "t"."typname" FROM "pg_type" "t" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = '${n}' AND "t"."typname" = '${this.buildEnumName(e,t,!1,!0)}'`;return!!(await this.query(a)).length}createEnumTypeSql(e,t,n){n||(n=this.buildEnumName(e,t));const a=t.enum.map((e=>`'${e.replace("'","''")}'`)).join(", ");return new Query(`CREATE TYPE ${n} AS ENUM(${a})`)}dropEnumTypeSql(e,t,n){return n||(n=this.buildEnumName(e,t)),new Query(`DROP TYPE ${n}`)}createIndexSql(e,t){const n=t.columnNames.map((e=>`"${e}"`)).join(", ");return new Query(`CREATE ${t.isUnique?"UNIQUE ":""}INDEX "${t.name}" ON ${this.escapePath(e)} ${t.isSpatial?"USING GiST ":""}(${n}) ${t.where?"WHERE "+t.where:""}`)}dropIndexSql(e,t){let n=s.a.isTableIndex(t)?t.name:t;const{schema:a}=this.driver.parseTableName(e);return new Query(a?`DROP INDEX "${a}"."${n}"`:`DROP INDEX "${n}"`)}createPrimaryKeySql(e,t,n){const a=n||this.connection.namingStrategy.primaryKeyName(e,t),i=t.map((e=>`"${e}"`)).join(", ");return new Query(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${a}" PRIMARY KEY (${i})`)}dropPrimaryKeySql(e){if(!e.primaryColumns.length)throw new i.K_(`Table ${e} has no primary keys.`);const t=e.primaryColumns.map((e=>e.name)),n=e.primaryColumns[0].primaryKeyConstraintName,a=n||this.connection.namingStrategy.primaryKeyName(e,t);return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${a}"`)}createUniqueConstraintSql(e,t){const n=t.columnNames.map((e=>'"'+e+'"')).join(", ");let a=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" UNIQUE (${n})`;return t.deferrable&&(a+=` DEFERRABLE ${t.deferrable}`),new Query(a)}dropUniqueConstraintSql(e,t){const n=s.a.isTableUnique(t)?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createCheckConstraintSql(e,t){return new Query(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" CHECK (${t.expression})`)}dropCheckConstraintSql(e,t){const n=s.a.isTableCheck(t)?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createExclusionConstraintSql(e,t){return new Query(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" EXCLUDE ${t.expression}`)}dropExclusionConstraintSql(e,t){const n=s.a.isTableExclusion(t)?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>'"'+e+'"')).join(", "),a=t.referencedColumnNames.map((e=>'"'+e+'"')).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))}(${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),t.deferrable&&(i+=` DEFERRABLE ${t.deferrable}`),new Query(i)}dropForeignKeySql(e,t){const n=s.a.isTableForeignKey(t)?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}buildSequenceName(e,t){const{tableName:n}=this.driver.parseTableName(e),a=s.a.isTableColumn(t)?t.name:t;let i=`${n}_${a}_seq`;return i.length>this.connection.driver.maxAliasLength&&(i=`${n.substring(0,29)}_${a.substring(0,Math.max(29,63-e.name.length-5))}_seq`),i}buildSequencePath(e,t){const{schema:n}=this.driver.parseTableName(e);return n?`${n}.${this.buildSequenceName(e,t)}`:this.buildSequenceName(e,t)}buildEnumName(e,t,n=!0,a,i){const{schema:s,tableName:r}=this.driver.parseTableName(e);let o=t.enumName?t.enumName:`${r}_${t.name.toLowerCase()}_enum`;return s&&n&&(o=`${s}.${o}`),i&&(o+="_old"),o.split(".").map((e=>a?e:`"${e}"`)).join(".")}async getUserDefinedTypeName(e,t){let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=await this.getCurrentSchema());const i=await this.query(`SELECT "udt_schema", "udt_name" FROM "information_schema"."columns" WHERE "table_schema" = '${n}' AND "table_name" = '${a}' AND "column_name"='${t.name}'`);let s=i[0].udt_name;return 0===s.indexOf("_")&&(s=s.substr(1,s.length)),{schema:i[0].udt_schema,name:s}}escapeComment(e){return e&&0!==e.length?`'${e=e.replace(/'/g,"''").replace(/\u0000/g,"")}'`:"NULL"}escapePath(e){const{schema:t,tableName:n}=this.driver.parseTableName(e);return t&&t!==this.driver.searchSchema?`"${t}"."${n}"`:`"${n}"`}async getTableNameWithSchema(e){const t=s.a.isTable(e)?e.name:e;if(-1===t.indexOf(".")){return`${(await this.query("SELECT current_schema()"))[0].current_schema}.${t}`}return`${t.split(".")[0]}.${t.split(".")[1]}`}buildCreateColumnSql(e,t){let n='"'+t.name+'"';if(!0===t.isGenerated&&"uuid"!==t.generationStrategy)if("identity"===t.generationStrategy){const e=t.generatedIdentity||"BY DEFAULT";n+=` ${t.type} GENERATED ${e} AS IDENTITY`}else"integer"!==t.type&&"int"!==t.type&&"int4"!==t.type||(n+=" SERIAL"),"smallint"!==t.type&&"int2"!==t.type||(n+=" SMALLSERIAL"),"bigint"!==t.type&&"int8"!==t.type||(n+=" BIGSERIAL");return"enum"===t.type||"simple-enum"===t.type?(n+=" "+this.buildEnumName(e,t),t.isArray&&(n+=" array")):t.isGenerated&&"uuid"!==t.type||(n+=" "+this.connection.driver.createFullType(t)),"STORED"===t.generatedType&&t.asExpression&&(n+=` GENERATED ALWAYS AS (${t.asExpression}) STORED`),t.charset&&(n+=' CHARACTER SET "'+t.charset+'"'),t.collation&&(n+=' COLLATE "'+t.collation+'"'),!0!==t.isNullable&&(n+=" NOT NULL"),void 0!==t.default&&null!==t.default&&(n+=" DEFAULT "+t.default),t.isGenerated&&"uuid"===t.generationStrategy&&!t.default&&(n+=` DEFAULT ${this.driver.uuidGenerator}`),n}async hasSupportForPartitionedTables(){return!!(await this.query("SELECT TRUE FROM information_schema.columns WHERE table_name = 'pg_class' and column_name = 'relispartition'")).length}}class PostgresQueryRunnerWrapper extends PostgresQueryRunner{constructor(e,t){super(e,t)}}class AuroraPostgresQueryRunner extends PostgresQueryRunnerWrapper{constructor(e,t,n){super(e,n),this.client=t}connect(){return this.databaseConnection?Promise.resolve(this.databaseConnection):(this.databaseConnectionPromise||("slave"===this.mode&&this.driver.isReplicated?this.databaseConnectionPromise=this.driver.obtainSlaveConnection().then((([e,t])=>(this.driver.connectedQueryRunners.push(this),this.databaseConnection=e,this.releaseCallback=t,this.databaseConnection))):this.databaseConnectionPromise=this.driver.obtainMasterConnection().then((([e,t])=>(this.driver.connectedQueryRunners.push(this),this.databaseConnection=e,this.releaseCallback=t,this.databaseConnection)))),this.databaseConnectionPromise)}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?await this.client.startTransaction():await this.query(`SAVEPOINT typeorm_${this.transactionDepth}`),this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?await this.query("RELEASE SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.client.commitTransaction(),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?await this.query("ROLLBACK TO SAVEPOINT typeorm_"+(this.transactionDepth-1)):(await this.client.rollbackTransaction(),this.isTransactionActive=!1),this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=await this.client.query(e,t),i=new QueryResult;return i.raw=a,(null==a?void 0:a.hasOwnProperty("records"))&&Array.isArray(a.records)&&(i.records=a.records),(null==a?void 0:a.hasOwnProperty("numberOfRecordsUpdated"))&&(i.affected=a.numberOfRecordsUpdated),n?i:i.raw}}class PostgresWrapper extends PostgresDriver{}class AuroraPostgresDriver_AuroraPostgresDriver extends PostgresWrapper{constructor(e){super(),this.transactionSupport="nested",this.connection=e,this.options=e.options,this.isReplicated=!1,this.loadDependencies(),this.client=new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),this.database=d.z.buildDriverOptions(this.options).database}async connect(){}async disconnect(){}createQueryRunner(e){return new AuroraPostgresQueryRunner(this,new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),e)}preparePersistentValue(e,t){return this.options.formatOptions&&!1===this.options.formatOptions.castParameters?super.preparePersistentValue(e,t):(t.transformer&&(e=B.A.transformTo(t.transformer,e)),this.client.preparePersistentValue(e,t))}prepareHydratedValue(e,t){return this.options.formatOptions&&!1===this.options.formatOptions.castParameters?super.prepareHydratedValue(e,t):(t.transformer&&(e=B.A.transformFrom(t.transformer,e)),this.client.prepareHydratedValue(e,t))}loadDependencies(){const e=this.options.driver||PlatformTools.load("typeorm-aurora-data-api-driver"),{pg:t}=e;this.DataApiDriver=t}executeQuery(e,t){return this.connection.query(t)}async afterConnect(){const e=await this.checkMetadataForExtensions();return e.hasExtensions&&await this.enableExtensions(e,this.connection),Promise.resolve()}}class CapacitorQueryRunner extends AbstractSqliteQueryRunner{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new Broadcaster(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async executeSet(e){if(this.isReleased)throw new H.Y;return(await this.connect()).executeSet(e,!1)}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;const a=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const i=e.substr(0,e.indexOf(" "));try{let s;s=-1!==["BEGIN","ROLLBACK","COMMIT","CREATE","ALTER","DROP"].indexOf(i)?await a.execute(e,!1):-1!==["INSERT","UPDATE","DELETE"].indexOf(i)?await a.run(e,t,!1):await a.query(e,t||[]);const r=new QueryResult;return(null==s?void 0:s.hasOwnProperty("values"))&&(r.raw=s.values,r.records=s.values),(null==s?void 0:s.hasOwnProperty("changes"))&&(r.affected=s.changes.changes,r.raw=s.changes.lastId||s.changes.changes),n?r:r.raw}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}parametrize(e){return Object.keys(e).map((e=>`"${e}"=?`))}}class CapacitorDriver extends AbstractSqliteDriver{constructor(e){if(super(e),this.database=this.options.database,this.driver=this.options.driver,!this.options.database)throw new i.fd("database");if(!this.options.driver)throw new i.fd("driver");this.sqlite=this.options.driver}async connect(){this.databaseConnection=this.createDatabaseConnection(),await this.databaseConnection}async disconnect(){this.queryRunner=void 0;return(await this.databaseConnection).close().then((()=>{this.databaseConnection=void 0}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new CapacitorQueryRunner(this)),this.queryRunner}async createDatabaseConnection(){const e=this.options.mode||"no-encryption",t="no-encryption"!==e,n=void 0===this.options.version?1:this.options.version,a=await this.sqlite.createConnection(this.options.database,t,e,n);return await a.open(),await a.query("PRAGMA foreign_keys = ON"),this.options.journalMode&&-1!==["DELETE","TRUNCATE","PERSIST","MEMORY","WAL","OFF"].indexOf(this.options.journalMode)&&await a.query(`PRAGMA journal_mode = ${this.options.journalMode}`),a}loadDependencies(){if(this.sqlite=this.driver,!this.driver)throw new i.zm("Capacitor","@capacitor-community/sqlite")}}class SpannerQueryRunner extends BaseQueryRunner{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.mode=t,this.broadcaster=new Broadcaster(this)}async connect(){if(this.session)return Promise.resolve(this.session);const[e]=await this.driver.instanceDatabase.createSession({});return this.session=e,this.sessionTransaction=await e.transaction(),this.session}async release(){return this.isReleased=!0,this.session&&await this.session.delete(),this.session=void 0,Promise.resolve()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}await this.connect(),await this.sessionTransaction.begin(),this.connection.logger.logQuery("START TRANSACTION"),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive||!this.sessionTransaction)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionCommit"),await this.sessionTransaction.commit(),this.connection.logger.logQuery("COMMIT"),this.isTransactionActive=!1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive||!this.sessionTransaction)throw new Y.W;await this.broadcaster.broadcast("BeforeTransactionRollback"),await this.sessionTransaction.rollback(),this.connection.logger.logQuery("ROLLBACK"),this.isTransactionActive=!1,await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new H.Y;try{const a=+new Date;let i;await this.connect();const s=e.startsWith("SELECT"),r=s&&!this.isTransactionActive?this.driver.instanceDatabase:this.sessionTransaction;this.isTransactionActive||s||await this.sessionTransaction.begin();try{this.driver.connection.logger.logQuery(e,t,this),i=await r.run({sql:e,params:t?t.reduce(((e,t,n)=>(e["param"+n]=t,e)),{}):void 0,json:!0}),this.isTransactionActive||s||await this.sessionTransaction.commit()}catch(e){try{this.isTransactionActive||s||await this.sessionTransaction.rollback()}catch(e){}throw e}const o=this.driver.options.maxQueryExecutionTime,c=+new Date-a;o&&c>o&&this.driver.connection.logger.logQuerySlow(c,e,t,this);const l=new QueryResult;return l.raw=i,l.records=i?i[0]:[],i&&i[1]&&i[1].rowCountExact&&(l.affected=parseInt(i[1].rowCountExact)),n?l:l.records}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}async updateDDL(e,t){if(this.isReleased)throw new H.Y;this.driver.connection.logger.logQuery(e,t,this);try{const n=+new Date,[a]=await this.driver.instanceDatabase.updateSchema(e);await a.promise();const i=this.driver.options.maxQueryExecutionTime,s=+new Date-n;i&&s>i&&this.driver.connection.logger.logQuerySlow(s,e,t,this)}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}async stream(e,t,n,a){if(this.isReleased)throw new H.Y;try{this.driver.connection.logger.logQuery(e,t,this);const i={sql:e,params:t?t.reduce(((e,t,n)=>(e["param"+n]=t,e)),{}):void 0,json:!0},s=this.driver.instanceDatabase.runStream(i);return n&&s.on("end",n),a&&s.on("error",a),s}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new J.O(e,t,n)}}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){throw new i.K_("Check database queries are not supported by Spanner driver.")}async getCurrentDatabase(){throw new i.K_("Check database queries are not supported by Spanner driver.")}async hasSchema(e){return!!(await this.query(`SELECT * FROM "information_schema"."schemata" WHERE "schema_name" = '${e}'`)).length}async getCurrentSchema(){throw new i.K_("Check schema queries are not supported by Spanner driver.")}async hasTable(e){const t=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_TYPE\` = 'BASE TABLE' AND \`TABLE_NAME\` = '${e instanceof Table?e.name:e}'`;return!!(await this.query(t)).length}async hasColumn(e,t){const n=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_NAME\` = '${e instanceof Table?e.name:e}' AND \`COLUMN_NAME\` = '${t}'`;return!!(await this.query(n)).length}async createDatabase(e,t){if(t){if(await this.hasDatabase(e))return Promise.resolve()}const n=`CREATE DATABASE "${e}"`,a=`DROP DATABASE "${e}"`;await this.executeQueries(new Query(n),new Query(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS "${e}"`:`DROP DATABASE "${e}"`,a=`CREATE DATABASE "${e}"`;await this.executeQueries(new Query(n),new Query(a))}async createSchema(e,t){return Promise.resolve()}async dropSchema(e,t,n){return Promise.resolve()}async createTable(e,t=!1,n=!0,a=!0){if(t){if(await this.hasTable(e))return Promise.resolve()}const i=[],s=[];i.push(this.createTableSql(e,n)),s.push(this.dropTableSql(e)),n&&e.foreignKeys.forEach((t=>s.push(this.dropForeignKeySql(e,t)))),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),s.push(this.dropIndexSql(e,t))}));const r=e.columns.filter((e=>e.generatedType&&e.asExpression));for(const t of r){const n=this.insertTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:e.name,type:z.GENERATED_COLUMN,name:t.name});i.push(n),s.push(a)}await this.executeQueries(i,s)}async dropTable(e,t,n=!0,a=!0){if(t){if(!await this.hasTable(e))return Promise.resolve()}const i=n,s=this.getTablePath(e),r=await this.getCachedTable(s),o=[],c=[];a&&r.indices.forEach((e=>{o.push(this.dropIndexSql(r,e)),c.push(this.createIndexSql(r,e))})),n&&r.foreignKeys.forEach((e=>o.push(this.dropForeignKeySql(r,e)))),o.push(this.dropTableSql(r)),c.push(this.createTableSql(r,i));const l=r.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of l){const t=this.deleteTypeormMetadataSql({table:r.name,type:z.GENERATED_COLUMN,name:e.name}),n=this.insertTypeormMetadataSql({table:r.name,type:z.GENERATED_COLUMN,name:e.name,value:e.asExpression});o.push(t),c.push(n)}await this.executeQueries(o,c)}async createView(e){const t=[],n=[];t.push(this.createViewSql(e)),t.push(await this.insertViewDefinitionSql(e)),n.push(this.dropViewSql(e)),n.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(t,n)}async dropView(e){const t=e instanceof View?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){throw new i.K_("Rename table queries are not supported by Spanner driver.")}async addColumn(e,t){const n=e instanceof Table?e:await this.getCachedTable(e),a=n.clone(),i=[],s=[];i.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(t)}`)),s.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN ${this.driver.escape(t.name)}`));const r=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(r)i.push(this.createIndexSql(n,r)),s.push(this.dropIndexSql(n,r));else if(t.isUnique){const e=new TableIndex({name:this.connection.namingStrategy.indexName(n,[t.name]),columnNames:[t.name],isUnique:!0});a.indices.push(e),a.uniques.push(new TableUnique({name:e.name,columnNames:e.columnNames})),i.push(this.createIndexSql(n,e)),s.push(this.dropIndexSql(n,e))}if(t.generatedType&&t.asExpression){const e=this.insertTypeormMetadataSql({table:n.name,type:z.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:n.name,type:z.GENERATED_COLUMN,name:t.name});i.push(e),s.push(a)}await this.executeQueries(i,s),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=e instanceof Table?e:await this.getCachedTable(e),s=t instanceof TableColumn?t:a.columns.find((e=>e.name===t));if(!s)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);let r;return n instanceof TableColumn?r=n:(r=s.clone(),r.name=n),this.changeColumn(a,s,r)}async changeColumn(e,t,n){const a=e instanceof Table?e:await this.getCachedTable(e);let s=a.clone();const r=[],o=[],c=t instanceof TableColumn?t:a.columns.find((e=>e.name===t));if(!c)throw new i.K_(`Column "${t}" was not found in the "${a.name}" table.`);if(c.name!==n.name||c.type!==n.type||c.length!==n.length||c.isArray!==n.isArray||c.generatedType!==n.generatedType||c.asExpression!==n.asExpression)await this.dropColumn(a,c),await this.addColumn(a,n),s=a.clone();else if(n.precision===c.precision&&n.scale===c.scale||(r.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(c)}`))),c.isNullable!==n.isNullable&&(n.isNullable?(r.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" DROP NOT NULL`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" SET NOT NULL`))):(r.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" SET NOT NULL`)),o.push(new Query(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" DROP NOT NULL`)))),n.isUnique!==c.isUnique)if(!0===n.isUnique){const e=new TableIndex({name:this.connection.namingStrategy.indexName(a,[n.name]),columnNames:[n.name],isUnique:!0});s.indices.push(e),s.uniques.push(new TableUnique({name:e.name,columnNames:e.columnNames})),r.push(this.createIndexSql(a,e)),o.push(this.dropIndexSql(a,e))}else{const e=s.indices.find((e=>1===e.columnNames.length&&!0===e.isUnique&&!!e.columnNames.find((e=>e===n.name))));s.indices.splice(s.indices.indexOf(e),1);const t=s.uniques.find((t=>t.name===e.name));s.uniques.splice(s.uniques.indexOf(t),1),r.push(this.dropIndexSql(a,e)),o.push(this.createIndexSql(a,e))}await this.executeQueries(r,o),this.replaceCachedTable(a,s)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=e instanceof Table?e:await this.getCachedTable(e),a=t instanceof TableColumn?t:n.findColumnByName(t);if(!a)throw new i.K_(`Column "${t}" was not found in table "${n.name}"`);const s=n.clone(),r=[],o=[],c=s.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));c&&(s.indices.splice(s.indices.indexOf(c),1),r.push(this.dropIndexSql(n,c)),o.push(this.createIndexSql(n,c)));const l=s.checks.find((e=>!!e.columnNames&&1===e.columnNames.length&&e.columnNames[0]===a.name));if(l&&(s.checks.splice(s.checks.indexOf(l),1),r.push(this.dropCheckConstraintSql(n,l)),o.push(this.createCheckConstraintSql(n,l))),r.push(new Query(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN ${this.driver.escape(a.name)}`)),o.push(new Query(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(a)}`)),a.generatedType&&a.asExpression){const e=this.deleteTypeormMetadataSql({table:n.name,type:z.GENERATED_COLUMN,name:a.name}),t=this.insertTypeormMetadataSql({table:n.name,type:z.GENERATED_COLUMN,name:a.name,value:a.asExpression});r.push(e),o.push(t)}await this.executeQueries(r,o),s.removeColumn(a),this.replaceCachedTable(n,s)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async updatePrimaryKeys(e,t){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async dropPrimaryKey(e){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async createUniqueConstraint(e,t){throw new i.K_("Spanner does not support unique constraints. Use unique index instead.")}async createUniqueConstraints(e,t){throw new i.K_("Spanner does not support unique constraints. Use unique index instead.")}async dropUniqueConstraint(e,t){throw new i.K_("Spanner does not support unique constraints. Use unique index instead.")}async dropUniqueConstraints(e,t){throw new i.K_("Spanner does not support unique constraints. Use unique index instead.")}async createCheckConstraint(e,t){const n=e instanceof Table?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.checkConstraintName(n,t.expression));const a=this.createCheckConstraintSql(n,t),i=this.dropCheckConstraintSql(n,t);await this.executeQueries(a,i),n.addCheckConstraint(t)}async createCheckConstraints(e,t){const n=t.map((t=>this.createCheckConstraint(e,t)));await Promise.all(n)}async dropCheckConstraint(e,t){const n=e instanceof Table?e:await this.getCachedTable(e),a=t instanceof TableCheck?t:n.checks.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied check constraint was not found in table ${n.name}`);const s=this.dropCheckConstraintSql(n,a),r=this.createCheckConstraintSql(n,a);await this.executeQueries(s,r),n.removeCheckConstraint(a)}async dropCheckConstraints(e,t){const n=t.map((t=>this.dropCheckConstraint(e,t)));await Promise.all(n)}async createExclusionConstraint(e,t){throw new i.K_("Spanner does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new i.K_("Spanner does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new i.K_("Spanner does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new i.K_("Spanner does not support exclusion constraints.")}async createForeignKey(e,t){const n=e instanceof Table?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){for(const n of t)await this.createForeignKey(e,n)}async dropForeignKey(e,t){const n=e instanceof Table?e:await this.getCachedTable(e),a=t instanceof TableForeignKey?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied foreign key was not found in table ${n.name}`);const s=this.dropForeignKeySql(n,a),r=this.createForeignKeySql(n,a);await this.executeQueries(s,r),n.removeForeignKey(a)}async dropForeignKeys(e,t){for(const n of t)await this.dropForeignKey(e,n)}async createIndex(e,t){const n=e instanceof Table?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.indexName(n,t.columnNames,t.where));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){for(const n of t)await this.createIndex(e,n)}async dropIndex(e,t){const n=e instanceof Table?e:await this.getCachedTable(e),a=t instanceof TableIndex?t:n.indices.find((e=>e.name===t));if(!a)throw new i.K_(`Supplied index ${t} was not found in table ${n.name}`);const s=this.dropIndexSql(n,a),r=this.createIndexSql(n,a);await this.executeQueries(s,r),n.removeIndex(a)}async dropIndices(e,t){for(const n of t)await this.dropIndex(e,n)}async clearTable(e){await this.query(`DELETE FROM ${this.escapePath(e)} WHERE true`)}async clearDatabase(){const e=await this.query("SELECT concat('DROP INDEX `', INDEX_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`INDEXES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `INDEX_TYPE` = 'INDEX' AND `SPANNER_IS_MANAGED` = false"),t=await this.query("SELECT concat('ALTER TABLE `', TABLE_NAME, '`', ' DROP CONSTRAINT `', CONSTRAINT_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`TABLE_CONSTRAINTS` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `CONSTRAINT_TYPE` = 'FOREIGN KEY'"),n=await this.query("SELECT concat('DROP TABLE `', TABLE_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `TABLE_TYPE` = 'BASE TABLE'");if(!e.length&&!t.length&&!n.length)return;const a=this.isTransactionActive;a||await this.startTransaction();try{for(let t of e)await this.updateDDL(t.query);for(let e of t)await this.updateDDL(e.query);for(let e of n)await this.updateDDL(e.query);await this.commitTransaction()}catch(e){try{a||await this.rollbackTransaction()}catch(e){}throw e}}async executeMemoryUpSql(){for(const{query:e,parameters:t}of this.sqlInMemory.upQueries)this.isDMLQuery(e)?await this.query(e,t):await this.updateDDL(e,t)}async executeMemoryDownSql(){for(const{query:e,parameters:t}of this.sqlInMemory.downQueries.reverse())this.isDMLQuery(e)?await this.query(e,t):await this.updateDDL(e,t)}async loadViews(e){return Promise.resolve([])}async loadTables(e){if(e&&0===e.length)return[];const t=[];if(e&&e.length){const n=`SELECT \`TABLE_NAME\` FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_TYPE\` = 'BASE TABLE' AND \`TABLE_NAME\` IN (${e.map((e=>`'${e}'`)).join(", ")})`;t.push(...await this.query(n))}else{const e="SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `TABLE_TYPE` = 'BASE TABLE'";t.push(...await this.query(e))}if(!t.length)return[];const n=t.map((e=>`'${e.TABLE_NAME}'`)).join(", "),a=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_NAME\` IN (${n})`,i=`SELECT \`KCU\`.\`TABLE_NAME\`, \`KCU\`.\`COLUMN_NAME\` FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` \`KCU\` ON \`KCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'PRIMARY KEY' AND \`TC\`.\`TABLE_NAME\` IN (${n})`,s=`SELECT \`I\`.\`TABLE_NAME\`, \`I\`.\`INDEX_NAME\`, \`I\`.\`IS_UNIQUE\`, \`I\`.\`IS_NULL_FILTERED\`, \`IC\`.\`COLUMN_NAME\` FROM \`INFORMATION_SCHEMA\`.\`INDEXES\` \`I\` INNER JOIN \`INFORMATION_SCHEMA\`.\`INDEX_COLUMNS\` \`IC\` ON \`IC\`.\`INDEX_NAME\` = \`I\`.\`INDEX_NAME\` AND \`IC\`.\`TABLE_NAME\` = \`I\`.\`TABLE_NAME\` WHERE \`I\`.\`TABLE_CATALOG\` = '' AND \`I\`.\`TABLE_SCHEMA\` = '' AND \`I\`.\`TABLE_NAME\` IN (${n}) AND \`I\`.\`INDEX_TYPE\` = 'INDEX' AND \`I\`.\`SPANNER_IS_MANAGED\` = false`,r=`SELECT \`TC\`.\`TABLE_NAME\`, \`TC\`.\`CONSTRAINT_NAME\`, \`CC\`.\`CHECK_CLAUSE\`, \`CCU\`.\`COLUMN_NAME\`FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_COLUMN_USAGE\` \`CCU\` ON \`CCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CHECK_CONSTRAINTS\` \`CC\` ON \`CC\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'CHECK' AND \`TC\`.\`TABLE_NAME\` IN (${n}) AND \`TC\`.\`CONSTRAINT_NAME\` NOT LIKE 'CK_IS_NOT_NULL%'`,o=`SELECT \`TC\`.\`TABLE_NAME\`, \`TC\`.\`CONSTRAINT_NAME\`, \`KCU\`.\`COLUMN_NAME\`, \`CTU\`.\`TABLE_NAME\` AS \`REFERENCED_TABLE_NAME\`, \`CCU\`.\`COLUMN_NAME\` AS \`REFERENCED_COLUMN_NAME\`, \`RC\`.\`UPDATE_RULE\`, \`RC\`.\`DELETE_RULE\` FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` \`KCU\` ON \`KCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_TABLE_USAGE\` \`CTU\` ON \`CTU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`REFERENTIAL_CONSTRAINTS\` \`RC\` ON \`RC\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_COLUMN_USAGE\` \`CCU\` ON \`CCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'FOREIGN KEY' AND \`TC\`.\`TABLE_NAME\` IN (${n})`,[c,l,u,h,d]=await Promise.all([this.query(a),this.query(i),this.query(s),this.query(r),this.query(o)]);return Promise.all(t.map((async e=>{const t=new Table;t.name=this.driver.buildTableName(e.TABLE_NAME),t.columns=await Promise.all(c.filter((t=>t.TABLE_NAME===e.TABLE_NAME)).map((async n=>{const a=u.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.COLUMN_NAME===n.COLUMN_NAME&&!0===t.IS_UNIQUE)),i=this.connection.entityMetadatas.find((e=>this.getTablePath(t)===this.getTablePath(e))),s=a.length>0&&i&&i.indices.some((e=>a.some((t=>e.name===t.INDEX_NAME&&!1===e.synchronize)))),r=a.every((e=>u.some((t=>t.INDEX_NAME===e.INDEX_NAME&&t.COLUMN_NAME!==n.COLUMN_NAME)))),o=new TableColumn;o.name=n.COLUMN_NAME;let c=n.SPANNER_TYPE.toLowerCase();if(-1!==c.indexOf("array")&&(o.isArray=!0,c=c.substring(c.indexOf("<")+1,c.indexOf(">"))),-1!==c.indexOf("(")?o.type=c.substring(0,c.indexOf("(")):o.type=c,-1!==this.driver.withLengthColumnTypes.indexOf(o.type)&&(o.length=c.substring(c.indexOf("(")+1,c.indexOf(")"))),"ALWAYS"===n.IS_GENERATED){o.asExpression=n.GENERATION_EXPRESSION,o.generatedType="STORED";const t=await this.selectTypeormMetadataSql({table:e.TABLE_NAME,type:z.GENERATED_COLUMN,name:o.name}),a=await this.query(t.query,t.parameters);a[0]&&a[0].value?o.asExpression=a[0].value:o.asExpression=""}return o.isUnique=a.length>0&&!s&&!r,o.isNullable="YES"===n.IS_NULLABLE,o.isPrimary=l.some((e=>e.TABLE_NAME===n.TABLE_NAME&&e.COLUMN_NAME===n.COLUMN_NAME)),o})));const n=d.filter((t=>t.TABLE_NAME===e.TABLE_NAME));t.foreignKeys=j.s.uniq(n,(e=>e.CONSTRAINT_NAME)).map((e=>{const t=n.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME));return new TableForeignKey({name:e.CONSTRAINT_NAME,columnNames:j.s.uniq(t.map((e=>e.COLUMN_NAME))),referencedDatabase:e.REFERENCED_TABLE_SCHEMA,referencedTableName:e.REFERENCED_TABLE_NAME,referencedColumnNames:j.s.uniq(t.map((e=>e.REFERENCED_COLUMN_NAME))),onDelete:e.DELETE_RULE,onUpdate:e.UPDATE_RULE})}));const a=u.filter((t=>t.TABLE_NAME===e.TABLE_NAME));t.indices=j.s.uniq(a,(e=>e.INDEX_NAME)).map((e=>{const n=a.filter((t=>t.INDEX_NAME===e.INDEX_NAME));return new TableIndex({table:t,name:e.INDEX_NAME,columnNames:n.map((e=>e.COLUMN_NAME)),isUnique:e.IS_UNIQUE,isNullFiltered:e.IS_NULL_FILTERED})}));const i=h.filter((t=>t.TABLE_NAME===e.TABLE_NAME));return t.checks=j.s.uniq(i,(e=>e.CONSTRAINT_NAME)).map((e=>{const t=i.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME));return new TableCheck({name:e.CONSTRAINT_NAME,columnNames:t.map((e=>e.COLUMN_NAME)),expression:e.CHECK_CLAUSE})})),t})))}createTableSql(e,t){const n=e.columns.map((e=>this.buildCreateColumnSql(e))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;if(e.columns.filter((e=>e.isUnique)).forEach((t=>{const n=e.indices.some((e=>1===e.columnNames.length&&!!e.isUnique&&-1!==e.columnNames.indexOf(t.name))),a=e.uniques.some((e=>1===e.columnNames.length&&-1!==e.columnNames.indexOf(t.name)));n||a||e.indices.push(new TableIndex({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name],isUnique:!0}))})),e.uniques.length>0&&e.uniques.forEach((t=>{e.indices.some((e=>e.name===t.name))||e.indices.push(new TableIndex({name:t.name,columnNames:t.columnNames,isUnique:!0}))})),e.checks.length>0){a+=`, ${e.checks.map((t=>`CONSTRAINT \`${t.name?t.name:this.connection.namingStrategy.checkConstraintName(e,t.expression)}\` CHECK (${t.expression})`)).join(", ")}`}if(e.foreignKeys.length>0&&t){a+=`, ${e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(", ");return`CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`})).join(", ")}`}a+=")";const i=e.columns.filter((e=>e.isPrimary));if(i.length>0){a+=` PRIMARY KEY (${i.map((e=>this.driver.escape(e.name))).join(", ")})`}return new Query(a)}dropTableSql(e){return new Query(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){const t=e.materialized?"MATERIALIZED ":"",n=this.escapePath(e),a="string"==typeof e.expression?e.expression:e.expression(this.connection).getQuery();return new Query(`CREATE ${t}VIEW ${n} SQL SECURITY INVOKER AS ${a}`)}async insertViewDefinitionSql(e){let{schema:t,tableName:n}=this.driver.parseTableName(e);const a=e.materialized?z.MATERIALIZED_VIEW:z.VIEW,i="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:a,schema:t,name:n,value:i})}dropViewSql(e){const t=e.materialized?"MATERIALIZED ":"";return new Query(`DROP ${t}VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){let{schema:t,tableName:n}=this.driver.parseTableName(e);const a=e.materialized?z.MATERIALIZED_VIEW:z.VIEW;return this.deleteTypeormMetadataSql({type:a,schema:t,name:n})}createIndexSql(e,t){const n=t.columnNames.map((e=>this.driver.escape(e))).join(", ");let a="";return t.isUnique&&(a+="UNIQUE "),t.isNullFiltered&&(a+="NULL_FILTERED "),new Query(`CREATE ${a}INDEX \`${t.name}\` ON ${this.escapePath(e)} (${n})`)}dropIndexSql(e,t){let n=t instanceof TableIndex?t.name:t;return new Query(`DROP INDEX \`${n}\``)}createCheckConstraintSql(e,t){return new Query(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` CHECK (${t.expression})`)}dropCheckConstraintSql(e,t){const n=t instanceof TableCheck?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT \`${n}\``)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>this.driver.escape(e))).join(", "),a=t.referencedColumnNames.map((e=>this.driver.escape(e))).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return new Query(i)}dropForeignKeySql(e,t){const n=t instanceof TableForeignKey?t.name:t;return new Query(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT \`${n}\``)}escapePath(e){const{tableName:t}=this.driver.parseTableName(e);return`\`${t}\``}buildCreateColumnSql(e){let t=`${this.driver.escape(e.name)} ${this.connection.driver.createFullType(e)}`;return"STORED"===e.generatedType&&e.asExpression?t+=` AS (${e.asExpression}) STORED`:e.isNullable||(t+=" NOT NULL"),t}async executeQueries(e,t){if(e instanceof Query&&(e=[e]),t instanceof Query&&(t=[t]),this.sqlInMemory.upQueries.push(...e),this.sqlInMemory.downQueries.push(...t),!0===this.sqlMemoryMode)return Promise.resolve();for(const{query:t,parameters:n}of e)this.isDMLQuery(t)?await this.query(t,n):await this.updateDDL(t,n)}isDMLQuery(e){return e.startsWith("INSERT")||e.startsWith("UPDATE")||e.startsWith("DELETE")}}class SpannerDriver{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="none",this.supportedDataTypes=["bool","int64","float64","numeric","string","json","bytes","date","timestamp","array"],this.supportedUpsertType=void 0,this.spatialTypes=[],this.withLengthColumnTypes=["string","bytes"],this.withWidthColumnTypes=[],this.withPrecisionColumnTypes=[],this.withScaleColumnTypes=[],this.mappedDataTypes={createDate:"timestamp",createDateDefault:"",updateDate:"timestamp",updateDateDefault:"",deleteDate:"timestamp",deleteDateNullable:!0,version:"int64",treeLevel:"int64",migrationId:"int64",migrationName:"string",migrationTimestamp:"int64",cacheId:"string",cacheIdentifier:"string",cacheTime:"int64",cacheDuration:"int64",cacheQuery:"string",cacheResult:"string",metadataType:"string",metadataDatabase:"string",metadataSchema:"string",metadataTable:"string",metadataName:"string",metadataValue:"string"},this.dataTypeDefaults={},this.maxAliasLength=63,this.cteCapabilities={enabled:!0},this._isReturningSqlSupported={delete:!1,insert:!1,update:!1},this.connection=e,this.options=e.options,this.isReplicated=!!this.options.replication,this.loadDependencies()}async connect(){this.instance=this.spanner.instance(this.options.instanceId),this.instanceDatabase=this.instance.database(this.options.databaseId)}afterConnect(){return Promise.resolve()}async disconnect(){this.instanceDatabase.close()}createSchemaBuilder(){return new RdbmsSchemaBuilder(this.connection)}createQueryRunner(e){return new SpannerQueryRunner(this,e)}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>n[e]));return t&&Object.keys(t).length?[e=(e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let s=t[i];return null===s?e:n?s.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):s instanceof Function?s():(a.push(s),this.createParameter(i,a.length-1))}))).replace(/([ ]+)?=([ ]+)?:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,a,i,s)=>{if(!t.hasOwnProperty(s))return e;return null===t[s]?" IS NULL":e})),a]:[e,a]}escape(e){return`\`${e}\``}buildTableName(e,t,n){let a=[e];return n&&a.unshift(n),a.join(".")}parseTableName(e){const t=this.database,n=void 0;if(e instanceof Table||e instanceof View){const a=this.parseTableName(e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(e instanceof TableForeignKey){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(e instanceof EntityMetadata)return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return{database:(a.length>1?a[0]:void 0)||t,schema:n,tableName:a.length>1?a[1]:a[0]}}preparePersistentValue(e,t){if(t.transformer&&(e=B.A.transformTo(t.transformer,e)),null==e)return e;if("numeric"===t.type){return(this.options.driver||PlatformTools.load("spanner")).Spanner.numeric(e)}return"date"===t.type?DateUtils.mixedDateToDateString(e):"json"===t.type?e:"timestamp"===t.type||t.type===Date?DateUtils.mixedDateToDate(e):e}prepareHydratedValue(e,t){return null==e?t.transformer?B.A.transformFrom(t.transformer,e):e:(t.type===Boolean||"bool"===t.type?e=!!e:"timestamp"===t.type||t.type===Date?e=new Date(e):"numeric"===t.type?e=e.value:"date"===t.type?e=DateUtils.mixedDateToDateString(e):"json"===t.type&&(e="string"==typeof e?JSON.parse(e):e),t.transformer&&(e=B.A.transformFrom(t.transformer,e)),e)}normalizeType(e){return e.type===Number?"int64":e.type===String||"uuid"===e.type?"string":e.type===Date?"timestamp":e.type===Buffer?"bytes":e.type===Boolean?"bool":e.type||""}normalizeDefault(e){return""===e.default?`"${e.default}"`:`${e.default}`}normalizeIsUnique(e){return e.entityMetadata.indices.some((t=>t.isUnique&&1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){if(e.length)return e.length.toString();if("uuid"===e.generationStrategy)return"36";switch(e.type){case String:case"string":case"bytes":return"max";default:return""}}createFullType(e){let t=e.type;return this.getColumnLength(e)?t+=`(${this.getColumnLength(e)})`:e.width?t+=`(${e.width})`:null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+=`(${e.precision},${e.scale})`:null!==e.precision&&void 0!==e.precision&&(t+=`(${e.precision})`),e.isArray&&(t=`array<${t}>`),t}obtainMasterConnection(){return this.instanceDatabase}obtainSlaveConnection(){return this.instanceDatabase}createGeneratedMap(e,t,n){if(!t)return;if(void 0===t.insertId)return Object.keys(t).reduce(((n,a)=>{const i=e.findColumnWithDatabaseName(a);return i&&j.s.mergeDeep(n,i.createValueMap(t[a])),n}),{});const a=e.generatedColumns.reduce(((e,a)=>{let i;return"increment"===a.generationStrategy&&t.insertId&&(i=t.insertId+n),j.s.mergeDeep(e,a.createValueMap(i))}),{});return Object.keys(a).length>0?a:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));if(!n)return!1;return n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==this.getColumnLength(t)||n.asExpression!==t.asExpression||n.generatedType!==t.generatedType||n.isPrimary!==t.isPrimary||!this.compareNullableValues(t,n)||n.isUnique!==this.normalizeIsUnique(t)}))}isReturningSqlSupported(e){return this._isReturningSqlSupported[e]}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!1}createParameter(e,t){return"@param"+t}loadDependencies(){try{const e=this.options.driver||PlatformTools.load("spanner");this.spanner=new e.Spanner({projectId:this.options.projectId})}catch(e){throw new Z.z("Spanner","@google-cloud/spanner")}}compareNullableValues(e,t){return!!e.generatedType||e.isNullable===t.isNullable}compareDefaultValues(e,t){return"string"==typeof e&&"string"==typeof t&&(e=e.replace(/^'+|'+$/g,""),t=t.replace(/^'+|'+$/g,"")),e===t}normalizeDatetimeFunction(e){if(!e)return e;if(-1!==e.toUpperCase().indexOf("CURRENT_TIMESTAMP")||-1!==e.toUpperCase().indexOf("NOW")){const t=e.match(/\(\d+\)/);return t?`CURRENT_TIMESTAMP${t[0]}`:"CURRENT_TIMESTAMP"}return e}escapeComment(e){return e?e=e.replace(/\u0000/g,""):e}}class DriverFactory{create(e){const{type:t}=e.options;switch(t){case"mysql":case"mariadb":return new MysqlDriver(e);case"postgres":return new PostgresDriver(e);case"cockroachdb":return new CockroachDriver(e);case"sap":return new SapDriver(e);case"sqlite":return new SqliteDriver(e);case"better-sqlite3":return new BetterSqlite3Driver(e);case"cordova":return new CordovaDriver(e);case"nativescript":return new NativescriptDriver(e);case"react-native":return new ReactNativeDriver(e);case"sqljs":return new SqljsDriver(e);case"oracle":return new OracleDriver(e);case"mssql":return new SqlServerDriver(e);case"mongodb":return new MongoDriver(e);case"expo":return new ExpoDriver(e);case"aurora-mysql":return new AuroraMysqlDriver_AuroraMysqlDriver(e);case"aurora-postgres":return new AuroraPostgresDriver_AuroraPostgresDriver(e);case"capacitor":return new CapacitorDriver(e);case"spanner":return new SpannerDriver(e);default:throw new G.R(t,["aurora-mysql","aurora-postgres","better-sqlite3","capacitor","cockroachdb","cordova","expo","mariadb","mongodb","mssql","mysql","nativescript","oracle","postgres","react-native","sap","sqlite","sqljs","spanner"])}}}const te=new class{constructor(){this.instances=[]}get(e){let t=this.instances.find((t=>t.type===e));return t||(t={type:e,object:new e},this.instances.push(t)),t.object}};let ne,ae;function ie(e){if(ne)try{const t=ne.get(e);if(t)return t;if(!ae||!ae.fallback)return t}catch(e){if(!ae||!ae.fallbackOnErrors)throw e}return te.get(e)}class ColumnMetadata{constructor(e){this["@instanceof"]=Symbol.for("ColumnMetadata"),this.length="",this.isPrimary=!1,this.isGenerated=!1,this.isNullable=!1,this.isSelect=!0,this.isInsert=!0,this.isUpdate=!0,this.zerofill=!1,this.unsigned=!1,this.isArray=!1,this.isVirtual=!1,this.isDiscriminator=!1,this.isTreeLevel=!1,this.isCreateDate=!1,this.isUpdateDate=!1,this.isDeleteDate=!1,this.isVersion=!1,this.isObjectId=!1,this.isNestedSetLeft=!1,this.isNestedSetRight=!1,this.isMaterializedPath=!1,this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,this.referencedColumn=e.referencedColumn,e.args.target&&(this.target=e.args.target),e.args.propertyName&&(this.propertyName=e.args.propertyName),e.args.options.name&&(this.givenDatabaseName=e.args.options.name),e.args.options.type&&(this.type=e.args.options.type),e.args.options.length&&(this.length=e.args.options.length?e.args.options.length.toString():""),e.args.options.width&&(this.width=e.args.options.width),e.args.options.charset&&(this.charset=e.args.options.charset),e.args.options.collation&&(this.collation=e.args.options.collation),e.args.options.primary&&(this.isPrimary=e.args.options.primary),null===e.args.options.default&&(this.isNullable=!0),void 0!==e.args.options.nullable&&(this.isNullable=e.args.options.nullable),void 0!==e.args.options.select&&(this.isSelect=e.args.options.select),void 0!==e.args.options.insert&&(this.isInsert=e.args.options.insert),void 0!==e.args.options.update&&(this.isUpdate=e.args.options.update),void 0!==e.args.options.readonly&&(this.isUpdate=!e.args.options.readonly),e.args.options.comment&&(this.comment=e.args.options.comment),void 0!==e.args.options.default&&(this.default=e.args.options.default),e.args.options.onUpdate&&(this.onUpdate=e.args.options.onUpdate),e.args.options.generatedIdentity&&(this.generatedIdentity=e.args.options.generatedIdentity),null!==e.args.options.scale&&void 0!==e.args.options.scale&&(this.scale=e.args.options.scale),e.args.options.zerofill&&(this.zerofill=e.args.options.zerofill,this.unsigned=!0),e.args.options.unsigned&&(this.unsigned=e.args.options.unsigned),null!==e.args.options.precision&&(this.precision=e.args.options.precision),e.args.options.enum&&(E.g.isObject(e.args.options.enum)&&!Array.isArray(e.args.options.enum)?this.enum=Object.keys(e.args.options.enum).filter((t=>isNaN(+t)&&"function"!=typeof e.args.options.enum[t])).map((t=>e.args.options.enum[t])):this.enum=e.args.options.enum),e.args.options.enumName&&(this.enumName=e.args.options.enumName),e.args.options.primaryKeyConstraintName&&(this.primaryKeyConstraintName=e.args.options.primaryKeyConstraintName),e.args.options.foreignKeyConstraintName&&(this.foreignKeyConstraintName=e.args.options.foreignKeyConstraintName),e.args.options.asExpression&&(this.asExpression=e.args.options.asExpression,this.generatedType=e.args.options.generatedType?e.args.options.generatedType:"VIRTUAL"),e.args.options.hstoreType&&(this.hstoreType=e.args.options.hstoreType),e.args.options.array&&(this.isArray=e.args.options.array),e.args.mode&&(this.isVirtual="virtual"===e.args.mode,this.isTreeLevel="treeLevel"===e.args.mode,this.isCreateDate="createDate"===e.args.mode,this.isUpdateDate="updateDate"===e.args.mode,this.isDeleteDate="deleteDate"===e.args.mode,this.isVersion="version"===e.args.mode,this.isObjectId="objectId"===e.args.mode),e.args.options.transformer&&(this.transformer=e.args.options.transformer),e.args.options.spatialFeatureType&&(this.spatialFeatureType=e.args.options.spatialFeatureType),void 0!==e.args.options.srid&&(this.srid=e.args.options.srid),this.isTreeLevel&&(this.type=e.connection.driver.mappedDataTypes.treeLevel),this.isCreateDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.createDate),this.default||(this.default=()=>e.connection.driver.mappedDataTypes.createDateDefault),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.createDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.createDatePrecision)),this.isUpdateDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.updateDate),this.default||(this.default=()=>e.connection.driver.mappedDataTypes.updateDateDefault),this.onUpdate||(this.onUpdate=e.connection.driver.mappedDataTypes.updateDateDefault),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.updateDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.updateDatePrecision)),this.isDeleteDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.deleteDate),this.isNullable||(this.isNullable=e.connection.driver.mappedDataTypes.deleteDateNullable),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.deleteDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.deleteDatePrecision)),this.isVersion&&(this.type=e.connection.driver.mappedDataTypes.version),e.closureType&&(this.closureType=e.closureType),e.nestedSetLeft&&(this.isNestedSetLeft=e.nestedSetLeft),e.nestedSetRight&&(this.isNestedSetRight=e.nestedSetRight),e.materializedPath&&(this.isMaterializedPath=e.materializedPath)}createValueMap(e,t=!1){if(this.embeddedMetadata){const n=[...this.embeddedMetadata.parentPropertyNames],a=(n,i)=>{const s=n.shift();return s?(i[s]={},a(n,i[s]),i):("increment"!==this.generationStrategy&&"rowid"!==this.generationStrategy||"bigint"!==this.type||null===e||(e=String(e)),i[t?this.databaseName:this.propertyName]=e,i)};return a(n,{})}return"increment"!==this.generationStrategy&&"rowid"!==this.generationStrategy||"bigint"!==this.type||null===e||(e=String(e)),{[t?this.databaseName:this.propertyName]:e}}getEntityValueMap(e,t){var n;if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],n=this.embeddedMetadata.isArray,a=(e,t)=>{if(void 0===t)return{};const i=e.shift();if(i){const n=a(e,t[i]);return Object.keys(n).length>0?{[i]:n}:{}}return n&&Array.isArray(t)?t.map((e=>({[this.propertyName]:e[this.propertyName]}))):void 0!==t[this.propertyName]?{[this.propertyName]:t[this.propertyName]}:{}},i=a(t,e);return Object.keys(i).length>0?i:void 0}if(this.relationMetadata&&!(null===(n=Object.getOwnPropertyDescriptor(e,this.relationMetadata.propertyName))||void 0===n?void 0:n.get)&&e[this.relationMetadata.propertyName]&&E.g.isObject(e[this.relationMetadata.propertyName])){const t=this.relationMetadata.joinColumns.reduce(((t,n)=>{const a=n.referencedColumn.getEntityValueMap(e[this.relationMetadata.propertyName]);return void 0===a?t:j.s.mergeDeep(t,a)}),{});return Object.keys(t).length>0?{[this.propertyName]:t}:void 0}return void 0!==e[this.propertyName]?{[this.propertyName]:e[this.propertyName]}:void 0}getEntityValue(e,t=!1){if(null==e)return;let n;if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],a=this.embeddedMetadata.isArray,i=(e,t)=>{const n=e.shift();return n&&t?i(e,t[n]):t},r=i(t,e);if(r)if(this.relationMetadata&&this.referencedColumn){const e=this.relationMetadata.getEntityValue(r);n=e&&E.g.isObject(e)&&!s.a.isFindOperator(e)&&!Buffer.isBuffer(e)?this.referencedColumn.getEntityValue(e):!r[this.propertyName]||!E.g.isObject(r[this.propertyName])||s.a.isFindOperator(r[this.propertyName])||Buffer.isBuffer(r[this.propertyName])||r[this.propertyName]instanceof Date?r[this.propertyName]:this.referencedColumn.getEntityValue(r[this.propertyName])}else n=this.referencedColumn?this.referencedColumn.getEntityValue(r[this.propertyName]):a&&Array.isArray(r)?r.map((e=>e[this.propertyName])):r[this.propertyName]}else if(this.relationMetadata&&this.referencedColumn){const t=this.relationMetadata.getEntityValue(e);n=t&&E.g.isObject(t)&&!s.a.isFindOperator(t)&&"function"!=typeof t&&!Buffer.isBuffer(t)?this.referencedColumn.getEntityValue(t):!e[this.propertyName]||!E.g.isObject(e[this.propertyName])||s.a.isFindOperator(e[this.propertyName])||"function"==typeof e[this.propertyName]||Buffer.isBuffer(e[this.propertyName])||e[this.propertyName]instanceof Date?e[this.propertyName]:this.referencedColumn.getEntityValue(e[this.propertyName])}else n=this.referencedColumn?this.referencedColumn.getEntityValue(e[this.propertyName]):e[this.propertyName];return t&&this.transformer&&(n=B.A.transformTo(this.transformer,n)),n}setEntityValue(e,t){if(this.embeddedMetadata){const n=(e,a)=>{const i=e.shift();return i?(a[i.propertyName]||(a[i.propertyName]=i.create()),n(e,a[i.propertyName]),a):(a[this.propertyName]=t,a)};return n([...this.embeddedMetadata.embeddedMetadataTree],e)}!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.propertyName!==this.propertyName?(this.propertyName in e||(e[this.propertyName]={}),e[this.propertyName][this.referencedColumn.propertyName]=t):e[this.propertyName]=t}compareEntityValue(e,t){const n=this.getEntityValue(e);return E.g.isObject(n)?n.equals(t):n===t}build(e){return this.propertyPath=this.buildPropertyPath(),this.propertyAliasName=this.propertyPath.replace(".","_"),this.databaseName=this.buildDatabaseName(e),this.databasePath=this.buildDatabasePath(),this.databaseNameWithoutPrefixes=e.namingStrategy.columnName(this.propertyName,this.givenDatabaseName,[]),this}buildPropertyPath(){let e="";return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length&&(e=this.embeddedMetadata.parentPropertyNames.join(".")+"."),e+=this.propertyName,!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.propertyName!==this.propertyName&&(e+="."+this.referencedColumn.propertyName),e}buildDatabasePath(){let e="";return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length&&(e=this.embeddedMetadata.parentPropertyNames.join(".")+"."),e+=this.databaseName,!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.databaseName!==this.databaseName&&(e+="."+this.referencedColumn.databaseName),e}buildDatabaseName(e){let t=this.embeddedMetadata?this.embeddedMetadata.parentPrefixes:[];return"mongodb"===e.driver.options.type&&(t=[]),e.namingStrategy.columnName(this.propertyName,this.givenDatabaseName,t)}}class IndexMetadata{constructor(e){this.isUnique=!1,this.isSpatial=!1,this.isFulltext=!1,this.isNullFiltered=!1,this.synchronize=!0,this.columns=[],this.columnNamesWithOrderingMap={},this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,e.columns&&(this.columns=e.columns),e.args&&(this.target=e.args.target,null!==e.args.synchronize&&void 0!==e.args.synchronize&&(this.synchronize=e.args.synchronize),this.isUnique=!!e.args.unique,this.isSpatial=!!e.args.spatial,this.isFulltext=!!e.args.fulltext,this.isNullFiltered=!!e.args.nullFiltered,this.parser=e.args.parser,this.where=e.args.where,this.isSparse=e.args.sparse,this.isBackground=e.args.background,this.expireAfterSeconds=e.args.expireAfterSeconds,this.givenName=e.args.name,this.givenColumnNames=e.args.columns)}build(e){if(!1===this.synchronize)return this.name=this.givenName,this;const t={};if(this.givenColumnNames){let e=[];if(Array.isArray(this.givenColumnNames))e=this.givenColumnNames.map((e=>this.embeddedMetadata?this.embeddedMetadata.propertyPath+"."+e:e.trim())),e.forEach((e=>t[e]=1));else{const n=this.givenColumnNames(this.entityMetadata.propertiesMap);Array.isArray(n)?(e=n.map((e=>String(e))),e.forEach((e=>t[e]=1))):(e=Object.keys(n).map((e=>String(e))),Object.keys(n).forEach((e=>t[e]=n[e])))}this.columns=e.map((e=>{const t=this.entityMetadata.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.entityMetadata.relations.find((t=>t.isWithJoinColumn&&t.propertyName===e));if(n)return n.joinColumns;const a=this.givenName?'"'+this.givenName+'" ':"",s=this.entityMetadata.targetName;throw new i.K_(`Index ${a}contains column that is missing in the entity (${s}): `+e)})).reduce(((e,t)=>e.concat(t)))}return this.columnNamesWithOrderingMap=Object.keys(t).reduce(((e,n)=>{const a=this.entityMetadata.columns.find((e=>e.propertyPath===n));return a&&(e[a.databasePath]=t[n]),e}),{}),this.name=this.givenName?this.givenName:e.indexName(this.entityMetadata.tableName,this.columns.map((e=>e.databaseName)),this.where),this}}class RelationMetadata{constructor(e){this.isTreeParent=!1,this.isTreeChildren=!1,this.isPrimary=!1,this.isLazy=!1,this.isEager=!1,this.persistenceEnabled=!0,this.isCascadeInsert=!1,this.isCascadeUpdate=!1,this.isCascadeRemove=!1,this.isCascadeSoftRemove=!1,this.isCascadeRecover=!1,this.isNullable=!0,this.createForeignKeyConstraints=!0,this.isOwning=!1,this.isOneToOne=!1,this.isOneToOneOwner=!1,this.isWithJoinColumn=!1,this.isOneToOneNotOwner=!1,this.isOneToMany=!1,this.isManyToOne=!1,this.isManyToMany=!1,this.isManyToManyOwner=!1,this.isManyToManyNotOwner=!1,this.foreignKeys=[],this.joinColumns=[],this.inverseJoinColumns=[],this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata;const t=e.args;this.target=t.target,this.propertyName=t.propertyName,this.relationType=t.relationType,t.inverseSideProperty&&(this.givenInverseSidePropertyFactory=t.inverseSideProperty),this.isLazy=t.isLazy||!1,this.isCascadeInsert=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("insert"),this.isCascadeUpdate=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("update"),this.isCascadeRemove=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("remove"),this.isCascadeSoftRemove=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("soft-remove"),this.isCascadeRecover=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("recover"),this.isNullable=!1!==t.options.nullable&&!this.isPrimary,this.onDelete=t.options.onDelete,this.onUpdate=t.options.onUpdate,this.deferrable=t.options.deferrable,this.createForeignKeyConstraints=!1!==t.options.createForeignKeyConstraints,this.isEager=t.options.eager||!1,this.persistenceEnabled=!1!==t.options.persistence,this.orphanedRowAction=t.options.orphanedRowAction||"nullify",this.isTreeParent=t.isTreeParent||!1,this.isTreeChildren=t.isTreeChildren||!1,"function"==typeof t.type?this.type="function"==typeof t.type?t.type():t.type:s.a.isEntitySchema(t.type)?this.type=t.type.options.name:E.g.isObject(t.type)&&"string"==typeof t.type.name?this.type=t.type.name:this.type=t.type,this.isOneToOne="one-to-one"===this.relationType,this.isOneToMany="one-to-many"===this.relationType,this.isManyToOne="many-to-one"===this.relationType,this.isManyToMany="many-to-many"===this.relationType,this.isOneToOneNotOwner=!!this.isOneToOne,this.isManyToManyNotOwner=!!this.isManyToMany}getRelationIdMap(e){const t=(this.isOwning?this.joinColumns:this.inverseRelation.joinColumns).map((e=>e.referencedColumn));return EntityMetadata.getValueMap(e,t)}ensureRelationIdMap(e){if(E.g.isObject(e))return e;const t=(this.isOwning?this.joinColumns:this.inverseRelation.joinColumns).map((e=>e.referencedColumn));if(t.length>1)throw new i.K_("Cannot create relation id map for a single value because relation contains multiple referenced columns.");return t[0].createValueMap(e)}getEntityValue(e,t=!1){if(null!=e){if(this.embeddedMetadata){const n=[...this.embeddedMetadata.parentPropertyNames],a=(e,t)=>{const n=e.shift();return n?t[n]?a(e,t[n]):void 0:t},i=a(n,e);return this.isLazy?void 0!==i["__"+this.propertyName+"__"]?i["__"+this.propertyName+"__"]:!0===t?i[this.propertyName]:void 0:i?i[this.isLazy?"__"+this.propertyName+"__":this.propertyName]:void 0}return this.isLazy?void 0!==e["__"+this.propertyName+"__"]?e["__"+this.propertyName+"__"]:!0===t?e[this.propertyName]:void 0:e[this.propertyName]}}setEntityValue(e,t){const n=this.isLazy?"__"+this.propertyName+"__":this.propertyName;if(this.embeddedMetadata){const a=(e,i)=>{const s=e.shift();return s?(i[s.propertyName]||(i[s.propertyName]=s.create()),a(e,i[s.propertyName]),i):(i[n]=t,i)};return a([...this.embeddedMetadata.embeddedMetadataTree],e)}e[n]=t}createValueMap(e){if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],n=(t,a)=>{const i=t.shift();return i?(a[i]={},n(t,a[i]),a):(a[this.propertyName]=e,a)};return n(t,{})}return{[this.propertyName]:e}}build(){this.propertyPath=this.buildPropertyPath()}registerForeignKeys(...e){this.foreignKeys.push(...e)}registerJoinColumns(e=[],t=[]){this.joinColumns=e,this.inverseJoinColumns=t,this.isOwning=this.isManyToOne||(this.isManyToMany||this.isOneToOne)&&this.joinColumns.length>0,this.isOneToOneOwner=this.isOneToOne&&this.isOwning,this.isOneToOneNotOwner=this.isOneToOne&&!this.isOwning,this.isManyToManyOwner=this.isManyToMany&&this.isOwning,this.isManyToManyNotOwner=this.isManyToMany&&!this.isOwning,this.isWithJoinColumn=this.isManyToOne||this.isOneToOneOwner}registerJunctionEntityMetadata(e){this.junctionEntityMetadata=e,this.joinTableName=e.tableName,this.inverseRelation&&(this.inverseRelation.junctionEntityMetadata=e,this.joinTableName=e.tableName)}buildInverseSidePropertyPath(){if(this.givenInverseSidePropertyFactory){const e=this.inverseEntityMetadata.propertiesMap;if("function"==typeof this.givenInverseSidePropertyFactory)return this.givenInverseSidePropertyFactory(e);if("string"==typeof this.givenInverseSidePropertyFactory)return this.givenInverseSidePropertyFactory}else{if(this.isTreeParent&&this.entityMetadata.treeChildrenRelation)return this.entityMetadata.treeChildrenRelation.propertyName;if(this.isTreeChildren&&this.entityMetadata.treeParentRelation)return this.entityMetadata.treeParentRelation.propertyName}return""}buildPropertyPath(){return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length?this.embeddedMetadata.parentPropertyNames.join(".")+"."+this.propertyName:this.propertyName}}class EmbeddedMetadata{constructor(e){this.columns=[],this.relations=[],this.listeners=[],this.indices=[],this.uniques=[],this.relationIds=[],this.relationCounts=[],this.embeddeds=[],this.isAlwaysUsingConstructor=!0,this.isArray=!1,this.parentPropertyNames=[],this.parentPrefixes=[],this.embeddedMetadataTree=[],this.columnsFromTree=[],this.relationsFromTree=[],this.listenersFromTree=[],this.indicesFromTree=[],this.uniquesFromTree=[],this.relationIdsFromTree=[],this.relationCountsFromTree=[],this.entityMetadata=e.entityMetadata,this.type=e.args.type(),this.propertyName=e.args.propertyName,this.customPrefix=e.args.prefix,this.isArray=e.args.isArray}create(e){return"function"!=typeof this.type?{}:!(null==e?void 0:e.fromDeserializer)||this.isAlwaysUsingConstructor?new this.type:Object.create(this.type.prototype)}build(e){return this.embeddeds.forEach((t=>t.build(e))),this.prefix=this.buildPrefix(e),this.parentPropertyNames=this.buildParentPropertyNames(),this.parentPrefixes=this.buildParentPrefixes(),this.propertyPath=this.parentPropertyNames.join("."),this.embeddedMetadataTree=this.buildEmbeddedMetadataTree(),this.columnsFromTree=this.buildColumnsFromTree(),this.relationsFromTree=this.buildRelationsFromTree(),this.listenersFromTree=this.buildListenersFromTree(),this.indicesFromTree=this.buildIndicesFromTree(),this.uniquesFromTree=this.buildUniquesFromTree(),this.relationIdsFromTree=this.buildRelationIdsFromTree(),this.relationCountsFromTree=this.buildRelationCountsFromTree(),e.options.entitySkipConstructor&&(this.isAlwaysUsingConstructor=!e.options.entitySkipConstructor),this}buildPartialPrefix(){if(void 0===this.customPrefix||!0===this.customPrefix)return[this.propertyName];if(""===this.customPrefix||!1===this.customPrefix)return[];if("string"==typeof this.customPrefix)return[this.customPrefix];throw new i.K_(`Invalid prefix option given for ${this.entityMetadata.targetName}#${this.propertyName}`)}buildPrefix(e){if("mongodb"===e.driver.options.type)return this.propertyName;let t=[];return this.parentEmbeddedMetadata&&t.push(this.parentEmbeddedMetadata.buildPrefix(e)),t.push(...this.buildPartialPrefix()),t.join("_")}buildParentPropertyNames(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildParentPropertyNames().concat(this.propertyName):[this.propertyName]}buildParentPrefixes(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildParentPrefixes().concat(this.buildPartialPrefix()):this.buildPartialPrefix()}buildEmbeddedMetadataTree(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildEmbeddedMetadataTree().concat(this):[this]}buildColumnsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildColumnsFromTree())),this.columns)}buildRelationsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationsFromTree())),this.relations)}buildListenersFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildListenersFromTree())),this.listeners)}buildIndicesFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildIndicesFromTree())),this.indices)}buildUniquesFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildUniquesFromTree())),this.uniques)}buildRelationIdsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationIdsFromTree())),this.relationIds)}buildRelationCountsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationCountsFromTree())),this.relationCounts)}}class RelationIdMetadata{constructor(e){this.entityMetadata=e.entityMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.relationNameOrFactory=e.args.relation,this.alias=e.args.alias,this.queryBuilderFactory=e.args.queryBuilderFactory}setValue(e){const t=this.relation.getEntityValue(e);if(Array.isArray(t))e[this.propertyName]=t.map((e=>this.relation.inverseEntityMetadata.getEntityIdMixedMap(e))).filter((e=>null!=e));else{const n=this.relation.inverseEntityMetadata.getEntityIdMixedMap(t);void 0!==n&&(e[this.propertyName]=n)}}build(){const e="function"==typeof this.relationNameOrFactory?this.relationNameOrFactory(this.entityMetadata.propertiesMap):this.relationNameOrFactory,t=this.entityMetadata.findRelationWithPropertyPath(e);if(!t)throw new i.K_(`Cannot find relation ${e}. Wrong relation specified for @RelationId decorator.`);this.relation=t}}class RelationCountMetadata{constructor(e){this.entityMetadata=e.entityMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.relationNameOrFactory=e.args.relation,this.alias=e.args.alias,this.queryBuilderFactory=e.args.queryBuilderFactory}build(){const e="function"==typeof this.relationNameOrFactory?this.relationNameOrFactory(this.entityMetadata.propertiesMap):this.relationNameOrFactory,t=this.entityMetadata.findRelationWithPropertyPath(e);if(!t)throw new i.K_(`Cannot find relation ${e}. Wrong relation specified for @RelationCount decorator.`);this.relation=t}}class EventListenerTypes_EventListenerTypes{}EventListenerTypes_EventListenerTypes.AFTER_LOAD="after-load",EventListenerTypes_EventListenerTypes.BEFORE_INSERT="before-insert",EventListenerTypes_EventListenerTypes.AFTER_INSERT="after-insert",EventListenerTypes_EventListenerTypes.BEFORE_UPDATE="before-update",EventListenerTypes_EventListenerTypes.AFTER_UPDATE="after-update",EventListenerTypes_EventListenerTypes.BEFORE_REMOVE="before-remove",EventListenerTypes_EventListenerTypes.AFTER_REMOVE="after-remove",EventListenerTypes_EventListenerTypes.BEFORE_SOFT_REMOVE="before-soft-remove",EventListenerTypes_EventListenerTypes.AFTER_SOFT_REMOVE="after-soft-remove",EventListenerTypes_EventListenerTypes.BEFORE_RECOVER="before-recover",EventListenerTypes_EventListenerTypes.AFTER_RECOVER="after-recover";class ForeignKeyMetadata{constructor(e){this.columns=[],this.referencedColumns=[],this.columnNames=[],this.referencedColumnNames=[],this.entityMetadata=e.entityMetadata,this.referencedEntityMetadata=e.referencedEntityMetadata,this.columns=e.columns,this.referencedColumns=e.referencedColumns,this.onDelete=e.onDelete||"NO ACTION",this.onUpdate=e.onUpdate||"NO ACTION",this.deferrable=e.deferrable,this.givenName=e.name,e.namingStrategy&&this.build(e.namingStrategy)}build(e){this.columnNames=this.columns.map((e=>e.databaseName)),this.referencedColumnNames=this.referencedColumns.map((e=>e.databaseName)),this.referencedTablePath=this.referencedEntityMetadata.tablePath,this.name=this.givenName?this.givenName:e.foreignKeyName(this.entityMetadata.tableName,this.columnNames,this.referencedEntityMetadata.tableName,this.referencedColumnNames)}}class JunctionEntityMetadataBuilder{constructor(e){this.connection=e}build(e,t){var n,a;const i=this.collectReferencedColumns(e,t),s=this.collectInverseReferencedColumns(e,t),r=t.name||this.connection.namingStrategy.joinTableName(e.entityMetadata.tableNameWithoutPrefix,e.inverseEntityMetadata.tableNameWithoutPrefix,e.propertyPath,e.inverseRelation?e.inverseRelation.propertyName:""),o=new EntityMetadata({connection:this.connection,args:{target:"",name:r,type:"junction",database:t.database||e.entityMetadata.database,schema:t.schema||e.entityMetadata.schema}});o.build();const c=i.map((n=>{const a=t.joinColumns?t.joinColumns.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))):void 0,i=a&&a.name?a.name:this.connection.namingStrategy.joinTableColumnName(e.entityMetadata.tableNameWithoutPrefix,n.propertyName,n.databaseName);return new ColumnMetadata({connection:this.connection,entityMetadata:o,referencedColumn:n,args:{target:"",mode:"virtual",propertyName:i,options:{name:i,length:n.length||!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,type:n.type,precision:n.precision,scale:n.scale,charset:n.charset,collation:n.collation,zerofill:n.zerofill,unsigned:!!n.zerofill||n.unsigned,enum:n.enum,enumName:n.enumName,foreignKeyConstraintName:null==a?void 0:a.foreignKeyConstraintName,nullable:!1,primary:!0}}})})),l=s.map((n=>{const a=t.inverseJoinColumns?t.inverseJoinColumns.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))):void 0,i=a&&a.name?a.name:this.connection.namingStrategy.joinTableInverseColumnName(e.inverseEntityMetadata.tableNameWithoutPrefix,n.propertyName,n.databaseName);return new ColumnMetadata({connection:this.connection,entityMetadata:o,referencedColumn:n,args:{target:"",mode:"virtual",propertyName:i,options:{length:n.length||!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,type:n.type,precision:n.precision,scale:n.scale,charset:n.charset,collation:n.collation,zerofill:n.zerofill,unsigned:!!n.zerofill||n.unsigned,enum:n.enum,enumName:n.enumName,foreignKeyConstraintName:null==a?void 0:a.foreignKeyConstraintName,name:i,nullable:!1,primary:!0}}})}));return this.changeDuplicatedColumnNames(c,l),o.ownerColumns=c,o.inverseColumns=l,o.ownColumns=[...c,...l],o.ownColumns.forEach((t=>t.relationMetadata=e)),o.foreignKeys=e.createForeignKeyConstraints?[new ForeignKeyMetadata({entityMetadata:o,referencedEntityMetadata:e.entityMetadata,columns:c,referencedColumns:i,name:null===(n=c[0])||void 0===n?void 0:n.foreignKeyConstraintName,onDelete:"spanner"===this.connection.driver.options.type?"NO ACTION":e.onDelete||"CASCADE",onUpdate:"oracle"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?"NO ACTION":e.onUpdate||"CASCADE"}),new ForeignKeyMetadata({entityMetadata:o,referencedEntityMetadata:e.inverseEntityMetadata,columns:l,referencedColumns:s,name:null===(a=l[0])||void 0===a?void 0:a.foreignKeyConstraintName,onDelete:"spanner"===this.connection.driver.options.type?"NO ACTION":e.inverseRelation?e.inverseRelation.onDelete:"CASCADE",onUpdate:"oracle"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?"NO ACTION":e.inverseRelation?e.inverseRelation.onUpdate:"CASCADE"})]:[],o.ownIndices=[new IndexMetadata({entityMetadata:o,columns:c,args:{target:o.target,synchronize:!0}}),new IndexMetadata({entityMetadata:o,columns:l,args:{target:o.target,synchronize:!0}})],o}collectReferencedColumns(e,t){const n=!!t.joinColumns&&t.joinColumns.find((e=>!!e.referencedColumnName));return!t.joinColumns||t.joinColumns&&!n?e.entityMetadata.columns.filter((e=>e.isPrimary)):t.joinColumns.map((t=>{const n=e.entityMetadata.columns.find((e=>e.propertyName===t.referencedColumnName));if(!n)throw new i.K_(`Referenced column ${t.referencedColumnName} was not found in entity ${e.entityMetadata.name}`);return n}))}collectInverseReferencedColumns(e,t){const n=!!t.inverseJoinColumns,a=!!n&&t.inverseJoinColumns.find((e=>!!e.referencedColumnName));return!n||n&&!a?e.inverseEntityMetadata.primaryColumns:t.inverseJoinColumns.map((t=>{const n=e.inverseEntityMetadata.ownColumns.find((e=>e.propertyName===t.referencedColumnName));if(!n)throw new i.K_(`Referenced column ${t.referencedColumnName} was not found in entity ${e.inverseEntityMetadata.name}`);return n}))}changeDuplicatedColumnNames(e,t){e.forEach((e=>{t.forEach((t=>{if(e.givenDatabaseName===t.givenDatabaseName){const n=this.connection.namingStrategy.joinTableColumnDuplicationPrefix(e.propertyName,1);e.propertyName=n,e.givenDatabaseName=n;const a=this.connection.namingStrategy.joinTableColumnDuplicationPrefix(t.propertyName,2);t.propertyName=a,t.givenDatabaseName=a}}))}))}}class ClosureJunctionEntityMetadataBuilder{constructor(e){this.connection=e}build(e){const t=new EntityMetadata({parentClosureEntityMetadata:e,connection:this.connection,args:{target:"",name:e.treeOptions&&e.treeOptions.closureTableName?e.treeOptions.closureTableName:e.tableNameWithoutPrefix,type:"closure-junction"}});return t.build(),e.primaryColumns.forEach((n=>{t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,closureType:"ancestor",referencedColumn:n,args:{target:"",mode:"virtual",propertyName:e.treeOptions&&e.treeOptions.ancestorColumnName?e.treeOptions.ancestorColumnName(n):n.propertyName+"_ancestor",options:{primary:!0,length:n.length,type:n.type}}})),t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,closureType:"descendant",referencedColumn:n,args:{target:"",mode:"virtual",propertyName:e.treeOptions&&e.treeOptions.descendantColumnName?e.treeOptions.descendantColumnName(n):n.propertyName+"_descendant",options:{primary:!0,length:n.length,type:n.type}}}))})),t.ownIndices=[new IndexMetadata({entityMetadata:t,columns:[t.ownColumns[0]],args:{target:t.target,synchronize:!0}}),new IndexMetadata({entityMetadata:t,columns:[t.ownColumns[1]],args:{target:t.target,synchronize:!0}})],e.treeLevelColumn&&t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,args:{target:"",mode:"virtual",propertyName:"level",options:{type:this.connection.driver.mappedDataTypes.treeLevel}}})),t.foreignKeys=[new ForeignKeyMetadata({entityMetadata:t,referencedEntityMetadata:e,columns:[t.ownColumns[0]],referencedColumns:e.primaryColumns,onDelete:"mssql"===this.connection.driver.options.type?"NO ACTION":"CASCADE"}),new ForeignKeyMetadata({entityMetadata:t,referencedEntityMetadata:e,columns:[t.ownColumns[1]],referencedColumns:e.primaryColumns,onDelete:"mssql"===this.connection.driver.options.type?"NO ACTION":"CASCADE"})],t}}class UniqueMetadata{constructor(e){this.columns=[],this.columnNamesWithOrderingMap={},this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,e.columns&&(this.columns=e.columns),e.args&&(this.target=e.args.target,this.givenName=e.args.name,this.givenColumnNames=e.args.columns,this.deferrable=e.args.deferrable)}build(e){const t={};if(this.givenColumnNames){let e=[];if(Array.isArray(this.givenColumnNames))e=this.givenColumnNames.map((e=>this.embeddedMetadata?this.embeddedMetadata.propertyPath+"."+e:e.trim())),e.forEach((e=>t[e]=1));else{const n=this.givenColumnNames(this.entityMetadata.propertiesMap);Array.isArray(n)?(e=n.map((e=>String(e))),e.forEach((e=>t[e]=1))):(e=Object.keys(n).map((e=>String(e))),Object.keys(n).forEach((e=>t[e]=n[e])))}this.columns=e.map((e=>{const t=this.entityMetadata.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.entityMetadata.relations.find((t=>t.isWithJoinColumn&&t.propertyName===e));if(n)return n.joinColumns;const a=this.givenName?'"'+this.givenName+'" ':"",s=this.entityMetadata.targetName;throw new i.K_(`Unique constraint ${a}contains column that is missing in the entity (${s}): `+e)})).reduce(((e,t)=>e.concat(t)))}return this.columnNamesWithOrderingMap=Object.keys(t).reduce(((e,n)=>{const a=this.entityMetadata.columns.find((e=>e.propertyPath===n));return a&&(e[a.databasePath]=t[n]),e}),{}),this.name=this.givenName?this.givenName:e.uniqueConstraintName(this.entityMetadata.tableName,this.columns.map((e=>e.databaseName))),this}}class RelationJoinColumnBuilder{constructor(e){this.connection=e}build(e,t){var n;const a=this.collectReferencedColumns(e,t),i=this.collectColumns(e,t,a);if(!a.length||!t.createForeignKeyConstraints)return{foreignKey:void 0,columns:i,uniqueConstraint:void 0};const s=new ForeignKeyMetadata({name:null===(n=e[0])||void 0===n?void 0:n.foreignKeyConstraintName,entityMetadata:t.entityMetadata,referencedEntityMetadata:t.inverseEntityMetadata,namingStrategy:this.connection.namingStrategy,columns:i,referencedColumns:a,onDelete:t.onDelete,onUpdate:t.onUpdate,deferrable:t.deferrable});if("oracle"===this.connection.driver.options.type&&i.every((e=>e.isPrimary)))return{foreignKey:s,columns:i,uniqueConstraint:void 0};if(a.length>0&&t.isOneToOne){const e=new UniqueMetadata({entityMetadata:t.entityMetadata,columns:s.columns,args:{name:this.connection.namingStrategy.relationConstraintName(t.entityMetadata.tableName,s.columns.map((e=>e.databaseName))),target:t.entityMetadata.target}});return e.build(this.connection.namingStrategy),{foreignKey:s,columns:i,uniqueConstraint:e}}return{foreignKey:s,columns:i,uniqueConstraint:void 0}}collectReferencedColumns(e,t){const n=e.find((e=>!!e.referencedColumnName)),a=0===e.length&&t.isManyToOne,s=e.length>0&&!n;return a||s?t.inverseEntityMetadata.primaryColumns:e.map((e=>{const n=t.inverseEntityMetadata.ownColumns.find((t=>t.propertyName===e.referencedColumnName));if(!n)throw new i.K_(`Referenced column ${e.referencedColumnName} was not found in entity ${t.inverseEntityMetadata.name}`);return n}))}collectColumns(e,t,n){return n.map((n=>{const a=e.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))),i=a?a.name:this.connection.namingStrategy.joinColumnName(t.propertyName,n.propertyName);let s=(t.embeddedMetadata?t.embeddedMetadata.columns:t.entityMetadata.ownColumns).find((e=>e.databaseNameWithoutPrefixes===i));return s||(s=new ColumnMetadata({connection:this.connection,entityMetadata:t.entityMetadata,embeddedMetadata:t.embeddedMetadata,args:{target:"",mode:"virtual",propertyName:t.propertyName,options:{name:i,type:n.type,length:n.length||!d.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,charset:n.charset,collation:n.collation,precision:n.precision,scale:n.scale,zerofill:n.zerofill,unsigned:n.unsigned,comment:n.comment,enum:n.enum,enumName:n.enumName,primary:t.isPrimary,nullable:t.isNullable}}}),t.entityMetadata.registerColumn(s)),s.referencedColumn=n,s.type=n.type,s.relationMetadata=t,s.build(this.connection),s}))}}class EntityListenerMetadata{constructor(e){this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.type=e.args.type}isAllowed(e){return this.entityMetadata.target===e.constructor||"function"==typeof this.entityMetadata.target&&e.constructor.prototype instanceof this.entityMetadata.target}execute(e){if(!this.embeddedMetadata)return e[this.propertyName]();this.callEntityEmbeddedMethod(e,this.embeddedMetadata.propertyPath.split("."))}callEntityEmbeddedMethod(e,t){const n=t.shift();n&&e[n]&&(0===t.length?Array.isArray(e[n])?e[n].map((e=>e[this.propertyName]())):e[n][this.propertyName]():e[n]&&this.callEntityEmbeddedMethod(e[n],t))}}class CheckMetadata{constructor(e){this.entityMetadata=e.entityMetadata,e.args&&(this.target=e.args.target,this.expression=e.args.expression,this.givenName=e.args.name)}build(e){return this.name=this.givenName?this.givenName:e.checkConstraintName(this.entityMetadata.tableName,this.expression),this}}class ExclusionMetadata{constructor(e){this.entityMetadata=e.entityMetadata,e.args&&(this.target=e.args.target,this.expression=e.args.expression,this.givenName=e.args.name)}build(e){return this.name=this.givenName?this.givenName:e.exclusionConstraintName(this.entityMetadata.tableName,this.expression),this}}class EntityMetadataBuilder{constructor(e,t){this.connection=e,this.metadataArgsStorage=t,this.junctionEntityMetadataBuilder=new JunctionEntityMetadataBuilder(e),this.closureJunctionEntityMetadataBuilder=new ClosureJunctionEntityMetadataBuilder(e),this.relationJoinColumnBuilder=new RelationJoinColumnBuilder(e)}build(e){const t=(e?this.metadataArgsStorage.filterTables(e):this.metadataArgsStorage.tables).filter((e=>"regular"===e.type||"closure"===e.type||"entity-child"===e.type||"view"===e.type)).map((e=>this.createEntityMetadata(e)));return t.forEach((e=>this.computeParentEntityMetadata(t,e))),t.forEach((e=>{e.childEntityMetadatas=t.filter((t=>"function"==typeof e.target&&"function"==typeof t.target&&MetadataUtils.isInherited(t.target,e.target)))})),t.filter((e=>"entity-child"!==e.tableType)).forEach((e=>e.build())),t.filter((e=>"entity-child"===e.tableType)).forEach((e=>e.build())),t.filter((e=>"entity-child"!==e.tableType)).forEach((e=>this.computeEntityMetadataStep1(t,e))),t.filter((e=>"entity-child"===e.tableType)).forEach((e=>this.computeEntityMetadataStep1(t,e))),t.forEach((e=>this.computeEntityMetadataStep2(e))),t.forEach((e=>this.computeInverseProperties(e,t))),t.filter((e=>"entity-child"!==e.tableType)).forEach((e=>{e.relations.filter((e=>e.isOneToOne||e.isManyToOne)).forEach((t=>{const n=this.metadataArgsStorage.filterJoinColumns(t.target,t.propertyName),{foreignKey:a,columns:i,uniqueConstraint:s}=this.relationJoinColumnBuilder.build(n,t);if(a&&(t.registerForeignKeys(a),e.foreignKeys.push(a)),i&&t.registerJoinColumns(i),s)if(d.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"mssql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){const n=new IndexMetadata({entityMetadata:s.entityMetadata,columns:s.columns,args:{target:s.target,name:s.name,unique:!0,synchronize:!0}});"mssql"===this.connection.driver.options.type&&(n.where=n.columns.map((e=>`${this.connection.driver.escape(e.databaseName)} IS NOT NULL`)).join(" AND ")),"spanner"===this.connection.driver.options.type&&(n.isNullFiltered=!0),t.embeddedMetadata?t.embeddedMetadata.indices.push(n):t.entityMetadata.ownIndices.push(n),this.computeEntityMetadataStep2(e)}else t.embeddedMetadata?t.embeddedMetadata.uniques.push(s):t.entityMetadata.ownUniques.push(s),this.computeEntityMetadataStep2(e);if(a&&"cockroachdb"===this.connection.driver.options.type){const n=new IndexMetadata({entityMetadata:t.entityMetadata,columns:a.columns,args:{target:t.entityMetadata.target,synchronize:!0}});t.embeddedMetadata?t.embeddedMetadata.indices.push(n):t.entityMetadata.ownIndices.push(n),this.computeEntityMetadataStep2(e)}})),e.relations.filter((e=>e.isManyToMany)).forEach((e=>{const n=this.metadataArgsStorage.findJoinTable(e.target,e.propertyName);if(!n)return;const a=this.junctionEntityMetadataBuilder.build(e,n);e.registerForeignKeys(...a.foreignKeys),e.registerJoinColumns(a.ownIndices[0].columns,a.ownIndices[1].columns),e.registerJunctionEntityMetadata(a),this.computeEntityMetadataStep2(a),this.computeInverseProperties(a,t),t.push(a)}))})),t.forEach((e=>{e.relationsWithJoinColumns=e.relations.filter((e=>e.isWithJoinColumn)),e.hasNonNullableRelations=e.relationsWithJoinColumns.some((e=>!e.isNullable||e.isPrimary))})),t.filter((e=>"closure-table"===e.treeType)).forEach((e=>{const n=this.closureJunctionEntityMetadataBuilder.build(e);e.closureJunctionTable=n,this.computeEntityMetadataStep2(n),this.computeInverseProperties(n,t),t.push(n)})),t.filter((e=>"STI"===e.inheritancePattern&&e.discriminatorColumn)).forEach((e=>this.createKeysForTableInheritance(e))),t.forEach((e=>{e.indices.forEach((e=>e.build(this.connection.namingStrategy)))})),t.forEach((e=>{e.uniques.forEach((e=>e.build(this.connection.namingStrategy)))})),t.forEach((e=>{e.checks.forEach((e=>e.build(this.connection.namingStrategy)))})),t.forEach((e=>{e.exclusions.forEach((e=>e.build(this.connection.namingStrategy)))})),t.filter((e=>"function"==typeof e.target)).forEach((e=>{e.relations.filter((e=>e.isLazy)).forEach((t=>{this.connection.relationLoader.enableLazyLoad(t,e.target.prototype)}))})),t.forEach((e=>{e.columns.forEach((t=>{const n=this.metadataArgsStorage.findGenerated(t.target,t.propertyName);n&&(t.isGenerated=!0,t.generationStrategy=n.strategy,"uuid"===n.strategy?t.type="uuid":"rowid"===n.strategy?t.type="int":t.type=t.type||Number,t.build(this.connection),this.computeEntityMetadataStep2(e))}))})),t}createEntityMetadata(e){const t="function"==typeof e.target?MetadataUtils.getInheritanceTree(e.target):[e.target],n=this.metadataArgsStorage.findInheritanceType(e.target),a=this.metadataArgsStorage.findTree(e.target);let i;return(n&&"STI"===n.pattern||"entity-child"===e.type)&&(i=this.metadataArgsStorage.filterSingleTableChildren(e.target).map((e=>e.target)).filter((e=>"function"==typeof e)),t.push(...i)),new EntityMetadata({connection:this.connection,args:e,inheritanceTree:t,tableTree:a,inheritancePattern:n?n.pattern:void 0})}computeParentEntityMetadata(e,t){"entity-child"===t.tableType&&(t.parentEntityMetadata=e.find((e=>-1!==e.inheritanceTree.indexOf(t.target)&&"STI"===e.inheritancePattern)))}computeEntityMetadataStep1(e,t){const n=this.metadataArgsStorage.findInheritanceType(t.target),a=this.metadataArgsStorage.findDiscriminatorValue(t.target);if(t.discriminatorValue=void 0!==a?a.value:t.target.name,t.embeddeds=this.createEmbeddedsRecursively(t,this.metadataArgsStorage.filterEmbeddeds(t.inheritanceTree)).map((e=>("STI"===t.inheritancePattern&&(e.columns=e.columns.map((e=>(e.isNullable=!0,e)))),e))),t.ownColumns=this.metadataArgsStorage.filterColumns(t.inheritanceTree).map((n=>{if("entity-child"===t.tableType)return t.parentEntityMetadata.ownColumns.find((e=>e.propertyName===n.propertyName));const a=new ColumnMetadata({connection:this.connection,entityMetadata:t,args:n});return e.find((e=>"entity-child"===e.tableType&&e.target===n.target))&&(a.isNullable=!0),a})),n&&n.column){const e=n.column&&n.column.name?n.column.name:"type";let a=t.ownColumns.find((t=>t.propertyName===e));a?a.isDiscriminator=!0:(a=new ColumnMetadata({connection:this.connection,entityMetadata:t,args:{target:t.target,mode:"virtual",propertyName:e,options:n.column||{name:e,type:"varchar",nullable:!1}}}),a.isVirtual=!0,a.isDiscriminator=!0,t.ownColumns.push(a))}if("entity-child"===t.tableType){const e=t.parentEntityMetadata.ownColumns.find((e=>e.isDiscriminator));e&&!t.ownColumns.find((t=>t===e))&&t.ownColumns.push(e)}const{namingStrategy:i}=this.connection;if("materialized-path"===t.treeType)t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,materializedPath:!0,args:{target:t.target,mode:"virtual",propertyName:"mpath",options:{name:i.materializedPathColumnName,type:String,nullable:!0,default:""}}}));else if("nested-set"===t.treeType){const{left:e,right:n}=i.nestedSetColumnNames;t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,nestedSetLeft:!0,args:{target:t.target,mode:"virtual",propertyName:e,options:{name:e,type:Number,nullable:!1,default:1}}})),t.ownColumns.push(new ColumnMetadata({connection:this.connection,entityMetadata:t,nestedSetRight:!0,args:{target:t.target,mode:"virtual",propertyName:n,options:{name:n,type:Number,nullable:!1,default:2}}}))}if(t.ownRelations=this.metadataArgsStorage.filterRelations(t.inheritanceTree).map((e=>{if("entity-child"===t.tableType){const n=t.parentEntityMetadata.ownRelations.find((t=>t.propertyName===e.propertyName)),a="function"==typeof e.type?e.type():e.type;if(n.type!==a){const e=Object.create(n);return e.type=a,e}return n}return new RelationMetadata({entityMetadata:t,args:e})})),t.relationIds=this.metadataArgsStorage.filterRelationIds(t.inheritanceTree).map((e=>"entity-child"===t.tableType?t.parentEntityMetadata.relationIds.find((t=>t.propertyName===e.propertyName)):new RelationIdMetadata({entityMetadata:t,args:e}))),t.relationCounts=this.metadataArgsStorage.filterRelationCounts(t.inheritanceTree).map((e=>"entity-child"===t.tableType?t.parentEntityMetadata.relationCounts.find((t=>t.propertyName===e.propertyName)):new RelationCountMetadata({entityMetadata:t,args:e}))),t.ownListeners=this.metadataArgsStorage.filterListeners(t.inheritanceTree).map((e=>new EntityListenerMetadata({entityMetadata:t,args:e}))),t.checks=this.metadataArgsStorage.filterChecks(t.inheritanceTree).map((e=>new CheckMetadata({entityMetadata:t,args:e}))),"postgres"===this.connection.driver.options.type&&(t.exclusions=this.metadataArgsStorage.filterExclusions(t.inheritanceTree).map((e=>new ExclusionMetadata({entityMetadata:t,args:e})))),"cockroachdb"===this.connection.driver.options.type){t.ownIndices=this.metadataArgsStorage.filterIndices(t.inheritanceTree).filter((e=>!e.unique)).map((e=>new IndexMetadata({entityMetadata:t,args:e})));const e=this.metadataArgsStorage.filterIndices(t.inheritanceTree).filter((e=>e.unique)).map((e=>new UniqueMetadata({entityMetadata:t,args:{target:e.target,name:e.name,columns:e.columns}})));t.ownUniques.push(...e)}else t.ownIndices=this.metadataArgsStorage.filterIndices(t.inheritanceTree).map((e=>new IndexMetadata({entityMetadata:t,args:e})));if(d.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){const e=this.metadataArgsStorage.filterUniques(t.inheritanceTree).map((e=>new IndexMetadata({entityMetadata:t,args:{target:e.target,name:e.name,columns:e.columns,unique:!0,synchronize:!0}})));t.ownIndices.push(...e)}else{const e=this.metadataArgsStorage.filterUniques(t.inheritanceTree).map((e=>new UniqueMetadata({entityMetadata:t,args:e})));t.ownUniques.push(...e)}}createEmbeddedsRecursively(e,t){return t.map((t=>{const n=new EmbeddedMetadata({entityMetadata:e,args:t}),a="function"==typeof n.type?MetadataUtils.getInheritanceTree(n.type):[n.type];return n.columns=this.metadataArgsStorage.filterColumns(a).map((t=>new ColumnMetadata({connection:this.connection,entityMetadata:e,embeddedMetadata:n,args:t}))),n.relations=this.metadataArgsStorage.filterRelations(a).map((t=>new RelationMetadata({entityMetadata:e,embeddedMetadata:n,args:t}))),n.listeners=this.metadataArgsStorage.filterListeners(a).map((t=>new EntityListenerMetadata({entityMetadata:e,embeddedMetadata:n,args:t}))),n.indices=this.metadataArgsStorage.filterIndices(a).map((t=>new IndexMetadata({entityMetadata:e,embeddedMetadata:n,args:t}))),n.uniques=this.metadataArgsStorage.filterUniques(a).map((t=>new UniqueMetadata({entityMetadata:e,embeddedMetadata:n,args:t}))),n.relationIds=this.metadataArgsStorage.filterRelationIds(a).map((t=>new RelationIdMetadata({entityMetadata:e,args:t}))),n.relationCounts=this.metadataArgsStorage.filterRelationCounts(a).map((t=>new RelationCountMetadata({entityMetadata:e,args:t}))),n.embeddeds=this.createEmbeddedsRecursively(e,this.metadataArgsStorage.filterEmbeddeds(a)),n.embeddeds.forEach((e=>e.parentEmbeddedMetadata=n)),e.allEmbeddeds.push(n),n}))}computeEntityMetadataStep2(e){e.embeddeds.forEach((e=>e.build(this.connection))),e.embeddeds.forEach((e=>{e.columnsFromTree.forEach((e=>e.build(this.connection))),e.relationsFromTree.forEach((e=>e.build()))})),e.ownColumns.forEach((e=>e.build(this.connection))),e.ownRelations.forEach((e=>e.build())),e.relations=e.embeddeds.reduce(((e,t)=>e.concat(t.relationsFromTree)),e.ownRelations),e.eagerRelations=e.relations.filter((e=>e.isEager)),e.lazyRelations=e.relations.filter((e=>e.isLazy)),e.oneToOneRelations=e.relations.filter((e=>e.isOneToOne)),e.oneToManyRelations=e.relations.filter((e=>e.isOneToMany)),e.manyToOneRelations=e.relations.filter((e=>e.isManyToOne)),e.manyToManyRelations=e.relations.filter((e=>e.isManyToMany)),e.ownerOneToOneRelations=e.relations.filter((e=>e.isOneToOneOwner)),e.ownerManyToManyRelations=e.relations.filter((e=>e.isManyToManyOwner)),e.treeParentRelation=e.relations.find((e=>e.isTreeParent)),e.treeChildrenRelation=e.relations.find((e=>e.isTreeChildren)),e.columns=e.embeddeds.reduce(((e,t)=>e.concat(t.columnsFromTree)),e.ownColumns),e.listeners=e.embeddeds.reduce(((e,t)=>e.concat(t.listenersFromTree)),e.ownListeners),e.afterLoadListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_LOAD)),e.afterInsertListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_INSERT)),e.afterUpdateListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_UPDATE)),e.afterRemoveListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_REMOVE)),e.afterSoftRemoveListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_SOFT_REMOVE)),e.afterRecoverListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.AFTER_RECOVER)),e.beforeInsertListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.BEFORE_INSERT)),e.beforeUpdateListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.BEFORE_UPDATE)),e.beforeRemoveListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.BEFORE_REMOVE)),e.beforeSoftRemoveListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.BEFORE_SOFT_REMOVE)),e.beforeRecoverListeners=e.listeners.filter((e=>e.type===EventListenerTypes_EventListenerTypes.BEFORE_RECOVER)),e.indices=e.embeddeds.reduce(((e,t)=>e.concat(t.indicesFromTree)),e.ownIndices),e.uniques=e.embeddeds.reduce(((e,t)=>e.concat(t.uniquesFromTree)),e.ownUniques),e.primaryColumns=e.columns.filter((e=>e.isPrimary)),e.nonVirtualColumns=e.columns.filter((e=>!e.isVirtual)),e.ancestorColumns=e.columns.filter((e=>"ancestor"===e.closureType)),e.descendantColumns=e.columns.filter((e=>"descendant"===e.closureType)),e.hasMultiplePrimaryKeys=e.primaryColumns.length>1,e.generatedColumns=e.columns.filter((e=>e.isGenerated||e.isObjectId)),e.hasUUIDGeneratedColumns=e.columns.filter((e=>e.isGenerated||"uuid"===e.generationStrategy)).length>0,e.createDateColumn=e.columns.find((e=>e.isCreateDate)),e.updateDateColumn=e.columns.find((e=>e.isUpdateDate)),e.deleteDateColumn=e.columns.find((e=>e.isDeleteDate)),e.versionColumn=e.columns.find((e=>e.isVersion)),e.discriminatorColumn=e.columns.find((e=>e.isDiscriminator)),e.treeLevelColumn=e.columns.find((e=>e.isTreeLevel)),e.nestedSetLeftColumn=e.columns.find((e=>e.isNestedSetLeft)),e.nestedSetRightColumn=e.columns.find((e=>e.isNestedSetRight)),e.materializedPathColumn=e.columns.find((e=>e.isMaterializedPath)),e.objectIdColumn=e.columns.find((e=>e.isObjectId)),e.foreignKeys.forEach((e=>e.build(this.connection.namingStrategy))),e.propertiesMap=e.createPropertiesMap(),e.relationIds.forEach((e=>e.build())),e.relationCounts.forEach((e=>e.build())),e.embeddeds.forEach((e=>{e.relationIdsFromTree.forEach((e=>e.build())),e.relationCountsFromTree.forEach((e=>e.build()))}))}computeInverseProperties(e,t){e.relations.forEach((n=>{const a=t.find((e=>e.target===n.type||"string"==typeof n.type&&(e.targetName===n.type||e.givenTableName===n.type)));if(!a)throw new i.K_("Entity metadata for "+e.name+"#"+n.propertyPath+" was not found. Check if you specified a correct entity object and if it's connected in the connection options.");n.inverseEntityMetadata=a,n.inverseSidePropertyPath=n.buildInverseSidePropertyPath(),n.inverseRelation=a.relations.find((e=>e.propertyPath===n.inverseSidePropertyPath))}))}createKeysForTableInheritance(e){e.indices.push(new IndexMetadata({entityMetadata:e,columns:[e.discriminatorColumn],args:{target:e.target,unique:!1}}))}}class EntitySchemaEmbeddedError extends i.K_{static createEntitySchemaIsRequiredException(e){return new EntitySchemaEmbeddedError(`EntitySchema is required for ${e} embedded field`)}static createTargetIsRequired(e){return new EntitySchemaEmbeddedError(`Target field is required for ${e} embedded EntitySchema`)}constructor(e){super(e)}}class EntitySchemaTransformer{transform(e){const t=new MetadataArgsStorage;return e.forEach((e=>{const n=e.options,a={target:n.target||n.name,name:n.tableName,database:n.database,schema:n.schema,type:n.type||"regular",orderBy:n.orderBy,synchronize:n.synchronize,withoutRowid:!!n.withoutRowid,expression:n.expression};t.tables.push(a),this.transformColumnsRecursive(n,t)})),t}transformColumnsRecursive(e,t){Object.keys(e.columns).forEach((n=>{const a=e.columns[n];let i="regular";a.createDate&&(i="createDate"),a.updateDate&&(i="updateDate"),a.deleteDate&&(i="deleteDate"),a.version&&(i="version"),a.treeChildrenCount&&(i="treeChildrenCount"),a.treeLevel&&(i="treeLevel"),a.objectId&&(i="objectId");const s={target:e.target||e.name,mode:i,propertyName:n,options:{type:a.type,name:a.objectId?"_id":a.name,length:a.length,width:a.width,nullable:a.nullable,readonly:a.readonly,update:a.update,select:a.select,insert:a.insert,primary:a.primary,unique:a.unique,comment:a.comment,default:a.default,onUpdate:a.onUpdate,precision:a.precision,scale:a.scale,zerofill:a.zerofill,unsigned:a.unsigned,charset:a.charset,collation:a.collation,enum:a.enum,enumName:a.enumName,asExpression:a.asExpression,generatedType:a.generatedType,hstoreType:a.hstoreType,array:a.array,transformer:a.transformer,spatialFeatureType:a.spatialFeatureType,srid:a.srid}};if(t.columns.push(s),a.generated){const i={target:e.target||e.name,propertyName:n,strategy:"string"==typeof a.generated?a.generated:"increment"};t.generations.push(i)}a.unique&&t.uniques.push({target:e.target||e.name,columns:[n]})})),e.relations&&Object.keys(e.relations).forEach((n=>{const a=e.relations[n],i={target:e.target||e.name,propertyName:n,relationType:a.type,isLazy:a.lazy||!1,type:a.target,inverseSideProperty:a.inverseSide,isTreeParent:a.treeParent,isTreeChildren:a.treeChildren,options:{eager:a.eager||!1,cascade:a.cascade,nullable:a.nullable,onDelete:a.onDelete,onUpdate:a.onUpdate,deferrable:a.deferrable,createForeignKeyConstraints:a.createForeignKeyConstraints,persistence:a.persistence,orphanedRowAction:a.orphanedRowAction}};if(t.relations.push(i),a.joinColumn)if("boolean"==typeof a.joinColumn){const a={target:e.target||e.name,propertyName:n};t.joinColumns.push(a)}else{const i=Array.isArray(a.joinColumn)?a.joinColumn:[a.joinColumn];for(const a of i){const i={target:e.target||e.name,propertyName:n,name:a.name,referencedColumnName:a.referencedColumnName,foreignKeyConstraintName:a.foreignKeyConstraintName};t.joinColumns.push(i)}}if(a.joinTable)if("boolean"==typeof a.joinTable){const a={target:e.target||e.name,propertyName:n};t.joinTables.push(a)}else{const i={target:e.target||e.name,propertyName:n,name:a.joinTable.name,database:a.joinTable.database,schema:a.joinTable.schema,joinColumns:a.joinTable.joinColumn?[a.joinTable.joinColumn]:a.joinTable.joinColumns,inverseJoinColumns:a.joinTable.inverseJoinColumn?[a.joinTable.inverseJoinColumn]:a.joinTable.inverseJoinColumns};t.joinTables.push(i)}})),e.relationIds&&Object.keys(e.relationIds).forEach((n=>{const a=e.relationIds[n],i={propertyName:n,relation:a.relationName,target:e.target||e.name,alias:a.alias,queryBuilderFactory:a.queryBuilderFactory};t.relationIds.push(i)})),e.indices&&e.indices.forEach((n=>{const a={target:e.target||e.name,name:n.name,unique:!0===n.unique,spatial:!0===n.spatial,fulltext:!0===n.fulltext,nullFiltered:!0===n.nullFiltered,parser:n.parser,synchronize:!1!==n.synchronize,where:n.where,sparse:n.sparse,columns:n.columns};t.indices.push(a)})),e.uniques&&e.uniques.forEach((n=>{const a={target:e.target||e.name,name:n.name,columns:n.columns,deferrable:n.deferrable};t.uniques.push(a)})),e.checks&&e.checks.forEach((n=>{const a={target:e.target||e.name,name:n.name,expression:n.expression};t.checks.push(a)})),e.exclusions&&e.exclusions.forEach((n=>{const a={target:e.target||e.name,name:n.name,expression:n.expression};t.exclusions.push(a)})),e.embeddeds&&Object.keys(e.embeddeds).forEach((n=>{const a=e.embeddeds[n];if(!a.schema)throw EntitySchemaEmbeddedError.createEntitySchemaIsRequiredException(n);const i=a.schema.options;t.embeddeds.push({target:e.target||e.name,propertyName:n,isArray:!0===a.array,prefix:void 0!==a.prefix?a.prefix:void 0,type:()=>(null==i?void 0:i.target)||i.name}),this.transformColumnsRecursive(i,t)}))}}class ConnectionMetadataBuilder{constructor(e){this.connection=e}async buildMigrations(e){const[t,n]=j.s.splitClassesAndStrings(e);return[...t,...await(this.connection.logger,[])].map((e=>ie(e)))}async buildSubscribers(e){const[t,n]=j.s.splitClassesAndStrings(e||[]),a=[...t,...await(this.connection.logger,[])];return le().filterSubscribers(a).map((e=>ie(e.target)))}async buildEntityMetadatas(e){const[t,n]=j.s.splitClassesAndStrings(e||[]),a=t.filter((e=>!s.a.isEntitySchema(e))),i=t.filter((e=>s.a.isEntitySchema(e))),r=[...a,...await(this.connection.logger,[])];r.forEach((e=>{s.a.isEntitySchema(e)&&i.push(e)}));const o=new EntityMetadataBuilder(this.connection,le()).build(r),c=(new EntitySchemaTransformer).transform(i);return[...o,...new EntityMetadataBuilder(this.connection,c).build()]}}var se=n(1894);class SimpleConsoleLogger{constructor(e){this.options=e}logQuery(e,t,n){if("all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("query")){t&&t.length&&this.stringifyParams(t)}}logQueryError(e,t,n,a){if("all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("error")){n&&n.length&&this.stringifyParams(n)}}logQuerySlow(e,t,n,a){n&&n.length&&this.stringifyParams(n)}logSchemaBuild(e,t){"all"===this.options||Array.isArray(this.options)&&this.options.indexOf("schema")}logMigration(e,t){}log(e,t,n){switch(e){case"log":"all"===this.options||Array.isArray(this.options)&&this.options.indexOf("log");break;case"info":"all"===this.options||Array.isArray(this.options)&&this.options.indexOf("info");break;case"warn":"all"===this.options||Array.isArray(this.options)&&this.options.indexOf("warn")}}stringifyParams(e){try{return JSON.stringify(e)}catch(t){return e}}}class AdvancedConsoleLogger{constructor(e){this.options=e}logQuery(e,t,n){if("all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("query")){const n=e+(t&&t.length?" -- PARAMETERS: "+this.stringifyParams(t):"");PlatformTools.logInfo("query:",PlatformTools.highlightSql(n))}}logQueryError(e,t,n,a){if("all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("error")){const a=t+(n&&n.length?" -- PARAMETERS: "+this.stringifyParams(n):"");PlatformTools.logError("query failed:",PlatformTools.highlightSql(a)),PlatformTools.logError("error:",e)}}logQuerySlow(e,t,n,a){const i=t+(n&&n.length?" -- PARAMETERS: "+this.stringifyParams(n):"");PlatformTools.logWarn("query is slow:",PlatformTools.highlightSql(i)),PlatformTools.logWarn("execution time:",e)}logSchemaBuild(e,t){("all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("schema"))&&PlatformTools.log(e)}logMigration(e,t){PlatformTools.log(e)}log(e,t,n){switch(e){case"log":("all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("log"))&&PlatformTools.log(t);break;case"info":("all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("info"))&&PlatformTools.logInfo("INFO:",t);break;case"warn":"all"===this.options||Array.isArray(this.options)&&this.options.indexOf("warn")}}stringifyParams(e){try{return JSON.stringify(e)}catch(t){return e}}}class FileLogger extends class DummyLogger{logQuery(){throw new Error("This logger is not applicable in a browser context")}logQueryError(){throw new Error("This logger is not applicable in a browser context")}logQuerySlow(){throw new Error("This logger is not applicable in a browser context")}logSchemaBuild(){throw new Error("This logger is not applicable in a browser context")}logMigration(){throw new Error("This logger is not applicable in a browser context")}log(){throw new Error("This logger is not applicable in a browser context")}}{}var re=n(1227),oe=n.n(re);class DebugLogger{constructor(){this.debugQueryLog=oe()("typeorm:query:log"),this.debugQueryError=oe()("typeorm:query:error"),this.debugQuerySlow=oe()("typeorm:query:slow"),this.debugSchemaBuild=oe()("typeorm:schema"),this.debugMigration=oe()("typeorm:migration"),this.debugLog=oe()("typeorm:log"),this.debugInfo=oe()("typeorm:info"),this.debugWarn=oe()("typeorm:warn")}logQuery(e,t,n){this.debugQueryLog.enabled&&(this.debugQueryLog(PlatformTools.highlightSql(e)+";"),t&&t.length&&this.debugQueryLog("parameters:",t))}logQueryError(e,t,n,a){this.debugQueryError.enabled&&(this.debugQueryError(PlatformTools.highlightSql(t)+";"),n&&n.length&&this.debugQueryError("parameters:",n),this.debugQueryError("error: ",e))}logQuerySlow(e,t,n,a){this.debugQuerySlow.enabled&&(this.debugQuerySlow(PlatformTools.highlightSql(t)+";"),n&&n.length&&this.debugQuerySlow("parameters:",n),this.debugQuerySlow("execution time:",e))}logSchemaBuild(e,t){this.debugSchemaBuild.enabled&&this.debugSchemaBuild(e)}logMigration(e,t){this.debugMigration.enabled&&this.debugMigration(e)}log(e,t,n){switch(e){case"log":this.debugLog.enabled&&this.debugLog(t);break;case"info":this.debugInfo.enabled&&this.debugInfo(t);break;case"warn":this.debugWarn.enabled&&this.debugWarn(t)}}}class LoggerFactory{create(e,t){if(E.g.isObject(e))return e;if(e)switch(e){case"simple-console":return new SimpleConsoleLogger(t);case"file":return new FileLogger(t);case"advanced-console":return new AdvancedConsoleLogger(t);case"debug":return new DebugLogger}return new AdvancedConsoleLogger(t)}}class RedisQueryResultCache{constructor(e,t){this.connection=e,this.clientType=t,this.redis=this.loadRedis()}async connect(){const e=this.connection.options.cache;if("redis"===this.clientType)this.client=this.redis.createClient({...null==e?void 0:e.options,legacyMode:!0}),"object"==typeof this.connection.options.cache&&this.connection.options.cache.ignoreErrors&&this.client.on("error",(e=>{this.connection.logger.log("warn",e)})),"connect"in this.client&&await this.client.connect();else if("ioredis"===this.clientType)e&&e.port?e.options?this.client=new this.redis(e.port,e.options):this.client=new this.redis(e.port):e&&e.options?this.client=new this.redis(e.options):this.client=new this.redis;else if("ioredis/cluster"===this.clientType)if(e&&e.options&&Array.isArray(e.options))this.client=new this.redis.Cluster(e.options);else{if(!(e&&e.options&&e.options.startupNodes))throw new f.K(`options.startupNodes required for ${this.clientType}.`);this.client=new this.redis.Cluster(e.options.startupNodes,e.options.options)}}async disconnect(){return new Promise(((e,t)=>{this.client.quit(((n,a)=>{if(n)return t(n);e(),this.client=void 0}))}))}async synchronize(e){}getFromCache(e,t){return new Promise(((t,n)=>{e.identifier?this.client.get(e.identifier,((e,a)=>{if(e)return n(e);t(JSON.parse(a))})):e.query?this.client.get(e.query,((e,a)=>{if(e)return n(e);t(JSON.parse(a))})):t(void 0)}))}isExpired(e){return e.time+e.duration<(new Date).getTime()}async storeInCache(e,t,n){return new Promise(((t,n)=>{e.identifier?this.client.set(e.identifier,JSON.stringify(e),"PX",e.duration,((e,a)=>{if(e)return n(e);t()})):e.query&&this.client.set(e.query,JSON.stringify(e),"PX",e.duration,((e,a)=>{if(e)return n(e);t()}))}))}async clear(e){return new Promise(((e,t)=>{this.client.flushdb(((n,a)=>{if(n)return t(n);e()}))}))}async remove(e,t){await Promise.all(e.map((e=>this.deleteKey(e))))}deleteKey(e){return new Promise(((t,n)=>{this.client.del(e,((e,a)=>{if(e)return n(e);t()}))}))}loadRedis(){try{return"ioredis/cluster"===this.clientType?PlatformTools.load("ioredis"):PlatformTools.load(this.clientType)}catch(e){throw new f.K(`Cannot use cache because ${this.clientType} is not installed. Please run "npm i ${this.clientType} --save".`)}}}var ce=n(4586);class DbQueryResultCache{constructor(e){this.connection=e;const{schema:t}=this.connection.driver.options,n=this.connection.driver.database,a=("object"==typeof this.connection.options.cache?this.connection.options.cache:{}).tableName||"query-result-cache";this.queryResultCacheDatabase=n,this.queryResultCacheSchema=t,this.queryResultCacheTable=this.connection.driver.buildTableName(a,t,n)}async connect(){}async disconnect(){}async synchronize(e){e=this.getQueryRunner(e);const t=this.connection.driver;await e.hasTable(this.queryResultCacheTable)||await e.createTable(new Table({database:this.queryResultCacheDatabase,schema:this.queryResultCacheSchema,name:this.queryResultCacheTable,columns:[{name:"id",isPrimary:!0,isNullable:!1,type:t.normalizeType({type:t.mappedDataTypes.cacheId}),generationStrategy:"spanner"===t.options.type?"uuid":"increment",isGenerated:!0},{name:"identifier",type:t.normalizeType({type:t.mappedDataTypes.cacheIdentifier}),isNullable:!0},{name:"time",type:t.normalizeType({type:t.mappedDataTypes.cacheTime}),isPrimary:!1,isNullable:!1},{name:"duration",type:t.normalizeType({type:t.mappedDataTypes.cacheDuration}),isPrimary:!1,isNullable:!1},{name:"query",type:t.normalizeType({type:t.mappedDataTypes.cacheQuery}),isPrimary:!1,isNullable:!1},{name:"result",type:t.normalizeType({type:t.mappedDataTypes.cacheResult}),isNullable:!1}]}))}getFromCache(e,t){t=this.getQueryRunner(t);const n=this.connection.createQueryBuilder(t).select().from(this.queryResultCacheTable,"cache");return e.identifier?n.where(`${n.escape("cache")}.${n.escape("identifier")} = :identifier`).setParameters({identifier:"mssql"===this.connection.driver.options.type?new MssqlParameter(e.identifier,"nvarchar"):e.identifier}).getRawOne():e.query?"oracle"===this.connection.driver.options.type?n.where(`dbms_lob.compare(${n.escape("cache")}.${n.escape("query")}, :query) = 0`,{query:e.query}).getRawOne():n.where(`${n.escape("cache")}.${n.escape("query")} = :query`).setParameters({query:"mssql"===this.connection.driver.options.type?new MssqlParameter(e.query,"nvarchar"):e.query}).getRawOne():Promise.resolve(void 0)}isExpired(e){const t="string"==typeof e.duration?parseInt(e.duration):e.duration;return("string"==typeof e.time?parseInt(e.time):e.time)+t<(new Date).getTime()}async storeInCache(e,t,n){const a=void 0===n||"slave"===(null==n?void 0:n.getReplicationMode());(void 0===n||a)&&(n=this.connection.createQueryRunner("master"));let i=e;if("mssql"===this.connection.driver.options.type&&(i={identifier:new MssqlParameter(e.identifier,"nvarchar"),time:new MssqlParameter(e.time,"bigint"),duration:new MssqlParameter(e.duration,"int"),query:new MssqlParameter(e.query,"nvarchar"),result:new MssqlParameter(e.result,"nvarchar")}),t&&t.identifier){const e=n.manager.createQueryBuilder().update(this.queryResultCacheTable).set(i);e.where(`${e.escape("identifier")} = :condition`,{condition:i.identifier}),await e.execute()}else if(t&&t.query){const e=n.manager.createQueryBuilder().update(this.queryResultCacheTable).set(i);"oracle"===this.connection.driver.options.type?e.where('dbms_lob.compare("query", :condition) = 0',{condition:i.query}):e.where(`${e.escape("query")} = :condition`,{condition:i.query}),await e.execute()}else"spanner"!==this.connection.driver.options.type||i.id||(i.id=(0,ce.Z)()),await n.manager.createQueryBuilder().insert().into(this.queryResultCacheTable).values(i).execute();a&&await n.release()}async clear(e){return this.getQueryRunner(e).clearTable(this.queryResultCacheTable)}async remove(e,t){let n=t||this.getQueryRunner();await Promise.all(e.map((e=>{const t=n.manager.createQueryBuilder();return t.delete().from(this.queryResultCacheTable).where(`${t.escape("identifier")} = :identifier`,{identifier:e}).execute()}))),t||await n.release()}getQueryRunner(e){return e||this.connection.createQueryRunner()}}class QueryResultCacheFactory{constructor(e){this.connection=e}create(){if(!this.connection.options.cache)throw new f.K("To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }");const e=this.connection.options.cache;return e.provider&&"function"==typeof e.provider?e.provider(this.connection):"redis"===e.type||"ioredis"===e.type||"ioredis/cluster"===e.type?new RedisQueryResultCache(this.connection,e.type):new DbQueryResultCache(this.connection)}}class RelationLoader{constructor(e){this.connection=e}load(e,t,n,a){return n&&n.isReleased&&(n=void 0),e.isManyToOne||e.isOneToOneOwner?this.loadManyToOneOrOneToOneOwner(e,t,n,a):e.isOneToMany||e.isOneToOneNotOwner?this.loadOneToManyOrOneToOneNotOwner(e,t,n,a):e.isManyToManyOwner?this.loadManyToManyOwner(e,t,n,a):this.loadManyToManyNotOwner(e,t,n,a)}loadManyToOneOrOneToOneOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],s=e.entityMetadata.name,r=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),o=r.expressionMap.mainAlias.name,c=e.entityMetadata.primaryColumns,l=(e.isOwning?e.joinColumns:e.inverseRelation.joinColumns).map((t=>`${e.entityMetadata.name}.${t.propertyName} = ${o}.${t.referencedColumn.propertyName}`)).join(" AND ");if(r.innerJoin(e.entityMetadata.target,s,l),1===c.length)r.where(`${s}.${c[0].propertyPath} IN (:...${s+"_"+c[0].propertyName})`),r.setParameter(s+"_"+c[0].propertyName,i.map((e=>c[0].getEntityValue(e,!0))));else{const e=i.map(((e,t)=>c.map(((n,a)=>{const i=s+"_entity_"+t+"_"+a;return r.setParameter(i,n.getEntityValue(e,!0)),s+"."+n.propertyPath+" = :"+i})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");r.where(e)}return g.Z.joinEagerRelations(r,r.alias,r.expressionMap.mainAlias.metadata),r.getMany()}loadOneToManyOrOneToOneNotOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],s=e.inverseRelation.joinColumns,r=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.inverseRelation.entityMetadata.target,e.propertyName),o=r.expressionMap.mainAlias.name;if(1===s.length)r.where(`${o}.${s[0].propertyPath} IN (:...${o+"_"+s[0].propertyName})`),r.setParameter(o+"_"+s[0].propertyName,i.map((e=>s[0].referencedColumn.getEntityValue(e,!0))));else{const e=i.map(((e,t)=>s.map(((n,a)=>{const i=o+"_entity_"+t+"_"+a;return r.setParameter(i,n.referencedColumn.getEntityValue(e,!0)),o+"."+n.propertyPath+" = :"+i})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");r.where(e)}return g.Z.joinEagerRelations(r,r.alias,r.expressionMap.mainAlias.metadata),r.getMany()}loadManyToManyOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],s=e.joinColumns.reduce(((e,t)=>(e[t.propertyName]=i.map((e=>t.referencedColumn.getEntityValue(e,!0))),e)),{}),r=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),o=r.expressionMap.mainAlias.name,c=e.junctionEntityMetadata.tableName,l=e.joinColumns.map((e=>`${c}.${e.propertyName} IN (:...${e.propertyName})`)),u=e.inverseJoinColumns.map((e=>`${c}.${e.propertyName}=${o}.${e.referencedColumn.propertyName}`));return r.innerJoin(c,c,[...l,...u].join(" AND ")).setParameters(s),g.Z.joinEagerRelations(r,r.alias,r.expressionMap.mainAlias.metadata),r.getMany()}loadManyToManyNotOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],s=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),r=s.expressionMap.mainAlias.name,o=e.junctionEntityMetadata.tableName,c=e.inverseRelation.joinColumns.map((e=>`${o}.${e.propertyName} = ${r}.${e.referencedColumn.propertyName}`)),l=e.inverseRelation.inverseJoinColumns.map((e=>`${o}.${e.propertyName} IN (:...${e.propertyName})`)),u=e.inverseRelation.inverseJoinColumns.reduce(((e,t)=>(e[t.propertyName]=i.map((e=>t.referencedColumn.getEntityValue(e,!0))),e)),{});return s.innerJoin(o,o,[...c,...l].join(" AND ")).setParameters(u),g.Z.joinEagerRelations(s,s.alias,s.expressionMap.mainAlias.metadata),s.getMany()}enableLazyLoad(e,t,n){const a=this,i="__"+e.propertyName+"__",s="__promise_"+e.propertyName+"__",r="__has_"+e.propertyName+"__",o=(e,t)=>(e[i]=t,e[r]=!0,delete e[s],t),c=(e,t)=>(delete e[r],delete e[i],e[s]=t,t.then((n=>e[s]===t?o(e,n):n)),t);Object.defineProperty(t,e.propertyName,{get:function(){if(!0===this[r]||void 0!==this[i])return Promise.resolve(this[i]);if(this[s])return this[s];const t=a.load(e,this,n).then((t=>e.isOneToOne||e.isManyToOne?0===t.length?null:t[0]:t));return c(this,t)},set:function(e){e instanceof Promise?c(this,e):o(this,e)},configurable:!0})}}class RelationIdLoader{constructor(e){this.connection=e}load(e,t,n){const a=Array.isArray(t)?t:[t],i=Array.isArray(n)?n:n?[n]:void 0;return e.isManyToMany?this.loadForManyToMany(e,a,i):e.isManyToOne||e.isOneToOneOwner?this.loadForManyToOneAndOneToOneOwner(e,a,i):this.loadForOneToManyAndOneToOneNotOwner(e,a,i)}async loadManyToManyRelationIdsAndGroup(e,t,n,a){const i=e.isManyToMany||e.isOneToMany,s=Array.isArray(t)?t:[t];if(!n&&!(n=await this.connection.relationLoader.load(e,t,void 0,a)).length)return s.map((e=>({entity:e,related:i?[]:void 0})));const r=await this.load(e,t,n),o=Array.isArray(n)?n:[n];let c=[],l=[];return e.isManyToManyOwner?(c=e.junctionEntityMetadata.inverseColumns.map((e=>e.referencedColumn)),l=e.junctionEntityMetadata.ownerColumns.map((e=>e.referencedColumn))):e.isManyToManyNotOwner?(c=e.junctionEntityMetadata.ownerColumns.map((e=>e.referencedColumn)),l=e.junctionEntityMetadata.inverseColumns.map((e=>e.referencedColumn))):e.isManyToOne||e.isOneToOneOwner?(c=e.joinColumns.map((e=>e.referencedColumn)),l=e.entityMetadata.primaryColumns):(e.isOneToMany||e.isOneToOneNotOwner)&&(c=e.inverseRelation.entityMetadata.primaryColumns,l=e.inverseRelation.joinColumns.map((e=>e.referencedColumn))),s.map((t=>{const n={entity:t,related:i?[]:void 0},a=r.filter((e=>l.every((n=>n.compareEntityValue(t,e[n.entityMetadata.name+"_"+n.propertyAliasName])))));return a.length?(o.forEach((t=>{a.forEach((a=>{c.every((n=>n.compareEntityValue(t,a[n.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+n.propertyPath.replace(".","_")])))&&(i?n.related.push(t):n.related=t)}))})),n):n}))}loadForManyToMany(e,t,n){const a=e.junctionEntityMetadata,i=a.name,s=e.isOwning?a.ownerColumns:a.inverseColumns,r=e.isOwning?a.inverseColumns:a.ownerColumns,o=this.connection.createQueryBuilder();s.forEach((e=>{const t=e.referencedColumn.entityMetadata.name+"_"+e.referencedColumn.propertyPath.replace(".","_");o.addSelect(i+"."+e.propertyPath,t)})),r.forEach((t=>{const n=t.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+t.referencedColumn.propertyPath.replace(".","_");o.addSelect(i+"."+t.propertyPath,n)}));let c="";if(1===s.length){const e=t.map((e=>s[0].referencedColumn.getEntityValue(e)));e.every((e=>"number"==typeof e))?c=`${i}.${s[0].propertyPath} IN (${e.join(", ")})`:(o.setParameter("values1",e),c=i+"."+s[0].propertyPath+" IN (:...values1)")}else c="("+t.map(((e,t)=>s.map((n=>{const a="entity1_"+t+"_"+n.propertyName;return o.setParameter(a,n.referencedColumn.getEntityValue(e)),i+"."+n.propertyPath+" = :"+a})).join(" AND "))).map((e=>"("+e+")")).join(" OR ")+")";let l="";if(n)if(1===r.length){const e=n.map((e=>r[0].referencedColumn.getEntityValue(e)));e.every((e=>"number"==typeof e))?l=`${i}.${r[0].propertyPath} IN (${e.join(", ")})`:(o.setParameter("values2",e),l=i+"."+r[0].propertyPath+" IN (:...values2)")}else l="("+n.map(((e,t)=>r.map((n=>{const a="entity2_"+t+"_"+n.propertyName;return o.setParameter(a,n.referencedColumn.getEntityValue(e)),i+"."+n.propertyPath+" = :"+a})).join(" AND "))).map((e=>"("+e+")")).join(" OR ")+")";const u=[c,l].filter((e=>e.length>0)).join(" AND ");return o.from(a.target,i).where(u).getRawMany()}loadForManyToOneAndOneToOneOwner(e,t,n){const a=e.entityMetadata.targetName,i=e.joinColumns.every((t=>!!e.entityMetadata.nonVirtualColumns.find((e=>e===t))));if(n&&i){let a=[];if(t.forEach((t=>{let i={};e.entityMetadata.primaryColumns.forEach((e=>{const n=e.entityMetadata.name+"_"+e.propertyPath.replace(".","_");i[n]=e.getEntityValue(t)})),n.forEach((n=>{e.joinColumns.forEach((a=>{const s=a.getEntityValue(t),r=a.referencedColumn.getEntityValue(n);if(void 0!==s&&void 0!==r&&s===r){const t=a.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+a.referencedColumn.propertyPath.replace(".","_");i[t]=r}}))})),Object.keys(i).length===e.entityMetadata.primaryColumns.length+e.joinColumns.length&&a.push(i)})),a.length===t.length)return Promise.resolve(a)}const s=this.connection.createQueryBuilder();e.entityMetadata.primaryColumns.forEach((e=>{const t=e.entityMetadata.name+"_"+e.propertyPath.replace(".","_");s.addSelect(a+"."+e.propertyPath,t)})),e.joinColumns.forEach((t=>{const n=t.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+t.referencedColumn.propertyPath.replace(".","_");s.addSelect(a+"."+t.propertyPath,n)}));let r="";if(1===e.entityMetadata.primaryColumns.length){const n=t.map((t=>e.entityMetadata.primaryColumns[0].getEntityValue(t)));n.every((e=>"number"==typeof e))?r=`${a}.${e.entityMetadata.primaryColumns[0].propertyPath} IN (${n.join(", ")})`:(s.setParameter("values",n),r=a+"."+e.entityMetadata.primaryColumns[0].propertyPath+" IN (:...values)")}else r=t.map(((t,n)=>e.entityMetadata.primaryColumns.map(((e,i)=>{const r="entity"+n+"_"+i;return s.setParameter(r,e.getEntityValue(t)),a+"."+e.propertyPath+" = :"+r})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");return s.from(e.entityMetadata.target,a).where(r).getRawMany()}loadForOneToManyAndOneToOneNotOwner(e,t,n){if((e=e.inverseRelation).entityMetadata.primaryColumns.length===e.joinColumns.length){if(e.entityMetadata.primaryColumns.every((t=>-1!==e.joinColumns.indexOf(t))))return Promise.resolve(t.map((t=>{const n={};return e.joinColumns.forEach((function(a){const i=a.referencedColumn.getEntityValue(t),s=a.referencedColumn.entityMetadata.name+"_"+a.referencedColumn.propertyPath.replace(".","_"),r=a.entityMetadata.name+"_"+e.inverseRelation.propertyPath.replace(".","_")+"_"+a.propertyPath.replace(".","_");n[s]=i,n[r]=i})),n})))}const a=e.entityMetadata.targetName,i=this.connection.createQueryBuilder();e.entityMetadata.primaryColumns.forEach((t=>{const n=t.entityMetadata.name+"_"+e.inverseRelation.propertyPath.replace(".","_")+"_"+t.propertyPath.replace(".","_");i.addSelect(a+"."+t.propertyPath,n)})),e.joinColumns.forEach((e=>{const t=e.referencedColumn.entityMetadata.name+"_"+e.referencedColumn.propertyPath.replace(".","_");i.addSelect(a+"."+e.propertyPath,t)}));let s="";if(1===e.joinColumns.length){const n=t.map((t=>e.joinColumns[0].referencedColumn.getEntityValue(t)));n.every((e=>"number"==typeof e))?s=`${a}.${e.joinColumns[0].propertyPath} IN (${n.join(", ")})`:(i.setParameter("values",n),s=a+"."+e.joinColumns[0].propertyPath+" IN (:...values)")}else s=t.map(((t,n)=>e.joinColumns.map(((e,s)=>{const r="entity"+n+"_"+s;return i.setParameter(r,e.referencedColumn.getEntityValue(t)),a+"."+e.propertyPath+" = :"+r})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");return i.from(e.entityMetadata.target,a).where(s).getRawMany()}}class DataSource_DataSource{constructor(e){this["@instanceof"]=Symbol.for("DataSource"),this.migrations=[],this.subscribers=[],this.entityMetadatas=[],this.name=e.name||"default",this.options=e,this.logger=(new LoggerFactory).create(this.options.logger,this.options.logging),this.driver=(new DriverFactory).create(this),this.manager=this.createEntityManager(),this.namingStrategy=e.namingStrategy||new DefaultNamingStrategy,this.metadataTableName=e.metadataTableName||"typeorm_metadata",this.queryResultCache=e.cache?new QueryResultCacheFactory(this).create():void 0,this.relationLoader=new RelationLoader(this),this.relationIdLoader=new RelationIdLoader(this),this.isInitialized=!1}get isConnected(){return this.isInitialized}get mongoManager(){if(!s.a.isMongoEntityManager(this.manager))throw new i.K_("MongoEntityManager is only available for MongoDB databases.");return this.manager}get sqljsManager(){if(!s.a.isSqljsEntityManager(this.manager))throw new i.K_("SqljsEntityManager is only available for Sqljs databases.");return this.manager}setOptions(e){return Object.assign(this.options,e),(e.logger||e.logging)&&(this.logger=(new LoggerFactory).create(e.logger||this.options.logger,e.logging||this.options.logging)),e.namingStrategy&&(this.namingStrategy=e.namingStrategy),e.cache&&(this.queryResultCache=new QueryResultCacheFactory(this).create()),this}async initialize(){if(this.isInitialized)throw new i.Lo(this.name);await this.driver.connect(),this.queryResultCache&&await this.queryResultCache.connect(),E.g.assign(this,{isInitialized:!0});try{await this.buildMetadatas(),await this.driver.afterConnect(),this.options.dropSchema&&await this.dropDatabase(),this.options.migrationsRun&&await this.runMigrations({transaction:this.options.migrationsTransactionMode}),this.options.synchronize&&await this.synchronize()}catch(e){throw await this.close(),e}return this}async connect(){return this.initialize()}async destroy(){if(!this.isInitialized)throw new i.$X(this.name);await this.driver.disconnect(),this.queryResultCache&&await this.queryResultCache.disconnect(),E.g.assign(this,{isInitialized:!1})}async close(){return this.destroy()}async synchronize(e=!1){if(!this.isInitialized)throw new i.$X(this.name);e&&await this.dropDatabase();const t=this.driver.createSchemaBuilder();await t.build()}async dropDatabase(){const e=this.createQueryRunner();try{if("mssql"===this.driver.options.type||d.z.isMySQLFamily(this.driver)||"aurora-mysql"===this.driver.options.type||d.z.isSQLiteFamily(this.driver)){const t=[];if(this.entityMetadatas.forEach((e=>{e.database&&-1===t.indexOf(e.database)&&t.push(e.database)})),0===t.length&&this.driver.database&&t.push(this.driver.database),0===t.length)await e.clearDatabase();else for(const n of t)await e.clearDatabase(n)}else await e.clearDatabase()}finally{await e.release()}}async runMigrations(e){if(!this.isInitialized)throw new i.$X(this.name);const t=new MigrationExecutor(this);t.transaction=e&&e.transaction||"all";return await t.executePendingMigrations()}async undoLastMigration(e){if(!this.isInitialized)throw new i.$X(this.name);const t=new MigrationExecutor(this);t.transaction=e&&e.transaction||"all",await t.undoLastMigration()}async showMigrations(){if(!this.isInitialized)throw new i.$X(this.name);const e=new MigrationExecutor(this);return await e.showMigrations()}hasMetadata(e){return!!this.findMetadata(e)}getMetadata(e){const t=this.findMetadata(e);if(!t)throw new i.tG(e);return t}getRepository(e){return this.manager.getRepository(e)}getTreeRepository(e){return this.manager.getTreeRepository(e)}getMongoRepository(e){if("mongodb"!==this.driver.options.type)throw new i.K_("You can use getMongoRepository only for MongoDB connections.");return this.manager.getRepository(e)}getCustomRepository(e){return this.manager.getCustomRepository(e)}async transaction(e,t){return this.manager.transaction(e,t)}async query(e,t,n){if(s.a.isMongoEntityManager(this.manager))throw new i.K_("Queries aren't supported by MongoDB.");if(n&&n.isReleased)throw new i.iU;const a=n||this.createQueryRunner();try{return await a.query(e,t)}finally{n||await a.release()}}createQueryBuilder(e,t,n){if(s.a.isMongoEntityManager(this.manager))throw new i.K_("Query Builder is not supported by MongoDB.");if(t){t=d.z.buildAlias(this.driver,t);const a=this.getMetadata(e);return new se.Z(this,n).select(t).from(a.target,t)}return new se.Z(this,e)}createQueryRunner(e="master"){const t=this.driver.createQueryRunner(e),n=this.createEntityManager(t);return Object.assign(t,{manager:n}),t}getManyToManyMetadata(e,t){const n=this.getMetadata(e).findRelationWithPropertyPath(t);if(!n)throw new i.K_(`Relation "${t}" was not found in ${e} entity.`);if(!n.isManyToMany)throw new i.K_(`Relation "${e}#${t}" does not have a many-to-many relationship.You can use this method only on many-to-many relations.`);return n.junctionEntityMetadata}createEntityManager(e){return(new EntityManagerFactory).create(this,e)}findMetadata(e){return this.entityMetadatas.find((t=>"function"==typeof e&&`${t.target}`==`${e}`||(s.a.isEntitySchema(e)?t.name===e.options.name:"string"==typeof e?-1!==e.indexOf(".")?t.tablePath===e:t.name===e||t.tableName===e:!(!E.g.isObject(e)||"string"!=typeof e.name)&&(-1!==e.name.indexOf(".")?t.tablePath===e.name:t.name===e.name||t.tableName===e.name))))}async buildMetadatas(){const e=new ConnectionMetadataBuilder(this),t=new EntityMetadataValidator,n=E.g.mixedListToArray(this.options.subscribers||[]),a=await e.buildSubscribers(n);E.g.assign(this,{subscribers:a});const i=E.g.mixedListToArray(this.options.entities||[]),r=await e.buildEntityMetadatas(i);E.g.assign(this,{entityMetadatas:r});const o=E.g.mixedListToArray(this.options.migrations||[]),c=await e.buildMigrations(o);E.g.assign(this,{migrations:c}),t.validateMany(this.entityMetadatas.filter((e=>"view"!==e.tableType)),this.driver);for(let e of r)s.a.isBaseEntityConstructor(e.target)&&e.target.useDataSource(this)}}n(3972),n(7497);function le(){const e=PlatformTools.getGlobalVariable();return e.typeormMetadataArgsStorage||(e.typeormMetadataArgsStorage=new MetadataArgsStorage),e.typeormMetadataArgsStorage}var ue=n(8974);function he(e,t){return function(n,a){let i;"string"==typeof e||"function"==typeof e?i=e:e&&(t=e,i=e.type),t||(t={});const s=Reflect&&Reflect.getMetadata?Reflect.getMetadata("design:type",n,a):void 0;if(!i&&s&&(i=s),!t.type&&i&&(t.type=i),"hstore"!==t.type||t.hstoreType||(t.hstoreType=s===Object?"object":"string"),"function"==typeof e)le().embeddeds.push({target:n.constructor,propertyName:a,isArray:s===Array||!0===t.array,prefix:void 0!==t.prefix?t.prefix:void 0,type:e});else{if(!t.type)throw new ue.s(n,a);!0===t.unique&&le().uniques.push({target:n.constructor,columns:[a]}),le().columns.push({target:n.constructor,propertyName:a,mode:"regular",options:t}),t.generated&&le().generations.push({target:n.constructor,propertyName:a,strategy:"string"==typeof t.generated?t.generated:"increment"})}}}function de(e){return function(t,n){le().columns.push({target:t.constructor,propertyName:n,mode:"createDate",options:e||{}})}}function pe(e,t){const n={};let a;return e?("string"==typeof e&&(a=e),E.g.isObject(e)&&(a="increment",Object.assign(n,e))):a="increment",E.g.isObject(t)&&Object.assign(n,t),function(e,t){n.type||("increment"===a||"identity"===a?n.type=Number:"uuid"===a?n.type="uuid":"rowid"===a&&(n.type="int")),n.primary=!0,le().columns.push({target:e.constructor,propertyName:t,mode:"regular",options:n}),le().generations.push({target:e.constructor,propertyName:t,strategy:a})}}var me=n(8147);function ye(e,t){return function(n,a){let i;"string"==typeof e||e===String||e===Boolean||e===Number?i=e:t=Object.assign({},e),t||(t={});const s=Reflect&&Reflect.getMetadata?Reflect.getMetadata("design:type",n,a):void 0;if(!i&&s&&(i=s),!t.type&&i&&(t.type=i),!t.type)throw new ue.s(n,a);if(t.nullable)throw new me.I(n,a);t.primary=!0,le().columns.push({target:n.constructor,propertyName:a,mode:"regular",options:t}),t.generated&&le().generations.push({target:n.constructor,propertyName:a,strategy:"string"==typeof t.generated?t.generated:"increment"})}}function fe(e){return function(t,n){le().columns.push({target:t.constructor,propertyName:n,mode:"updateDate",options:e||{}})}}function ge(e,t){const n=(E.g.isObject(e)?e:t)||{},a="string"==typeof e?e:n.name;return function(e){le().tables.push({target:e,name:a,type:"regular",orderBy:n.orderBy?n.orderBy:void 0,engine:n.engine?n.engine:void 0,database:n.database?n.database:void 0,schema:n.schema?n.schema:void 0,synchronize:n.synchronize,withoutRowid:n.withoutRowid})}}var Ee=n(8518);n(5627),n(8876),n(9362),n(8394),n(1655)},8876:(e,t,n)=>{"use strict";n.d(t,{T:()=>DeleteQueryBuilder});var a=n(5627);var i=n(581),s=n(7378);class DeleteQueryBuilder extends a.z{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("DeleteQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createDeleteExpression(),e.trim()}async execute(){const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();let a=!1;try{!0===this.expressionMap.useTransaction&&!1===n.isTransactionActive&&(await n.startTransaction(),a=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await n.broadcaster.broadcast("BeforeRemove",this.expressionMap.mainAlias.metadata);const i=await n.query(e,t,!0),s=class DeleteResult{static from(e){const t=new this;return t.raw=e.records,t.affected=e.affected,t}}.from(i);return!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await n.broadcaster.broadcast("AfterRemove",this.expressionMap.mainAlias.metadata),a&&await n.commitTransaction(),s}catch(e){if(a)try{await n.rollbackTransaction()}catch(e){}throw e}finally{n!==this.queryRunner&&await n.release()}}from(e,t){e=s.a.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("delete"))throw new i.y;return this.expressionMap.returning=e,this}createDeleteExpression(){const e=this.getTableName(this.getMainTableName()),t=this.createWhereExpression(),n=this.createReturningExpression("delete");return""===n?`DELETE FROM ${e}${t}`:"mssql"===this.connection.driver.options.type?`DELETE FROM ${e} OUTPUT ${n}${t}`:`DELETE FROM ${e}${t} RETURNING ${n}`}}},9362:(e,t,n)=>{"use strict";n.d(t,{O:()=>InsertQueryBuilder});var a=n(5627);class InsertResult{constructor(){this.identifiers=[],this.generatedMaps=[]}static from(e){const t=new this;return t.raw=e.raw,t}}var i=n(581),s=n(4606),r=n(6120),o=n(1444),c=n(1507),l=n(4586),u=n(7677),h=n(7264),d=n(7378);class InsertQueryBuilder extends a.z{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("InsertQueryBuilder")}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createInsertExpression(),e.trim()}async execute(){const e=this.getValueSets();if(0===e.length)return new InsertResult;const t=this.obtainQueryRunner();let n=!1;try{if(!0===this.expressionMap.useTransaction&&!1===t.isTransactionActive&&(await t.startTransaction(),n=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata){const n=new o.D;e.forEach((e=>{t.broadcaster.broadcastBeforeInsertEvent(n,this.expressionMap.mainAlias.metadata,e)})),await n.wait()}let a=null,i=null;const s=new r.v(t,this.expressionMap),c=[];if(Array.isArray(this.expressionMap.returning)&&this.expressionMap.mainAlias.hasMetadata)for(const e of this.expressionMap.returning)c.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(e));!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&(e.length>1&&"oracle"===this.connection.driver.options.type||(this.expressionMap.extraReturningColumns=this.expressionMap.mainAlias.metadata.getInsertionReturningColumns()),c.push(...this.expressionMap.extraReturningColumns.filter((e=>!c.includes(e))))),c.length>0&&"mssql"===this.connection.driver.options.type&&(a=this.connection.driver.buildTableVariableDeclaration("@OutputTable",c),i="SELECT * FROM @OutputTable");const[l,u]=this.getQueryAndParameters(),h=[a,l,i].filter((e=>null!=e)).join(";\n\n"),d=await t.query(h,u,!0),p=InsertResult.from(d);if(!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&await s.insert(p,e),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata){const n=new o.D;e.forEach((e=>{t.broadcaster.broadcastAfterInsertEvent(n,this.expressionMap.mainAlias.metadata,e)})),await n.wait()}return n&&await t.commitTransaction(),p}catch(e){if(n)try{await t.rollbackTransaction()}catch(e){}throw e}finally{t!==this.queryRunner&&await t.release()}}into(e,t){e=d.a.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e);return this.expressionMap.setMainAlias(n),this.expressionMap.insertColumns=t||[],this}values(e){return this.expressionMap.valuesSet=e,this}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("insert"))throw new i.y;return this.expressionMap.returning=e,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}onConflict(e){return this.expressionMap.onConflict=e,this}orIgnore(e=!0){return this.expressionMap.onIgnore=!!e,this}orUpdate(e,t,n){return Array.isArray(e)?(this.expressionMap.onUpdate={overwrite:e,conflict:t,skipUpdateIfNoValuesChanged:null==n?void 0:n.skipUpdateIfNoValuesChanged},this):(this.expressionMap.onUpdate={conflict:null==e?void 0:e.conflict_target,columns:null==e?void 0:e.columns,overwrite:null==e?void 0:e.overwrite,skipUpdateIfNoValuesChanged:null==n?void 0:n.skipUpdateIfNoValuesChanged},this)}createInsertExpression(){const e=this.getTableName(this.getMainTableName()),t=this.createValuesExpression(),n="oracle"===this.connection.driver.options.type&&this.getValueSets().length>1?null:this.createReturningExpression("insert"),a=this.createColumnNamesExpression();let i="INSERT ";if((u.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type)&&(i+=""+(this.expressionMap.onIgnore?" IGNORE ":"")),i+=`INTO ${e}`,this.alias!==this.getMainTableName()&&u.z.isPostgresFamily(this.connection.driver)&&(i+=` AS "${this.alias}"`),a?i+=`(${a})`:t||!u.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||(i+="()"),n&&"mssql"===this.connection.driver.options.type&&(i+=` OUTPUT ${n}`),t?"oracle"===this.connection.driver.options.type&&this.getValueSets().length>1?i+=` ${t}`:i+=` VALUES ${t}`:u.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type?i+=" VALUES ()":i+=" DEFAULT VALUES","on-conflict-do-update"===this.connection.driver.supportedUpsertType){if(this.expressionMap.onIgnore)i+=" ON CONFLICT DO NOTHING ";else if(this.expressionMap.onConflict)i+=` ON CONFLICT ${this.expressionMap.onConflict} `;else if(this.expressionMap.onUpdate){const{overwrite:t,columns:n,conflict:a,skipUpdateIfNoValuesChanged:s}=this.expressionMap.onUpdate;let r="ON CONFLICT";Array.isArray(a)?r+=` ( ${a.map((e=>this.escape(e))).join(", ")} )`:a&&(r+=` ON CONSTRAINT ${this.escape(a)}`),Array.isArray(t)?(i+=` ${r} DO UPDATE SET `,i+=null==t?void 0:t.map((e=>`${this.escape(e)} = EXCLUDED.${this.escape(e)}`)).join(", "),i+=" "):n&&(i+=` ${r} DO UPDATE SET `,i+=n.map((e=>`${this.escape(e)} = :${e}`)).join(", "),i+=" "),Array.isArray(t)&&s&&u.z.isPostgresFamily(this.connection.driver)&&(i+=" WHERE (",i+=t.map((t=>`${e}.${this.escape(t)} IS DISTINCT FROM EXCLUDED.${this.escape(t)}`)).join(" OR "),i+=") ")}}else if("on-duplicate-key-update"===this.connection.driver.supportedUpsertType){if(this.expressionMap.onUpdate){const{overwrite:e,columns:t}=this.expressionMap.onUpdate;Array.isArray(e)?(i+=" ON DUPLICATE KEY UPDATE ",i+=e.map((e=>`${this.escape(e)} = VALUES(${this.escape(e)})`)).join(", "),i+=" "):Array.isArray(t)&&(i+=" ON DUPLICATE KEY UPDATE ",i+=t.map((e=>`${this.escape(e)} = :${e}`)).join(", "),i+=" ")}}else if(this.expressionMap.onUpdate)throw new c.K_("onUpdate is not supported by the current database driver");return n&&(u.z.isPostgresFamily(this.connection.driver)||"oracle"===this.connection.driver.options.type||"cockroachdb"===this.connection.driver.options.type||u.z.isMySQLFamily(this.connection.driver))&&(i+=` RETURNING ${n}`),"mssql"===this.connection.driver.options.type&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.mainAlias.metadata.columns.filter((e=>this.expressionMap.insertColumns.length>0?-1!==this.expressionMap.insertColumns.indexOf(e.propertyPath):e.isInsert)).some((e=>this.isOverridingAutoIncrementBehavior(e)))&&(i=`SET IDENTITY_INSERT ${e} ON; ${i}; SET IDENTITY_INSERT ${e} OFF`),i}getInsertedColumns(){return this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata.columns.filter((e=>this.expressionMap.insertColumns.length?-1!==this.expressionMap.insertColumns.indexOf(e.propertyPath):!!e.isInsert&&!!(!e.isGenerated||"increment"!==e.generationStrategy||"spanner"===this.connection.driver.options.type||"oracle"===this.connection.driver.options.type||u.z.isSQLiteFamily(this.connection.driver)||u.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"mssql"===this.connection.driver.options.type&&this.isOverridingAutoIncrementBehavior(e)))):[]}createColumnNamesExpression(){const e=this.getInsertedColumns();if(e.length>0)return e.map((e=>this.escape(e.databaseName))).join(", ");if(!this.expressionMap.mainAlias.hasMetadata&&!this.expressionMap.insertColumns.length){const e=this.getValueSets();if(1===e.length)return Object.keys(e[0]).map((e=>this.escape(e))).join(", ")}return this.expressionMap.insertColumns.map((e=>this.escape(e))).join(", ")}createValuesExpression(){const e=this.getValueSets(),t=this.getInsertedColumns();if(t.length>0){let n="";return e.forEach(((a,i)=>{t.forEach(((s,r)=>{0===r&&("oracle"===this.connection.driver.options.type&&e.length>1||"sap"===this.connection.driver.options.type&&e.length>1?n+=" SELECT ":n+="(");let o=s.getEntityValue(a);if("function"!=typeof o&&(o=this.connection.driver.preparePersistentValue(o,s)),s.isVersion&&void 0===o)n+="1";else if(s.isDiscriminator)n+=this.createParameter(this.expressionMap.mainAlias.metadata.discriminatorValue);else if(s.isGenerated&&"uuid"===s.generationStrategy&&!this.connection.driver.isUUIDGenerationSupported()&&void 0===o)o=(0,l.Z)(),n+=this.createParameter(o),i in this.expressionMap.locallyGenerated||(this.expressionMap.locallyGenerated[i]={}),s.setEntityValue(this.expressionMap.locallyGenerated[i],o);else if(void 0===o)"oracle"===this.connection.driver.options.type&&e.length>1||u.z.isSQLiteFamily(this.connection.driver)||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?void 0!==s.default&&null!==s.default?n+=this.connection.driver.normalizeDefault(s):n+="NULL":n+="DEFAULT";else if(null===o&&"spanner"===this.connection.driver.options.type)n+="NULL";else if("function"==typeof o)n+=o();else{"mssql"===this.connection.driver.options.type&&(o=this.connection.driver.parametrizeValue(s,o));const e=this.createParameter(o);if(!u.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||-1===this.connection.driver.spatialTypes.indexOf(s.type))u.z.isPostgresFamily(this.connection.driver)&&-1!==this.connection.driver.spatialTypes.indexOf(s.type)?null!=s.srid?n+=`ST_SetSRID(ST_GeomFromGeoJSON(${e}), ${s.srid})::${s.type}`:n+=`ST_GeomFromGeoJSON(${e})::${s.type}`:"mssql"===this.connection.driver.options.type&&-1!==this.connection.driver.spatialTypes.indexOf(s.type)?n+=s.type+"::STGeomFromText("+e+", "+(s.srid||"0")+")":n+=e;else{const t=this.connection.driver.options.legacySpatialSupport?"GeomFromText":"ST_GeomFromText";null!=s.srid?n+=`${t}(${e}, ${s.srid})`:n+=`${t}(${e})`}}r===t.length-1?i===e.length-1?"oracle"===this.connection.driver.options.type&&e.length>1?n+=" FROM DUAL ":"sap"===this.connection.driver.options.type&&e.length>1?n+=" FROM dummy ":n+=")":"oracle"===this.connection.driver.options.type&&e.length>1?n+=" FROM DUAL UNION ALL ":"sap"===this.connection.driver.options.type&&e.length>1?n+=" FROM dummy UNION ALL ":n+="), ":n+=", "}))})),"()"===n?"":n}{let t="";return e.forEach(((n,a)=>{Object.keys(n).forEach(((i,s)=>{0===s&&(t+="(");const r=n[i];"function"==typeof r?t+=r():void 0===r?"oracle"===this.connection.driver.options.type&&e.length>1||u.z.isSQLiteFamily(this.connection.driver)||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?t+="NULL":t+="DEFAULT":null===r&&"spanner"===this.connection.driver.options.type||(t+=this.createParameter(r)),s===Object.keys(n).length-1?a===e.length-1?t+=")":t+="), ":t+=", "}))})),"()"===t?"":t}}getValueSets(){if(Array.isArray(this.expressionMap.valuesSet))return this.expressionMap.valuesSet;if(h.g.isObject(this.expressionMap.valuesSet))return[this.expressionMap.valuesSet];throw new s.D}isOverridingAutoIncrementBehavior(e){return e.isPrimary&&e.isGenerated&&"increment"===e.generationStrategy&&this.getValueSets().some((t=>void 0!==e.getEntityValue(t)&&null!==e.getEntityValue(t)))}}},5784:(e,t,n)=>{"use strict";n.d(t,{k:()=>JoinAttribute});var a=n(2749),i=n(7264),s=n(1507),r=n(7677);class JoinAttribute{constructor(e,t,n){this.connection=e,this.queryExpressionMap=t,this.isSelectedEvaluated=!1,this.relationEvaluated=!1,i.g.assign(this,n||{})}get isMany(){return void 0!==this.isMappingMany?this.isMappingMany:!!this.relation&&(this.relation.isManyToMany||this.relation.isOneToMany)}get isSelected(){if(!this.isSelectedEvaluated){let e=()=>{for(const e of this.queryExpressionMap.selects){if(e.selection===this.alias.name)return!0;if(this.metadata&&this.metadata.columns.find((t=>e.selection===this.alias.name+"."+t.propertyPath)))return!0}return!1};this.isSelectedCache=e(),this.isSelectedEvaluated=!0}return this.isSelectedCache}get tablePath(){return this.metadata?this.metadata.tablePath:this.entityOrProperty}get parentAlias(){if(a.G.isAliasProperty(this.entityOrProperty))return this.entityOrProperty.substr(0,this.entityOrProperty.indexOf("."))}get relationPropertyPath(){if(a.G.isAliasProperty(this.entityOrProperty))return this.entityOrProperty.substr(this.entityOrProperty.indexOf(".")+1)}get relation(){if(!this.relationEvaluated){let e=()=>{if(!a.G.isAliasProperty(this.entityOrProperty))return;const e=this.queryExpressionMap.findAliasByName(this.parentAlias);let t=e.metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(t)return t;if(e.metadata.parentEntityMetadata&&(t=e.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath),t))return t;throw new s.K_(`Relation with property path ${this.relationPropertyPath} in entity was not found.`)};this.relationCache=e.bind(this)(),this.relationEvaluated=!0}return this.relationCache}get metadata(){return this.relation?this.relation.inverseEntityMetadata:this.connection.hasMetadata(this.entityOrProperty)?this.connection.getMetadata(this.entityOrProperty):void 0}get junctionAlias(){if(!this.relation)throw new s.K_("Cannot get junction table for join without relation.");return this.relation.isOwning?r.z.buildAlias(this.connection.driver,this.parentAlias,this.alias.name):r.z.buildAlias(this.connection.driver,this.alias.name,this.parentAlias)}get mapToPropertyParentAlias(){if(this.mapToProperty)return this.mapToProperty.split(".")[0]}get mapToPropertyPropertyName(){if(this.mapToProperty)return this.mapToProperty.split(".")[1]}}},5627:(e,t,n)=>{"use strict";n.d(t,{z:()=>QueryBuilder});var a=n(7264),i=n(1507);class Alias{constructor(e){a.g.assign(this,e||{})}get target(){return this.metadata.target}get hasMetadata(){return!!this._metadata}set metadata(e){this._metadata=e}get metadata(){if(!this._metadata)throw new i.K_(`Cannot get entity metadata for the given alias "${this.name}"`);return this._metadata}}var s=n(5784),r=n(6869),o=n(58);class QueryExpressionMap{constructor(e){this.connection=e,this.relationLoadStrategy="join",this.queryEntity=!1,this.aliases=[],this.queryType="select",this.selects=[],this.maxExecutionTime=0,this.selectDistinct=!1,this.selectDistinctOn=[],this.extraReturningColumns=[],this.onConflict="",this.onIgnore=!1,this.joinAttributes=[],this.relationIdAttributes=[],this.relationCountAttributes=[],this.wheres=[],this.havings=[],this.orderBys={},this.groupBys=[],this.withDeleted=!1,this.parameters={},this.disableEscaping=!0,this.enableRelationIdValues=!1,this.extraAppendedAndWhereCondition="",this.subQuery=!1,this.aliasNamePrefixingEnabled=!0,this.cache=!1,this.options=[],this.insertColumns=[],this.whereEntities=[],this.updateEntity=!0,this.callListeners=!0,this.useTransaction=!1,this.nativeParameters={},this.locallyGenerated={},this.commonTableExpressions=[],e.options.relationLoadStrategy&&(this.relationLoadStrategy=e.options.relationLoadStrategy)}get allOrderBys(){if(!Object.keys(this.orderBys).length&&this.mainAlias.hasMetadata&&-1===this.options.indexOf("disable-global-order")){const e=this.mainAlias.metadata.orderBy||{};return Object.keys(e).reduce(((t,n)=>(t[this.mainAlias.name+"."+n]=e[n],t)),{})}return this.orderBys}setMainAlias(e){return this.mainAlias=e,e}createAlias(e){let t=e.name;!t&&e.tablePath&&(t=e.tablePath),t||"function"!=typeof e.target||(t=e.target.name),t||"string"!=typeof e.target||(t=e.target);const n=new Alias;return n.type=e.type,t&&(n.name=t),e.metadata&&(n.metadata=e.metadata),e.target&&!n.hasMetadata&&(n.metadata=this.connection.getMetadata(e.target)),e.tablePath&&(n.tablePath=e.tablePath),e.subQuery&&(n.subQuery=e.subQuery),this.aliases.push(n),n}findAliasByName(e){const t=this.aliases.find((t=>t.name===e));if(!t)throw new i.K_(`"${e}" alias was not found. Maybe you forgot to join it?`);return t}findColumnByAliasExpression(e){const[t,n]=e.split(".");return this.findAliasByName(t).metadata.findColumnWithPropertyName(n)}get relationMetadata(){if(!this.mainAlias)throw new i.K_("Entity to work with is not specified!");const e=this.mainAlias.metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(!e)throw new i.K_(`Relation ${this.relationPropertyPath} was not found in entity ${this.mainAlias.name}`);return e}clone(){const e=new QueryExpressionMap(this.connection);return e.queryType=this.queryType,e.selects=this.selects.map((e=>e)),e.maxExecutionTime=this.maxExecutionTime,e.selectDistinct=this.selectDistinct,e.selectDistinctOn=this.selectDistinctOn,this.aliases.forEach((t=>e.aliases.push(new Alias(t)))),e.relationLoadStrategy=this.relationLoadStrategy,e.mainAlias=this.mainAlias,e.valuesSet=this.valuesSet,e.returning=this.returning,e.onConflict=this.onConflict,e.onIgnore=this.onIgnore,e.onUpdate=this.onUpdate,e.joinAttributes=this.joinAttributes.map((e=>new s.k(this.connection,this,e))),e.relationIdAttributes=this.relationIdAttributes.map((e=>new r.b(this,e))),e.relationCountAttributes=this.relationCountAttributes.map((e=>new o.$(this,e))),e.wheres=this.wheres.map((e=>({...e}))),e.havings=this.havings.map((e=>({...e}))),e.orderBys=Object.assign({},this.orderBys),e.groupBys=this.groupBys.map((e=>e)),e.limit=this.limit,e.offset=this.offset,e.skip=this.skip,e.take=this.take,e.lockMode=this.lockMode,e.lockVersion=this.lockVersion,e.lockTables=this.lockTables,e.withDeleted=this.withDeleted,e.parameters=Object.assign({},this.parameters),e.disableEscaping=this.disableEscaping,e.enableRelationIdValues=this.enableRelationIdValues,e.extraAppendedAndWhereCondition=this.extraAppendedAndWhereCondition,e.subQuery=this.subQuery,e.aliasNamePrefixingEnabled=this.aliasNamePrefixingEnabled,e.cache=this.cache,e.cacheId=this.cacheId,e.cacheDuration=this.cacheDuration,e.relationPropertyPath=this.relationPropertyPath,e.of=this.of,e.insertColumns=this.insertColumns,e.whereEntities=this.whereEntities,e.updateEntity=this.updateEntity,e.callListeners=this.callListeners,e.useTransaction=this.useTransaction,e.nativeParameters=Object.assign({},this.nativeParameters),e.comment=this.comment,e.commonTableExpressions=this.commonTableExpressions.map((e=>({alias:e.alias,queryBuilder:"string"==typeof e.queryBuilder?e.queryBuilder:e.queryBuilder.clone(),options:e.options}))),e}}class Brackets{constructor(e){this["@instanceof"]=Symbol.for("Brackets"),this.whereFactory=e}}var c=n(4759),l=n(8518),u=n(1962),h=n(7378);const d=/[.*+\-?^${}()|[\]\\]/g;class QueryBuilder{constructor(e,t){this["@instanceof"]=Symbol.for("QueryBuilder"),this.parameterIndex=0,h.a.isQueryBuilder(e)?(this.connection=e.connection,this.queryRunner=e.queryRunner,this.expressionMap=e.expressionMap.clone()):(this.connection=e,this.queryRunner=t,this.expressionMap=new QueryExpressionMap(this.connection))}get alias(){if(!this.expressionMap.mainAlias)throw new i.K_("Main alias is not set");return this.expressionMap.mainAlias.name}select(e,t){this.expressionMap.queryType="select",Array.isArray(e)?this.expressionMap.selects=e.map((e=>({selection:e}))):e&&(this.expressionMap.selects=[{selection:e,aliasName:t}]);const a=n(1894).Z;return h.a.isSelectQueryBuilder(this)?this:new a(this)}insert(){this.expressionMap.queryType="insert";const e=n(9362).O;return h.a.isInsertQueryBuilder(this)?this:new e(this)}update(e,t){const a=t||e;if("function"==typeof(e=h.a.isEntitySchema(e)?e.options.name:e)||"string"==typeof e){const t=this.createFromAlias(e);this.expressionMap.setMainAlias(t)}this.expressionMap.queryType="update",this.expressionMap.valuesSet=a;const i=n(8394).T;return h.a.isUpdateQueryBuilder(this)?this:new i(this)}delete(){this.expressionMap.queryType="delete";const e=n(8876).T;return h.a.isDeleteQueryBuilder(this)?this:new e(this)}softDelete(){this.expressionMap.queryType="soft-delete";const e=n(7302).B;return h.a.isSoftDeleteQueryBuilder(this)?this:new e(this)}restore(){this.expressionMap.queryType="restore";const e=n(7302).B;return h.a.isSoftDeleteQueryBuilder(this)?this:new e(this)}relation(e,t){const a=2===arguments.length?e:void 0,i=2===arguments.length?t:e;if(this.expressionMap.queryType="relation",this.expressionMap.relationPropertyPath=i,a){const e=this.createFromAlias(a);this.expressionMap.setMainAlias(e)}const s=n(1655).K;return h.a.isRelationQueryBuilder(this)?this:new s(this)}hasRelation(e,t){const n=this.connection.getMetadata(e);return(Array.isArray(t)?t:[t]).every((e=>!!n.findRelationWithPropertyPath(e)))}hasParameter(e){var t;return(null===(t=this.parentQueryBuilder)||void 0===t?void 0:t.hasParameter(e))||e in this.expressionMap.parameters}setParameter(e,t){if("function"==typeof t)throw new i.K_(`Function parameter isn't supported in the parameters. Please check "${e}" parameter.`);if(!e.match(/^([A-Za-z0-9_.]+)$/))throw new i.K_("QueryBuilder parameter keys may only contain numbers, letters, underscores, or periods.");return this.parentQueryBuilder&&this.parentQueryBuilder.setParameter(e,t),this.expressionMap.parameters[e]=t,this}setParameters(e){for(const[t,n]of Object.entries(e))this.setParameter(t,n);return this}createParameter(e){let t;do{t="orm_param_"+this.parameterIndex++}while(this.hasParameter(t));return this.setParameter(t,e),`:${t}`}setNativeParameters(e){return this.parentQueryBuilder&&this.parentQueryBuilder.setNativeParameters(e),Object.keys(e).forEach((t=>{this.expressionMap.nativeParameters[t]=e[t]})),this}getParameters(){const e=Object.assign({},this.expressionMap.parameters);if(this.expressionMap.mainAlias&&this.expressionMap.mainAlias.hasMetadata){const t=this.expressionMap.mainAlias.metadata;if(t.discriminatorColumn&&t.parentEntityMetadata){const n=t.childEntityMetadatas.filter((e=>e.discriminatorColumn)).map((e=>e.discriminatorValue));n.push(t.discriminatorValue),e.discriminatorColumnValues=n}}return e}printSql(){const[e,t]=this.getQueryAndParameters();return this.connection.logger.logQuery(e,t),this}getSql(){return this.getQueryAndParameters()[0]}getQueryAndParameters(){const e=this.getQuery(),t=this.getParameters();return this.connection.driver.escapeQueryWithParameters(e,t,this.expressionMap.nativeParameters)}async execute(){const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();try{return await n.query(e,t)}finally{n!==this.queryRunner&&await n.release()}}createQueryBuilder(){return new this.constructor(this.connection,this.queryRunner)}clone(){return new this.constructor(this)}comment(e){return this.expressionMap.comment=e,this}disableEscaping(){return this.expressionMap.disableEscaping=!1,this}escape(e){return this.expressionMap.disableEscaping?this.connection.driver.escape(e):e}setQueryRunner(e){return this.queryRunner=e,this}callListeners(e){return this.expressionMap.callListeners=e,this}useTransaction(e){return this.expressionMap.useTransaction=e,this}addCommonTableExpression(e,t,n){return this.expressionMap.commonTableExpressions.push({queryBuilder:e,alias:t,options:n||{}}),this}getTableName(e){return e.split(".").map((e=>""===e?e:this.escape(e))).join(".")}getMainTableName(){if(!this.expressionMap.mainAlias)throw new i.K_('Entity where values should be inserted is not specified. Call "qb.into(entity)" method to specify it.');return this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata.tablePath:this.expressionMap.mainAlias.tablePath}createFromAlias(e,t){if(this.connection.hasMetadata(e)){const n=this.connection.getMetadata(e);return this.expressionMap.createAlias({type:"from",name:t,metadata:this.connection.getMetadata(e),tablePath:n.tablePath})}{if("string"==typeof e){const n="("===e.substr(0,1)&&")"===e.substr(-1);return this.expressionMap.createAlias({type:"from",name:t,tablePath:n?void 0:e,subQuery:n?e:void 0})}const n=e(this.subQuery());this.setParameters(n.getParameters());const a=n.getQuery();return this.expressionMap.createAlias({type:"from",name:t,subQuery:a})}}replacePropertyNames(e){for(const n of this.expressionMap.aliases){if(!n.hasMetadata)continue;const a=this.expressionMap.aliasNamePrefixingEnabled?`${n.name}.`:"",i=this.expressionMap.aliasNamePrefixingEnabled?`${this.escape(n.name)}.`:"",s={};for(const e of n.metadata.relations)e.joinColumns.length>0&&(s[e.propertyPath]=e.joinColumns[0].databaseName);for(const e of n.metadata.relations)for(const t of[...e.joinColumns,...e.inverseJoinColumns]){const n=`${e.propertyPath}.${t.referencedColumn.propertyPath}`;s[n]=t.databaseName}for(const e of n.metadata.columns)s[e.databaseName]=e.databaseName;for(const e of n.metadata.columns)s[e.propertyName]=e.databaseName;for(const e of n.metadata.columns)s[e.propertyPath]=e.databaseName;e=e.replace(new RegExp(`([ =(]|^.{0})${t=a,t.replace(d,"\\$&")}([^ =(),]+)(?=[ =),]|.{0}$)`,"gm"),((e,t,n)=>s[n]?`${t}${i}${this.escape(s[n])}`:e))}var t;return e}createComment(){return this.expressionMap.comment?`/* ${this.expressionMap.comment.replace("*/","")} */ `:""}createWhereExpression(){const e=[],t=this.createWhereClausesExpression(this.expressionMap.wheres);if(t.length>0&&"1=1"!==t&&e.push(this.replacePropertyNames(t)),this.expressionMap.mainAlias.hasMetadata){const t=this.expressionMap.mainAlias.metadata;if("select"===this.expressionMap.queryType&&!this.expressionMap.withDeleted&&t.deleteDateColumn){const n=this.expressionMap.aliasNamePrefixingEnabled?this.expressionMap.mainAlias.name+"."+t.deleteDateColumn.propertyName:t.deleteDateColumn.propertyName,a=`${this.replacePropertyNames(n)} IS NULL`;e.push(a)}if(t.discriminatorColumn&&t.parentEntityMetadata){const n=this.expressionMap.aliasNamePrefixingEnabled?this.expressionMap.mainAlias.name+"."+t.discriminatorColumn.databaseName:t.discriminatorColumn.databaseName,a=`${this.replacePropertyNames(n)} IN (:...discriminatorColumnValues)`;e.push(a)}}if(this.expressionMap.extraAppendedAndWhereCondition){const t=this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition);e.push(t)}return e.length?1===e.length?` WHERE ${e[0]}`:` WHERE ( ${e.join(" ) AND ( ")} )`:""}createReturningExpression(e){const t=this.getReturningColumns(),n=this.connection.driver;if("string"!=typeof this.expressionMap.returning&&this.expressionMap.extraReturningColumns.length>0&&n.isReturningSqlSupported(e)&&t.push(...this.expressionMap.extraReturningColumns.filter((e=>-1===t.indexOf(e)))),t.length){let e=t.map((e=>{const t=this.escape(e.databaseName);return"mssql"===n.options.type?"insert"===this.expressionMap.queryType||"update"===this.expressionMap.queryType||"soft-delete"===this.expressionMap.queryType||"restore"===this.expressionMap.queryType?"INSERTED."+t:this.escape(this.getMainTableName())+"."+t:t})).join(", ");return"oracle"===n.options.type&&(e+=" INTO "+t.map((e=>this.createParameter({type:n.columnTypeToNativeParameter(e.type),dir:n.oracle.BIND_OUT}))).join(", ")),"mssql"===n.options.type&&("insert"!==this.expressionMap.queryType&&"update"!==this.expressionMap.queryType||(e+=" INTO @OutputTable")),e}return"string"==typeof this.expressionMap.returning?this.expressionMap.returning:""}getReturningColumns(){const e=[];return Array.isArray(this.expressionMap.returning)&&this.expressionMap.returning.forEach((t=>{this.expressionMap.mainAlias.hasMetadata&&e.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(t))})),e}createWhereClausesExpression(e){return e.map(((e,t)=>{const n=this.createWhereConditionExpression(e.condition);switch(e.type){case"and":return(t>0?"AND ":"")+n;case"or":return(t>0?"OR ":"")+n}return n})).join(" ").trim()}createWhereConditionExpression(e,t=!1){if("string"==typeof e)return e;if(Array.isArray(e))return 0===e.length?"1=1":1!==e.length||t?"("+this.createWhereClausesExpression(e)+")":this.createWhereClausesExpression(e);const{driver:n}=this.connection;switch(e.operator){case"lessThan":return`${e.parameters[0]} < ${e.parameters[1]}`;case"lessThanOrEqual":return`${e.parameters[0]} <= ${e.parameters[1]}`;case"arrayContains":return`${e.parameters[0]} @> ${e.parameters[1]}`;case"arrayContainedBy":return`${e.parameters[0]} <@ ${e.parameters[1]}`;case"arrayOverlap":return`${e.parameters[0]} && ${e.parameters[1]}`;case"moreThan":return`${e.parameters[0]} > ${e.parameters[1]}`;case"moreThanOrEqual":return`${e.parameters[0]} >= ${e.parameters[1]}`;case"notEqual":return`${e.parameters[0]} != ${e.parameters[1]}`;case"equal":return`${e.parameters[0]} = ${e.parameters[1]}`;case"ilike":return"postgres"===n.options.type||"cockroachdb"===n.options.type?`${e.parameters[0]} ILIKE ${e.parameters[1]}`:`UPPER(${e.parameters[0]}) LIKE UPPER(${e.parameters[1]})`;case"like":return`${e.parameters[0]} LIKE ${e.parameters[1]}`;case"between":return`${e.parameters[0]} BETWEEN ${e.parameters[1]} AND ${e.parameters[2]}`;case"in":return e.parameters.length<=1?"0=1":`${e.parameters[0]} IN (${e.parameters.slice(1).join(", ")})`;case"any":return`${e.parameters[0]} = ANY(${e.parameters[1]})`;case"isNull":return`${e.parameters[0]} IS NULL`;case"not":return`NOT(${this.createWhereConditionExpression(e.condition)})`;case"brackets":return`${this.createWhereConditionExpression(e.condition,!0)}`}throw new TypeError(`Unsupported FindOperator ${c.J.constructor.name}`)}createCteExpression(){if(!this.hasCommonTableExpressions())return"";const e=this.connection.driver.cteCapabilities.requiresRecursiveHint;return"WITH "+this.expressionMap.commonTableExpressions.map((t=>{const n="string"==typeof t.queryBuilder?t.queryBuilder:t.queryBuilder.getQuery();if("string"!=typeof t.queryBuilder){if(t.queryBuilder.hasCommonTableExpressions())throw new i.K_(`Nested CTEs aren't supported (CTE: ${t.alias})`);if(!this.connection.driver.cteCapabilities.writable&&!h.a.isSelectQueryBuilder(t.queryBuilder))throw new i.K_(`Only select queries are supported in CTEs in ${this.connection.options.type} (CTE: ${t.alias})`);this.setParameters(t.queryBuilder.getParameters())}let a=this.escape(t.alias);if(t.options.columnNames){const e=t.options.columnNames.map((e=>this.escape(e)));if(h.a.isSelectQueryBuilder(t.queryBuilder)&&t.queryBuilder.expressionMap.selects.length&&t.options.columnNames.length!==t.queryBuilder.expressionMap.selects.length)throw new i.K_(`cte.options.columnNames length (${t.options.columnNames.length}) doesn't match subquery select list length ${t.queryBuilder.expressionMap.selects.length} (CTE: ${t.alias})`);a+=`(${e.join(", ")})`}return[t.options.recursive&&e?"RECURSIVE":"",a,t.options.materialized&&this.connection.driver.cteCapabilities.materializedHint?"MATERIALIZED":"","AS",`(${n})`].filter(Boolean).join(" ")})).join(", ")+" "}getWhereInIdsCondition(e){const t=this.expressionMap.mainAlias.metadata,n=(Array.isArray(e)?e:[e]).map((e=>t.ensureEntityIdMap(e)));if(!t.hasMultiplePrimaryKeys){const e=t.primaryColumns[0];if(!e.transformer&&!e.relationMetadata&&!e.embeddedMetadata)return{[e.propertyName]:(0,l.In)(n.map((t=>e.getEntityValue(t,!1))))}}return new Brackets((e=>{for(const t of n)e.orWhere(new Brackets((e=>e.where(t))))}))}findColumnsForPropertyPath(e){let t=this.expressionMap.mainAlias;const n=[],a=e.split(".");for(;a.length>1;){const e=a[0];if(!(null==t?void 0:t.hasMetadata))break;if(t.metadata.hasEmbeddedWithPropertyPath(e))a.unshift(`${a.shift()}.${a.shift()}`);else{if(!t.metadata.hasRelationWithPropertyPath(e))break;{const i=this.expressionMap.joinAttributes.find((t=>t.relationPropertyPath===e));if(!(null==i?void 0:i.alias)){const t=n.length>0?`${n.join(".")}.${e}`:e;throw new Error(`Cannot find alias for relation at ${t}`)}t=i.alias,n.push(...e.split(".")),a.shift()}}}if(!t)throw new Error(`Cannot find alias for property ${e}`);const i=a.join("."),s=t.metadata.findColumnsWithPropertyPath(i);if(!s.length)throw new u.B(e,t.metadata);return[t,n,s]}createPropertyPath(e,t,n=""){const a=[];for(const i of Object.keys(t)){const s=n?`${n}.${i}`:i;if(null===t[i]||"object"!=typeof t[i]||h.a.isFindOperator(t[i]))a.push(s);else if(e.hasEmbeddedWithPropertyPath(s)){const n=this.createPropertyPath(e,t[i],s);a.push(...n)}else if(e.hasRelationWithPropertyPath(s)){const n=e.findRelationWithPropertyPath(s);if("one-to-one"===n.relationType||"many-to-one"===n.relationType){const e=n.joinColumns.map((e=>e.referencedColumn)).filter((e=>!!e));if(e.length>0&&e.every((e=>e.getEntityValue(t[i],!1)))){a.push(s);continue}}if("one-to-many"===n.relationType||"many-to-many"===n.relationType)throw new Error(`Cannot query across ${n.relationType} for property ${s}`);const r=n.inverseEntityMetadata.primaryColumns;if(r.length>0&&r.every((e=>e.getEntityValue(t[i],!1)))){const e=r.map((e=>`${s}.${e.propertyPath}`));a.push(...e);continue}const o=this.createPropertyPath(n.inverseEntityMetadata,t[i]).map((e=>`${s}.${e}`));a.push(...o)}else a.push(s)}return a}*getPredicates(e){if(this.expressionMap.mainAlias.hasMetadata){const t=this.createPropertyPath(this.expressionMap.mainAlias.metadata,e);for(const n of t){const[t,a,i]=this.findColumnsForPropertyPath(n);for(const n of i){let i=e;for(const e of a){if(!i||!(e in i)){i={};break}i=i[e]}const s=this.expressionMap.aliasNamePrefixingEnabled?`${t.name}.${n.propertyPath}`:n.propertyPath,r=n.getEntityValue(i,!0);yield[s,r]}}}else for(const t of Object.keys(e)){const n=e[t],a=this.expressionMap.aliasNamePrefixingEnabled?`${this.alias}.${t}`:t;yield[a,n]}}getWherePredicateCondition(e,t){if(h.a.isFindOperator(t)){let n=[];if(t.useParameter)if(t.objectLiteralParameters)this.setParameters(t.objectLiteralParameters);else if(t.multipleParameters)for(const e of t.value)n.push(this.createParameter(e));else n.push(this.createParameter(t.value));return"raw"===t.type?t.getSql?t.getSql(e):{operator:"equal",parameters:[e,t.value]}:"not"===t.type?t.child?{operator:t.type,condition:this.getWherePredicateCondition(e,t.child)}:{operator:"notEqual",parameters:[e,...n]}:{operator:t.type,parameters:[e,...n]}}return{operator:"equal",parameters:[e,this.createParameter(t)]}}getWhereCondition(e){if("string"==typeof e)return e;if(h.a.isBrackets(e)){const t=this.createQueryBuilder();return t.parentQueryBuilder=this,t.expressionMap.mainAlias=this.expressionMap.mainAlias,t.expressionMap.aliasNamePrefixingEnabled=this.expressionMap.aliasNamePrefixingEnabled,t.expressionMap.parameters=this.expressionMap.parameters,t.expressionMap.nativeParameters=this.expressionMap.nativeParameters,t.expressionMap.wheres=[],e.whereFactory(t),{operator:h.a.isNotBrackets(e)?"not":"brackets",condition:t.expressionMap.wheres}}if("function"==typeof e)return e(this);const t=Array.isArray(e)?e:[e],n=[];for(const e of t){const t=[];for(const[n,a]of this.getPredicates(e))t.push({type:"and",condition:this.getWherePredicateCondition(n,a)});n.push({type:"or",condition:t})}return 1===n.length?n[0].condition:n}obtainQueryRunner(){return this.queryRunner||this.connection.createQueryRunner()}hasCommonTableExpressions(){return this.expressionMap.commonTableExpressions.length>0}}},2749:(e,t,n)=>{"use strict";n.d(t,{G:()=>QueryBuilderUtils});class QueryBuilderUtils{static isAliasProperty(e){if("string"!=typeof e||-1===e.indexOf("."))return!1;const[t,n]=e.split(".");return!(!t||!n)&&(-1===e.indexOf("(")&&-1===e.indexOf(")"))}}},1655:(e,t,n)=>{"use strict";n.d(t,{K:()=>RelationQueryBuilder});var a=n(5627),i=n(1507),s=n(7264);class RelationUpdater{constructor(e,t){this.queryBuilder=e,this.expressionMap=t}async update(e){const t=this.expressionMap.relationMetadata;if(t.isManyToOne||t.isOneToOneOwner){const n=t.joinColumns.reduce(((t,n)=>{const a=s.g.isObject(e)?n.referencedColumn.getEntityValue(e):e;return n.setEntityValue(t,a),t}),{});if(!this.expressionMap.of||Array.isArray(this.expressionMap.of)&&!this.expressionMap.of.length)return;await this.queryBuilder.createQueryBuilder().update(t.entityMetadata.target).set(n).whereInIds(this.expressionMap.of).execute()}else if((t.isOneToOneNotOwner||t.isOneToMany)&&null===e){const e={};t.inverseRelation.joinColumns.forEach((t=>{e[t.propertyName]=null}));const n=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],a={},i=[];n.forEach(((e,n)=>{t.inverseRelation.joinColumns.map(((t,r)=>{const o="joinColumn_"+n+"_"+r;a[o]=s.g.isObject(e)?t.referencedColumn.getEntityValue(e):e,i.push(`${t.propertyPath} = :${o}`)}))}));const r=i.map((e=>"("+e+")")).join(" OR ");if(!r)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(e).where(r).setParameters(a).execute()}else if(t.isOneToOneNotOwner||t.isOneToMany){if(Array.isArray(this.expressionMap.of))throw new i.K_("You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.");const n=this.expressionMap.of,a=t.inverseRelation.joinColumns.reduce(((e,t)=>{const a=s.g.isObject(n)?t.referencedColumn.getEntityValue(n):n;return t.setEntityValue(e,a),e}),{});if(!e||Array.isArray(e)&&!e.length)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(a).whereInIds(e).execute()}else{const n=t.junctionEntityMetadata,a=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],i=Array.isArray(e)?e:[e],r=t.isManyToManyOwner?a:i,o=t.isManyToManyOwner?i:a,c=[];if(r.forEach((e=>{o.forEach((t=>{const a={};n.ownerColumns.forEach((t=>{a[t.databaseName]=s.g.isObject(e)?t.referencedColumn.getEntityValue(e):e})),n.inverseColumns.forEach((e=>{a[e.databaseName]=s.g.isObject(t)?e.referencedColumn.getEntityValue(t):t})),c.push(a)}))})),!c.length)return;"oracle"===this.queryBuilder.connection.driver.options.type||"sap"===this.queryBuilder.connection.driver.options.type?await Promise.all(c.map((e=>this.queryBuilder.createQueryBuilder().insert().into(n.tableName).values(e).execute()))):await this.queryBuilder.createQueryBuilder().insert().into(n.tableName).values(c).execute()}}}class RelationRemover{constructor(e,t){this.queryBuilder=e,this.expressionMap=t}async remove(e){const t=this.expressionMap.relationMetadata;if(t.isOneToMany){const n=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],a=Array.isArray(e)?e:[e],i={};t.inverseRelation.joinColumns.forEach((e=>{i[e.propertyName]=null}));const r={},o=[];n.forEach(((e,n)=>{o.push(...a.map(((a,i)=>[...t.inverseRelation.joinColumns.map(((t,a)=>{const o="joinColumn_"+n+"_"+i+"_"+a;return r[o]=s.g.isObject(e)?t.referencedColumn.getEntityValue(e):e,`${t.propertyPath} = :${o}`})),...t.inverseRelation.entityMetadata.primaryColumns.map(((e,t)=>{const n="primaryColumn_"+i+"_"+i+"_"+t;return r[n]=s.g.isObject(a)?e.getEntityValue(a):a,`${e.propertyPath} = :${n}`}))].join(" AND "))))}));const c=o.map((e=>"("+e+")")).join(" OR ");if(!c)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(i).where(c).setParameters(r).execute()}else{const n=t.junctionEntityMetadata,a=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],i=Array.isArray(e)?e:[e],r=t.isManyToManyOwner?a:i,o=t.isManyToManyOwner?i:a,c={},l=[];r.forEach(((e,t)=>{l.push(...o.map(((a,i)=>[...n.ownerColumns.map(((n,a)=>{const r="firstValue_"+t+"_"+i+"_"+a;return c[r]=s.g.isObject(e)?n.referencedColumn.getEntityValue(e):e,`${n.databaseName} = :${r}`})),...n.inverseColumns.map(((e,n)=>{const r="secondValue_"+t+"_"+i+"_"+n;return c[r]=s.g.isObject(a)?e.referencedColumn.getEntityValue(a):a,`${e.databaseName} = :${r}`}))].join(" AND "))))}));const u=l.map((e=>"("+e+")")).join(" OR ");await this.queryBuilder.createQueryBuilder().delete().from(n.tableName).where(u).setParameters(c).execute()}}}class RelationQueryBuilder extends a.z{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("RelationQueryBuilder")}getQuery(){return""}of(e){return this.expressionMap.of=e,this}async set(e){const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new i.K_("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToMany||t.isOneToMany)throw new i.K_(`Set operation is only supported for many-to-one and one-to-one relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .add() method instead.`);if(t.joinColumns&&t.joinColumns.length>1&&(!s.g.isObject(e)||Object.keys(e).length<t.joinColumns.length))throw new i.K_('Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: "...", lastName: "..." })');return new RelationUpdater(this,this.expressionMap).update(e)}async add(e){if(Array.isArray(e)&&0===e.length)return;const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new i.K_("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToOne||t.isOneToOne)throw new i.K_(`Add operation is only supported for many-to-many and one-to-many relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .set() method instead.`);if(t.joinColumns&&t.joinColumns.length>1&&(!s.g.isObject(e)||Object.keys(e).length<t.joinColumns.length))throw new i.K_('Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: "...", lastName: "..." })');return new RelationUpdater(this,this.expressionMap).update(e)}async remove(e){if(Array.isArray(e)&&0===e.length)return;const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new i.K_("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToOne||t.isOneToOne)throw new i.K_(`Add operation is only supported for many-to-many and one-to-many relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .set(null) method instead.`);return new RelationRemover(this,this.expressionMap).remove(e)}async addAndRemove(e,t){await this.remove(t),await this.add(e)}async loadOne(){return this.loadMany().then((e=>e[0]))}async loadMany(){let e=this.expressionMap.of;if(!s.g.isObject(e)){const t=this.expressionMap.mainAlias.metadata;if(t.hasMultiplePrimaryKeys)throw new i.K_("Cannot load entity because only one primary key was specified, however entity contains multiple primary keys");e=t.primaryColumns[0].createValueMap(e)}return this.connection.relationLoader.load(this.expressionMap.relationMetadata,e,this.queryRunner)}}},6120:(e,t,n)=>{"use strict";n.d(t,{v:()=>ReturningResultsEntityUpdator});var a=n(1507);class ReturningResultsEntityUpdator{constructor(e,t){this.queryRunner=e,this.expressionMap=t}async update(e,t){const n=this.expressionMap.mainAlias.metadata;await Promise.all(t.map((async(t,i)=>{if(this.queryRunner.connection.driver.isReturningSqlSupported("update")){"oracle"===this.queryRunner.connection.driver.options.type&&Array.isArray(e.raw)&&this.expressionMap.extraReturningColumns.length>0&&(e.raw=e.raw.reduce(((e,t,n)=>(e[this.expressionMap.extraReturningColumns[n].databaseName]=t[0],e)),{}));const a=Array.isArray(e.raw)?e.raw[i]:e.raw,s=this.queryRunner.connection.driver.createGeneratedMap(n,a);s&&(this.queryRunner.manager.merge(n.target,t,s),e.generatedMaps.push(s))}else{const i=this.expressionMap.extraReturningColumns;if(i.length>0){const s=this.expressionMap.mainAlias.metadata.getEntityIdMap(t);if(!s)throw new a.K_("Cannot update entity because entity id is not set in the entity.");const r=await this.queryRunner.manager.createQueryBuilder().select(n.primaryColumns.map((e=>n.targetName+"."+e.propertyPath))).addSelect(i.map((e=>n.targetName+"."+e.propertyPath))).from(n.target,n.targetName).where(s).withDeleted().setOption("create-pojo").getOne();r&&(this.queryRunner.manager.merge(n.target,t,r),e.generatedMaps.push(r))}}})))}async insert(e,t){const n=this.expressionMap.mainAlias.metadata;let i=n.getInsertionReturningColumns();const s=this.queryRunner.connection.driver.isReturningSqlSupported("insert");i=i.filter((e=>!e.isGenerated||!0===s));const r=t.map(((a,i)=>{"oracle"===this.queryRunner.connection.driver.options.type&&Array.isArray(e.raw)&&this.expressionMap.extraReturningColumns.length>0&&(e.raw=e.raw.reduce(((e,t,n)=>(e[this.expressionMap.extraReturningColumns[n].databaseName]=t[0],e)),{}));const s=Array.isArray(e.raw)?e.raw[i]:e.raw,r=this.queryRunner.connection.driver.createGeneratedMap(n,s,i,t.length)||{};return i in this.expressionMap.locallyGenerated&&this.queryRunner.manager.merge(n.target,r,this.expressionMap.locallyGenerated[i]),this.queryRunner.manager.merge(n.target,a,r),r}));if(i.length>0&&!this.queryRunner.connection.driver.isReturningSqlSupported("insert")){const e=t.map((e=>{const t=n.getEntityIdMap(e);if(!t)throw new a.K_("Cannot update entity because entity id is not set in the entity.");return t})),s=await this.queryRunner.manager.createQueryBuilder().select(n.primaryColumns.map((e=>n.targetName+"."+e.propertyPath))).addSelect(i.map((e=>n.targetName+"."+e.propertyPath))).from(n.target,n.targetName).where(e).setOption("create-pojo").getMany();t.forEach(((e,t)=>{this.queryRunner.manager.merge(n.target,r[t],s[t]),this.queryRunner.manager.merge(n.target,e,s[t])}))}t.forEach(((t,a)=>{const i=n.getEntityIdMap(t);e.identifiers.push(i),e.generatedMaps.push(r[a])}))}getUpdationReturningColumns(){return this.expressionMap.mainAlias.metadata.columns.filter((e=>e.isUpdateDate||e.isVersion))}getSoftDeletionReturningColumns(){return this.expressionMap.mainAlias.metadata.columns.filter((e=>e.isUpdateDate||e.isVersion||e.isDeleteDate))}}},1894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>SelectQueryBuilder});var a=n(5738),i=n(7677),s=n(7264);class RawSqlResultsToEntityTransformer{constructor(e,t,n,a,i){this.expressionMap=e,this.driver=t,this.rawRelationIdResults=n,this.rawRelationCountResults=a,this.queryRunner=i}transform(e,t){const n=this.group(e,t),a=[];return n.forEach((e=>{const n=this.transformRawResultsGroup(e,t);void 0===n||Object.values(n).every((e=>null===e))||a.push(n)})),a}group(e,t){const n=new Map,a=[];return"view"===t.metadata.tableType?a.push(...t.metadata.columns.map((e=>i.z.buildAlias(this.driver,t.name,e.databaseName)))):a.push(...t.metadata.primaryColumns.map((e=>i.z.buildAlias(this.driver,t.name,e.databaseName)))),e.forEach((e=>{const t=a.map((t=>{const n=e[t];return Buffer.isBuffer(n)?n.toString("hex"):s.g.isObject(n)?JSON.stringify(n):n})).join("_"),i=n.get(t);i?i.push(e):n.set(t,[e])})),n}transformRawResultsGroup(e,t){let n=t.metadata;if(n.discriminatorColumn){const a=e.map((e=>e[i.z.buildAlias(this.driver,t.name,t.metadata.discriminatorColumn.databaseName)])),s=n.childEntityMetadatas.find((e=>void 0!==a.find((t=>t===e.discriminatorValue))));s&&(n=s)}let a=n.create(this.queryRunner,{fromDeserializer:!0,pojo:-1!==this.expressionMap.options.indexOf("create-pojo")});const s=this.transformColumns(e,t,a,n),r=this.transformJoins(e,a,t,n),o=this.transformRelationIds(e,t,a,n),c=this.transformRelationCounts(e,t,a);if(s)return a;return 0===n.primaryColumns.filter((e=>!1===e.isVirtual)).length&&(r||o||c)?a:void 0}transformColumns(e,t,n,a){let s=!1;return a.columns.forEach((r=>{if(a.childEntityMetadatas.length>0&&-1!==a.childEntityMetadatas.findIndex((e=>e.target===r.target)))return;const o=e[0][i.z.buildAlias(this.driver,t.name,r.databaseName)];void 0===o||r.isVirtual||this.expressionMap.selects.find((e=>e.selection===t.name||e.selection===t.name+"."+r.propertyPath))&&(r.setEntityValue(n,this.driver.prepareHydratedValue(o,r)),null!==o&&(s=!0))})),s}transformJoins(e,t,n,a){let i=!1;return this.expressionMap.joinAttributes.forEach((s=>{if(!s.metadata)return;if(!s.isSelected)return;if(s.relation&&!a.relations.find((e=>e===s.relation)))return;if(s.mapToProperty){if(s.mapToPropertyParentAlias!==n.name)return}else if(!s.relation||s.parentAlias!==n.name||s.relationPropertyPath!==s.relation.propertyPath)return;let r=this.transform(e,s.alias);r=s.isMany?r:r[0],r=s.isMany||void 0!==r?r:null,void 0!==r&&(s.mapToPropertyPropertyName?t[s.mapToPropertyPropertyName]=r:s.relation.setEntityValue(t,r),i=!0)})),i}transformRelationIds(e,t,n,a){let i=!1;return this.rawRelationIdResults.forEach(((a,s)=>{if(a.relationIdAttribute.parentAlias!==t.name)return;const r=a.relationIdAttribute.relation,o=this.createValueMapFromJoinColumns(r,a.relationIdAttribute.parentAlias,e);if(null==o)return;this.prepareDataForTransformRelationIds();const c=this.hashEntityIds(r,o),l=this.relationIdMaps[s][c]||[],u=a.relationIdAttribute.mapToPropertyPropertyPath.split("."),h=(e,t,n)=>{const a=e.shift();return a&&0===e.length?(t[a]=n,t):a&&e.length>0?void h(e,t[a],n):t};r.isOneToOne||r.isManyToOne?void 0!==l[0]&&(h(u,n,l[0]),i=!0):(h(u,n,l),i=i||l.length>0)})),i}transformRelationCounts(e,t,n){let a=!1;return this.rawRelationCountResults.filter((e=>e.relationCountAttribute.parentAlias===t.name)).forEach((s=>{const r=s.relationCountAttribute.relation;let o;o=r.isOneToMany?r.inverseRelation.joinColumns[0].referencedColumn.databaseName:r.isOwning?r.joinColumns[0].referencedColumn.databaseName:r.inverseRelation.joinColumns[0].referencedColumn.databaseName;const c=e[0][i.z.buildAlias(this.driver,t.name,o)];null!=c&&(n[s.relationCountAttribute.mapToPropertyPropertyName]=0,s.results.filter((e=>e.parentId===c)).forEach((e=>{n[s.relationCountAttribute.mapToPropertyPropertyName]=parseInt(e.cnt),a=!0})))})),a}createValueMapFromJoinColumns(e,t,n){let a;return a=e.isManyToOne||e.isOneToOneOwner?e.entityMetadata.primaryColumns.map((e=>e)):e.isOneToMany||e.isOneToOneNotOwner?e.inverseRelation.joinColumns.map((e=>e)):e.isOwning?e.joinColumns.map((e=>e)):e.inverseRelation.inverseJoinColumns.map((e=>e)),a.reduce(((a,s)=>(n.forEach((n=>{e.isManyToOne||e.isOneToOneOwner?a[s.databaseName]=this.driver.prepareHydratedValue(n[i.z.buildAlias(this.driver,t,s.databaseName)],s):a[s.databaseName]=this.driver.prepareHydratedValue(n[i.z.buildAlias(this.driver,t,s.referencedColumn.databaseName)],s)})),a)),{})}extractEntityPrimaryIds(e,t){let n;return n=e.isManyToOne||e.isOneToOneOwner?e.entityMetadata.primaryColumns.map((e=>e)):e.isOneToMany||e.isOneToOneNotOwner?e.inverseRelation.joinColumns.map((e=>e)):e.isOwning?e.joinColumns.map((e=>e)):e.inverseRelation.inverseJoinColumns.map((e=>e)),n.reduce(((e,n)=>(e[n.databaseName]=t[n.databaseName],e)),{})}prepareDataForTransformRelationIds(){this.relationIdMaps||(this.relationIdMaps=this.rawRelationIdResults.map((e=>{const t=e.relationIdAttribute.relation;let n;return n=t.isManyToOne||t.isOneToOneOwner?t.joinColumns:t.isOneToMany||t.isOneToOneNotOwner?t.inverseEntityMetadata.primaryColumns:t.isOwning?t.inverseJoinColumns:t.inverseRelation.joinColumns,e.results.reduce(((i,s)=>{let r=n.reduce(((e,n)=>{let i=s[n.databaseName];return t.isOneToMany||t.isOneToOneNotOwner?(n.isVirtual&&n.referencedColumn&&n.referencedColumn.propertyName!==n.propertyName&&(i=n.referencedColumn.createValueMap(i)),a.s.mergeDeep(e,n.createValueMap(i))):(!n.isPrimary&&n.referencedColumn.referencedColumn&&(i=n.referencedColumn.referencedColumn.createValueMap(i)),a.s.mergeDeep(e,n.referencedColumn.createValueMap(i)))}),{});if(1!==n.length||e.relationIdAttribute.disableMixedMap||(r=t.isOneToMany||t.isOneToOneNotOwner?n[0].getEntityValue(r):n[0].referencedColumn.getEntityValue(r)),void 0!==r){const e=this.hashEntityIds(t,s);i[e]?i[e].push(r):i[e]=[r]}return i}),{})})))}hashEntityIds(e,t){const n=this.extractEntityPrimaryIds(e,t);return JSON.stringify(n)}}var r=n(2757),o=n(8955),c=n(3683),l=n(2475),u=n(5784),h=n(6869),d=n(58),p=n(5066);class RelationIdLoader{constructor(e,t,n){this.connection=e,this.queryRunner=t,this.relationIdAttributes=n}async load(e){const t=this.relationIdAttributes.map((async t=>{if(t.relation.isManyToOne||t.relation.isOneToOneOwner){if(t.queryBuilderFactory)throw new p.K("Additional condition can not be used with ManyToOne or OneToOne owner relations.");const n={},a=e.map((e=>{const a={},s=[];t.relation.joinColumns.forEach((n=>{a[n.databaseName]=this.connection.driver.prepareHydratedValue(e[i.z.buildAlias(this.connection.driver,t.parentAlias,n.databaseName)],n.referencedColumn);const r=`${n.databaseName}:${a[n.databaseName]}`;-1===s.indexOf(r)&&s.push(r)})),t.relation.entityMetadata.primaryColumns.forEach((n=>{a[n.databaseName]=this.connection.driver.prepareHydratedValue(e[i.z.buildAlias(this.connection.driver,t.parentAlias,n.databaseName)],n);const r=`${n.databaseName}:${a[n.databaseName]}`;-1===s.indexOf(r)&&s.push(r)})),s.sort();const r=s.join("::");return n[r]?null:(n[r]=!0,a)})).filter((e=>e));return{relationIdAttribute:t,results:a}}if(t.relation.isOneToMany||t.relation.isOneToOneNotOwner){const n=t.relation,s=n.isOwning?n.joinColumns:n.inverseRelation.joinColumns,r=n.inverseEntityMetadata.target,o=n.inverseEntityMetadata.tableName,c=t.alias||o,l={},u={},h=e.map(((e,n)=>{const a=[],r={},o=s.map((s=>{const o=s.databaseName+n,l=e[i.z.buildAlias(this.connection.driver,t.parentAlias,s.referencedColumn.databaseName)],u=`${c}:${s.propertyPath}:${l}`;return-1!==a.indexOf(u)?"":(a.push(u),r[o]=l,c+"."+s.propertyPath+" = :"+o)})).filter((e=>e)).join(" AND ");a.sort();const h=a.join("::");return l[h]?"":(l[h]=!0,Object.assign(u,r),o)})).filter((e=>e)).map((e=>"("+e+")")).join(" OR ");if(!h)return{relationIdAttribute:t,results:[]};const d=this.connection.createQueryBuilder(this.queryRunner);a.s.uniq([...s,...n.inverseRelation.entityMetadata.primaryColumns],(e=>e.propertyPath)).forEach((e=>{d.addSelect(c+"."+e.propertyPath,e.databaseName)})),d.from(r,c).where("("+h+")").setParameters(u),t.queryBuilderFactory&&t.queryBuilderFactory(d);const p=await d.getRawMany();return p.forEach((e=>{s.forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t.referencedColumn)})),n.inverseRelation.entityMetadata.primaryColumns.forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t)}))})),{relationIdAttribute:t,results:p}}{const n=t.relation,a=n.isOwning?n.joinColumns:n.inverseRelation.inverseJoinColumns,s=n.isOwning?n.inverseJoinColumns:n.inverseRelation.joinColumns,r=t.junctionAlias,o=t.joinInverseSideMetadata.tableName,c=t.alias||o,l=n.isOwning?n.junctionEntityMetadata.tableName:n.inverseRelation.junctionEntityMetadata.tableName,u=e.map((e=>a.reduce(((n,a)=>(n[a.propertyPath]=e[i.z.buildAlias(this.connection.driver,t.parentAlias,a.referencedColumn.databaseName)],n)),{})));if(0===u.length)return{relationIdAttribute:t,results:[]};const h={},d={},p=u.map(((e,t)=>{const n=[],a={},i=Object.keys(e).map((i=>{const s=i+t,o=e[i],c=`${r}:${i}:${o}`;return-1!==n.indexOf(c)?"":(n.push(c),a[s]=o,r+"."+i+" = :"+s)})).filter((e=>e)).join(" AND ");n.sort();const s=n.join("::");return d[s]?"":(d[s]=!0,Object.assign(h,a),i)})).filter((e=>e)),m=s.map((e=>r+"."+e.propertyPath+" = "+c+"."+e.referencedColumn.propertyPath)).join(" AND "),y=p.map((e=>"("+e+" AND "+m+")")).join(" OR "),f=this.connection.createQueryBuilder(this.queryRunner);s.forEach((e=>{f.addSelect(r+"."+e.propertyPath,e.databaseName).addOrderBy(r+"."+e.propertyPath)})),a.forEach((e=>{f.addSelect(r+"."+e.propertyPath,e.databaseName).addOrderBy(r+"."+e.propertyPath)})),f.from(o,c).innerJoin(l,r,y).setParameters(h),t.queryBuilderFactory&&t.queryBuilderFactory(f);const g=await f.getRawMany();return g.forEach((e=>{[...a,...s].forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t.referencedColumn)}))})),{relationIdAttribute:t,results:g}}}));return Promise.all(t)}}class RelationIdMetadataToAttributeTransformer{constructor(e){this.expressionMap=e}transform(){this.expressionMap.mainAlias&&this.expressionMap.mainAlias.metadata.relationIds.forEach((e=>{const t=this.metadataToAttribute(this.expressionMap.mainAlias.name,e);this.expressionMap.relationIdAttributes.push(t)})),this.expressionMap.joinAttributes.forEach((e=>{e.metadata&&!e.metadata.isJunction&&e.metadata.relationIds.forEach((t=>{const n=this.metadataToAttribute(e.alias.name,t);this.expressionMap.relationIdAttributes.push(n)}))}))}metadataToAttribute(e,t){return new h.b(this.expressionMap,{relationName:e+"."+t.relation.propertyName,mapToProperty:e+"."+t.propertyName,alias:t.alias,queryBuilderFactory:t.queryBuilderFactory})}}class RelationCountLoader{constructor(e,t,n){this.connection=e,this.queryRunner=t,this.relationCountAttributes=n}async load(e){const t=(e,t,n)=>n.indexOf(e)===t,n=this.relationCountAttributes.map((async n=>{if(n.relation.isOneToMany){const a=n.relation,i=a.inverseRelation,s=i.joinColumns[0].referencedColumn.propertyName,r=a.inverseEntityMetadata.target,o=a.inverseEntityMetadata.tableName,c=n.alias||o,l=i.propertyName;let u=e.map((e=>e[n.parentAlias+"_"+s])).filter((e=>!!e));if(u=u.filter(t),0===u.length)return{relationCountAttribute:n,results:[]};const h=this.connection.createQueryBuilder(this.queryRunner);return h.select(c+"."+l,"parentId").addSelect("COUNT(*)","cnt").from(r,c).where(c+"."+l+" IN (:...ids)").addGroupBy(c+"."+l).setParameter("ids",u),n.queryBuilderFactory&&n.queryBuilderFactory(h),{relationCountAttribute:n,results:await h.getRawMany()}}{let a,i,s,r;n.relation.isOwning?(a=n.relation.joinColumns[0].referencedColumn.databaseName,i=n.relation.inverseJoinColumns[0].referencedColumn.databaseName,s=n.relation.junctionEntityMetadata.columns[0],r=n.relation.junctionEntityMetadata.columns[1]):(a=n.relation.inverseRelation.inverseJoinColumns[0].referencedColumn.databaseName,i=n.relation.inverseRelation.joinColumns[0].referencedColumn.databaseName,s=n.relation.junctionEntityMetadata.columns[1],r=n.relation.junctionEntityMetadata.columns[0]);let o=e.map((e=>e[n.parentAlias+"_"+a])).filter((e=>!!e));if(o=o.filter(t),0===o.length)return{relationCountAttribute:n,results:[]};const c=n.junctionAlias,l=n.joinInverseSideMetadata.tableName,u=n.alias||l,h=n.relation.junctionEntityMetadata.tableName,d=c+"."+s.propertyName+" IN ("+o.map((e=>isNaN(e)?"'"+e+"'":e))+") AND "+c+"."+r.propertyName+" = "+u+"."+i,p=this.connection.createQueryBuilder(this.queryRunner);return p.select(c+"."+s.propertyName,"parentId").addSelect("COUNT("+p.escape(u)+"."+p.escape(i)+")","cnt").from(l,u).innerJoin(h,c,d).addGroupBy(c+"."+s.propertyName),n.queryBuilderFactory&&n.queryBuilderFactory(p),{relationCountAttribute:n,results:await p.getRawMany()}}}));return Promise.all(n)}}class RelationCountMetadataToAttributeTransformer{constructor(e){this.expressionMap=e}transform(){this.expressionMap.mainAlias&&this.expressionMap.mainAlias.metadata.relationCounts.forEach((e=>{const t=this.metadataToAttribute(this.expressionMap.mainAlias.name,e);this.expressionMap.relationCountAttributes.push(t)})),this.expressionMap.joinAttributes.forEach((e=>{e.metadata&&!e.metadata.isJunction&&e.metadata.relationCounts.forEach((t=>{const n=this.metadataToAttribute(e.alias.name,t);this.expressionMap.relationCountAttributes.push(n)}))}))}metadataToAttribute(e,t){return new d.$(this.expressionMap,{relationName:e+"."+t.relation.propertyName,mapToProperty:e+"."+t.propertyName,alias:t.alias,queryBuilderFactory:t.queryBuilderFactory})}}var m=n(5627),y=n(5106),f=n(4885),g=n(497),E=n(1507),T=n(5093),b=n(8535),N=n(1962),w=n(7378);class SelectQueryBuilder extends m.z{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("SelectQueryBuilder"),this.findOptions={},this.selects=[],this.joins=[],this.conditions="",this.orderBys=[],this.relationMetadatas=[]}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createSelectExpression(),e+=this.createJoinExpression(),e+=this.createWhereExpression(),e+=this.createGroupByExpression(),e+=this.createHavingExpression(),e+=this.createOrderByExpression(),e+=this.createLimitOffsetExpression(),e+=this.createLockExpression(),e=e.trim(),this.expressionMap.subQuery&&(e="("+e+")"),e}setFindOptions(e){return this.findOptions=e,this.applyFindOptions(),this}subQuery(){const e=this.createQueryBuilder();return e.expressionMap.subQuery=!0,e.parentQueryBuilder=this,e}select(e,t){if(this.expressionMap.queryType="select",Array.isArray(e))this.expressionMap.selects=e.map((e=>({selection:e})));else if("function"==typeof e){const n=e(this.subQuery());this.setParameters(n.getParameters()),this.expressionMap.selects.push({selection:n.getQuery(),aliasName:t})}else e&&(this.expressionMap.selects=[{selection:e,aliasName:t}]);return this}addSelect(e,t){if(!e)return this;if(Array.isArray(e))this.expressionMap.selects=this.expressionMap.selects.concat(e.map((e=>({selection:e}))));else if("function"==typeof e){const n=e(this.subQuery());this.setParameters(n.getParameters()),this.expressionMap.selects.push({selection:n.getQuery(),aliasName:t})}else e&&this.expressionMap.selects.push({selection:e,aliasName:t});return this}maxExecutionTime(e){return this.expressionMap.maxExecutionTime=e,this}distinct(e=!0){return this.expressionMap.selectDistinct=e,this}distinctOn(e){return this.expressionMap.selectDistinctOn=e,this}from(e,t){const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}addFrom(e,t){const n=this.createFromAlias(e,t);return this.expressionMap.mainAlias||this.expressionMap.setMainAlias(n),this}innerJoin(e,t,n,a){return this.join("INNER",e,t,n,a),this}leftJoin(e,t,n,a){return this.join("LEFT",e,t,n,a),this}innerJoinAndSelect(e,t,n,a){return this.addSelect(t),this.innerJoin(e,t,n,a),this}leftJoinAndSelect(e,t,n,a){return this.addSelect(t),this.leftJoin(e,t,n,a),this}innerJoinAndMapMany(e,t,n,a,i){return this.addSelect(n),this.join("INNER",t,n,a,i,e,!0),this}innerJoinAndMapOne(e,t,n,a,i){return this.addSelect(n),this.join("INNER",t,n,a,i,e,!1),this}leftJoinAndMapMany(e,t,n,a,i){return this.addSelect(n),this.join("LEFT",t,n,a,i,e,!0),this}leftJoinAndMapOne(e,t,n,a,i){return this.addSelect(n),this.join("LEFT",t,n,a,i,e,!1),this}loadRelationIdAndMap(e,t,n,a){const i=new h.b(this.expressionMap);return i.mapToProperty=e,i.relationName=t,"string"==typeof n&&(i.alias=n),"object"==typeof n&&n.disableMixedMap&&(i.disableMixedMap=!0),i.queryBuilderFactory=a,this.expressionMap.relationIdAttributes.push(i),i.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"other",name:i.junctionAlias,metadata:i.relation.junctionEntityMetadata}),this}loadRelationCountAndMap(e,t,n,a){const i=new d.$(this.expressionMap);return i.mapToProperty=e,i.relationName=t,i.alias=n,i.queryBuilderFactory=a,this.expressionMap.relationCountAttributes.push(i),this.expressionMap.createAlias({type:"other",name:i.junctionAlias}),i.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"other",name:i.junctionAlias,metadata:i.relation.junctionEntityMetadata}),this}loadAllRelationIds(e){return this.expressionMap.mainAlias.metadata.relations.forEach((t=>{void 0!==e&&void 0!==e.relations&&-1===e.relations.indexOf(t.propertyPath)||this.loadRelationIdAndMap(this.expressionMap.mainAlias.name+"."+t.propertyPath,this.expressionMap.mainAlias.name+"."+t.propertyPath,e)})),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}having(e,t){return this.expressionMap.havings.push({type:"simple",condition:e}),t&&this.setParameters(t),this}andHaving(e,t){return this.expressionMap.havings.push({type:"and",condition:e}),t&&this.setParameters(t),this}orHaving(e,t){return this.expressionMap.havings.push({type:"or",condition:e}),t&&this.setParameters(t),this}groupBy(e){return this.expressionMap.groupBys=e?[e]:[],this}addGroupBy(e){return this.expressionMap.groupBys.push(e),this}orderBy(e,t="ASC",n){if(void 0!==t&&"ASC"!==t&&"DESC"!==t)throw new E.K_('SelectQueryBuilder.addOrderBy "order" can accept only "ASC" and "DESC" values.');if(void 0!==n&&"NULLS FIRST"!==n&&"NULLS LAST"!==n)throw new E.K_('SelectQueryBuilder.addOrderBy "nulls" can accept only "NULLS FIRST" and "NULLS LAST" values.');return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){if(void 0!==t&&"ASC"!==t&&"DESC"!==t)throw new E.K_('SelectQueryBuilder.addOrderBy "order" can accept only "ASC" and "DESC" values.');if(void 0!==n&&"NULLS FIRST"!==n&&"NULLS LAST"!==n)throw new E.K_('SelectQueryBuilder.addOrderBy "nulls" can accept only "NULLS FIRST" and "NULLS LAST" values.');return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){if(this.expressionMap.limit=this.normalizeNumber(e),void 0!==this.expressionMap.limit&&isNaN(this.expressionMap.limit))throw new E.K_('Provided "limit" value is not a number. Please provide a numeric value.');return this}offset(e){if(this.expressionMap.offset=this.normalizeNumber(e),void 0!==this.expressionMap.offset&&isNaN(this.expressionMap.offset))throw new E.K_('Provided "offset" value is not a number. Please provide a numeric value.');return this}take(e){if(this.expressionMap.take=this.normalizeNumber(e),void 0!==this.expressionMap.take&&isNaN(this.expressionMap.take))throw new E.K_('Provided "take" value is not a number. Please provide a numeric value.');return this}skip(e){if(this.expressionMap.skip=this.normalizeNumber(e),void 0!==this.expressionMap.skip&&isNaN(this.expressionMap.skip))throw new E.K_('Provided "skip" value is not a number. Please provide a numeric value.');return this}useIndex(e){return this.expressionMap.useIndex=e,this}setLock(e,t,n){return this.expressionMap.lockMode=e,this.expressionMap.lockVersion=t,this.expressionMap.lockTables=n,this}withDeleted(){return this.expressionMap.withDeleted=!0,this}async getRawOne(){return(await this.getRawMany())[0]}async getRawMany(){if("optimistic"===this.expressionMap.lockMode)throw new l.Y;this.expressionMap.queryEntity=!1;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0);const n=await this.loadRawResults(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getRawAndEntities(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!0;const n=await this.executeEntitiesAndRawResults(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getOne(){const e=(await this.getRawAndEntities()).entities[0];if(e&&"optimistic"===this.expressionMap.lockMode&&this.expressionMap.lockVersion){const t=this.expressionMap.mainAlias.metadata;if(this.expressionMap.lockVersion instanceof Date){const n=t.updateDateColumn.getEntityValue(e);if(n.getTime()!==this.expressionMap.lockVersion.getTime())throw new c.Z(t.name,this.expressionMap.lockVersion,n)}else{const n=t.versionColumn.getEntityValue(e);if(n!==this.expressionMap.lockVersion)throw new c.Z(t.name,this.expressionMap.lockVersion,n)}}return void 0===e?null:e}async getOneOrFail(){const e=await this.getOne();if(!e)throw new g.E(this.expressionMap.mainAlias.target,this);return e}async getMany(){if("optimistic"===this.expressionMap.lockMode)throw new l.Y;return(await this.getRawAndEntities()).entities}async getCount(){if("optimistic"===this.expressionMap.lockMode)throw new l.Y;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!1;const n=await this.executeCountQuery(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getManyAndCount(){if("optimistic"===this.expressionMap.lockMode)throw new l.Y;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!0;const n=await this.executeEntitiesAndRawResults(e);this.expressionMap.queryEntity=!1;const a=this.expressionMap.cacheId;this.expressionMap.cacheId=a?`${a}-count`:a;const i=await this.executeCountQuery(e),s=[n.entities,i];return t&&await e.commitTransaction(),s}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async stream(){this.expressionMap.queryEntity=!1;const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();let a=!1;try{!0===this.expressionMap.useTransaction&&!1===n.isTransactionActive&&(await n.startTransaction(),a=!0);const i=()=>{if(n!==this.queryRunner)return n.release()},s=n.stream(e,t,i,i);return a&&await n.commitTransaction(),s}catch(e){if(a)try{await n.rollbackTransaction()}catch(e){}throw e}}cache(e,t){return"boolean"==typeof e?this.expressionMap.cache=e:"number"==typeof e?(this.expressionMap.cache=!0,this.expressionMap.cacheDuration=e):"string"!=typeof e&&"number"!=typeof e||(this.expressionMap.cache=!0,this.expressionMap.cacheId=e),t&&(this.expressionMap.cacheDuration=t),this}setOption(e){return this.expressionMap.options.push(e),this}join(e,t,n,a,i,s,r){this.setParameters(i||{});const o=new u.k(this.connection,this.expressionMap);if(o.direction=e,o.mapToProperty=s,o.isMappingMany=r,o.entityOrProperty=t,o.condition=a||void 0,this.expressionMap.joinAttributes.push(o),o.metadata){if(o.metadata.deleteDateColumn&&!this.expressionMap.withDeleted){const e=`${n}.${o.metadata.deleteDateColumn.propertyName} IS NULL`;o.condition=o.condition?` ${o.condition} AND ${e}`:`${e}`}o.alias=this.expressionMap.createAlias({type:"join",name:n,metadata:o.metadata}),o.relation&&o.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"join",name:o.junctionAlias,metadata:o.relation.junctionEntityMetadata})}else{let e="";if("function"==typeof t){const n=t(this.subQuery());this.setParameters(n.getParameters()),e=n.getQuery()}else e=t;const a="function"==typeof t||"("===t.substr(0,1)&&")"===t.substr(-1);o.alias=this.expressionMap.createAlias({type:"join",name:n,tablePath:!1===a?t:void 0,subQuery:!0===a?e:void 0})}}createSelectExpression(){if(!this.expressionMap.mainAlias)throw new E.K_("Cannot build query because main alias is not set (call qb#from method)");const e=[],t=[];if(this.expressionMap.mainAlias.hasMetadata){const n=this.expressionMap.mainAlias.metadata;e.push(...this.buildEscapedEntityColumnSelects(this.expressionMap.mainAlias.name,n)),t.push(...this.findEntityColumnSelects(this.expressionMap.mainAlias.name,n))}this.expressionMap.joinAttributes.forEach((n=>{if(n.metadata)e.push(...this.buildEscapedEntityColumnSelects(n.alias.name,n.metadata)),t.push(...this.findEntityColumnSelects(n.alias.name,n.metadata));else{const a=this.expressionMap.selects.some((e=>e.selection===n.alias.name));if(a){e.push({selection:this.escape(n.alias.name)+".*"});const a=this.expressionMap.selects.find((e=>e.selection===n.alias.name));t.push(a)}}})),this.expressionMap.selects.filter((e=>-1===t.indexOf(e))).forEach((t=>e.push({selection:this.replacePropertyNames(t.selection),aliasName:t.aliasName}))),0===e.length&&e.push({selection:"*"});let n="";this.expressionMap.useIndex&&i.z.isMySQLFamily(this.connection.driver)&&(n=` USE INDEX (${this.expressionMap.useIndex})`);const a=this.expressionMap.aliases.filter((e=>"from"===e.type&&(e.tablePath||e.subQuery))).map((e=>e.subQuery?e.subQuery+" "+this.escape(e.name):this.getTableName(e.tablePath)+" "+this.escape(e.name))),s=this.createSelectDistinctExpression(),r=e.map((e=>e.selection+(e.aliasName?" AS "+this.escape(e.aliasName):""))).join(", ");return s+r+" FROM "+a.join(", ")+this.createTableLockExpression()+n}createSelectDistinctExpression(){const{selectDistinct:e,selectDistinctOn:t,maxExecutionTime:n}=this.expressionMap,{driver:a}=this.connection;let s="SELECT ";if(n>0&&i.z.isMySQLFamily(a)&&(s+=`/*+ MAX_EXECUTION_TIME(${this.expressionMap.maxExecutionTime}) */ `),"postgres"===a.options.type&&t.length>0){s=`SELECT DISTINCT ON (${t.map((e=>this.replacePropertyNames(e))).join(", ")}) `}else e&&(s="SELECT DISTINCT ");return s}createJoinExpression(){return this.expressionMap.joinAttributes.map((e=>{const t=e.relation,n=e.tablePath,a=e.alias.name;let i=e.condition?" AND ("+e.condition+")":"";const s=e.parentAlias;if(!s||!t){const t=e.alias.subQuery?e.alias.subQuery:this.getTableName(n);return" "+e.direction+" JOIN "+t+" "+this.escape(a)+this.createTableLockExpression()+(e.condition?" ON "+this.replacePropertyNames(e.condition):"")}if(t.isManyToOne||t.isOneToOneOwner){const r=t.joinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+s+"."+t.propertyPath+"."+e.referencedColumn.propertyPath)).join(" AND ");return" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(r+i)}if(t.isOneToMany||t.isOneToOneNotOwner){const r=t.inverseRelation.joinColumns.map((e=>("entity-child"===t.inverseEntityMetadata.tableType&&t.inverseEntityMetadata.discriminatorColumn&&(i+=" AND "+a+"."+t.inverseEntityMetadata.discriminatorColumn.databaseName+"='"+t.inverseEntityMetadata.discriminatorValue+"'"),a+"."+t.inverseRelation.propertyPath+"."+e.referencedColumn.propertyPath+"="+s+"."+e.referencedColumn.propertyPath))).join(" AND ");return" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(r+i)}{const r=t.junctionEntityMetadata.tablePath,o=e.junctionAlias;let c="",l="";return t.isOwning?(c=t.joinColumns.map((e=>o+"."+e.propertyPath+"="+s+"."+e.referencedColumn.propertyPath)).join(" AND "),l=t.inverseJoinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+o+"."+e.propertyPath)).join(" AND ")):(c=t.inverseRelation.inverseJoinColumns.map((e=>o+"."+e.propertyPath+"="+s+"."+e.referencedColumn.propertyPath)).join(" AND "),l=t.inverseRelation.joinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+o+"."+e.propertyPath)).join(" AND "))," "+e.direction+" JOIN "+this.getTableName(r)+" "+this.escape(o)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(c)+" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(l+i)}})).join(" ")}createGroupByExpression(){return this.expressionMap.groupBys&&this.expressionMap.groupBys.length?" GROUP BY "+this.replacePropertyNames(this.expressionMap.groupBys.join(", ")):""}createOrderByExpression(){const e=this.expressionMap.allOrderBys;return Object.keys(e).length>0?" ORDER BY "+Object.keys(e).map((t=>"string"==typeof e[t]?this.replacePropertyNames(t)+" "+e[t]:this.replacePropertyNames(t)+" "+e[t].order+" "+e[t].nulls)).join(", "):""}createLimitOffsetExpression(){let e=this.expressionMap.offset,t=this.expressionMap.limit;if(e||t||0!==this.expressionMap.joinAttributes.length||(e=this.expressionMap.skip,t=this.expressionMap.take),"mssql"===this.connection.driver.options.type){let n="";if((t||e)&&Object.keys(this.expressionMap.allOrderBys).length<=0&&(n=" ORDER BY (SELECT NULL)"),t&&e)return n+" OFFSET "+e+" ROWS FETCH NEXT "+t+" ROWS ONLY";if(t)return n+" OFFSET 0 ROWS FETCH NEXT "+t+" ROWS ONLY";if(e)return n+" OFFSET "+e+" ROWS"}else if(i.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)throw new f.G}else if(i.z.isSQLiteFamily(this.connection.driver)){if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)return" LIMIT -1 OFFSET "+e}else if("oracle"===this.connection.driver.options.type){if(t&&e)return" OFFSET "+e+" ROWS FETCH NEXT "+t+" ROWS ONLY";if(t)return" FETCH NEXT "+t+" ROWS ONLY";if(e)return" OFFSET "+e+" ROWS"}else{if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)return" OFFSET "+e}return""}createTableLockExpression(){if("mssql"===this.connection.driver.options.type)switch(this.expressionMap.lockMode){case"pessimistic_read":return" WITH (HOLDLOCK, ROWLOCK)";case"pessimistic_write":return" WITH (UPDLOCK, ROWLOCK)";case"dirty_read":return" WITH (NOLOCK)"}return""}createLockExpression(){const e=this.connection.driver;let t="";if(this.expressionMap.lockTables){if("postgres"!==e.options.type&&"cockroachdb"!==e.options.type)throw new E.K_("Lock tables not supported in selected driver");if(this.expressionMap.lockTables.length<1)throw new E.K_("lockTables cannot be an empty array");t=" OF "+this.expressionMap.lockTables.join(", ")}switch(this.expressionMap.lockMode){case"pessimistic_read":if(i.z.isMySQLFamily(e)||"aurora-mysql"===e.options.type)return" LOCK IN SHARE MODE";if("postgres"===e.options.type)return" FOR SHARE"+t;if("oracle"===e.options.type)return" FOR UPDATE";if("mssql"===e.options.type)return"";throw new y.A;case"pessimistic_write":if(i.z.isMySQLFamily(e)||"aurora-mysql"===e.options.type||"oracle"===e.options.type)return" FOR UPDATE";if("postgres"===e.options.type||"cockroachdb"===e.options.type)return" FOR UPDATE"+t;if("mssql"===e.options.type)return"";throw new y.A;case"pessimistic_partial_write":if("postgres"===e.options.type)return" FOR UPDATE"+t+" SKIP LOCKED";if(i.z.isMySQLFamily(e))return" FOR UPDATE SKIP LOCKED";throw new y.A;case"pessimistic_write_or_fail":if("postgres"===e.options.type||"cockroachdb"===e.options.type)return" FOR UPDATE"+t+" NOWAIT";if(i.z.isMySQLFamily(e))return" FOR UPDATE NOWAIT";throw new y.A;case"for_no_key_update":if("postgres"===e.options.type||"cockroachdb"===e.options.type)return" FOR NO KEY UPDATE"+t;throw new y.A;case"for_key_share":if("postgres"===e.options.type)return" FOR KEY SHARE"+t;throw new y.A;default:return""}}createHavingExpression(){if(!this.expressionMap.havings||!this.expressionMap.havings.length)return"";const e=this.expressionMap.havings.map(((e,t)=>{switch(e.type){case"and":return(t>0?"AND ":"")+this.replacePropertyNames(e.condition);case"or":return(t>0?"OR ":"")+this.replacePropertyNames(e.condition);default:return this.replacePropertyNames(e.condition)}})).join(" ");return e.length?" HAVING "+e:""}buildEscapedEntityColumnSelects(e,t){const n=this.expressionMap.selects.some((t=>t.selection===e)),a=[];if(n&&a.push(...t.columns.filter((e=>!0===e.isSelect))),a.push(...t.columns.filter((t=>this.expressionMap.selects.some((n=>n.selection===e+"."+t.propertyPath))))),0===a.length)return[];const s=this.expressionMap.queryEntity?t.primaryColumns.filter((e=>-1===a.indexOf(e))):[],r=[...a,...s],o=[];return r.forEach((t=>{let a=this.escape(e)+"."+this.escape(t.databaseName);if(-1!==this.connection.driver.spatialTypes.indexOf(t.type)){if(i.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type){const e=this.connection.driver.options.legacySpatialSupport;a=`${e?"AsText":"ST_AsText"}(${a})`}"postgres"===this.connection.driver.options.type&&(a=t.precision?`ST_AsGeoJSON(${a}, ${t.precision})::json`:`ST_AsGeoJSON(${a})::json`),"mssql"===this.connection.driver.options.type&&(a=`${a}.ToString()`)}const s=this.expressionMap.selects.filter((n=>n.selection===e+"."+t.propertyPath));s.length?s.forEach((n=>{o.push({selection:a,aliasName:n.aliasName?n.aliasName:i.z.buildAlias(this.connection.driver,e,t.databaseName),virtual:n.virtual})})):o.push({selection:a,aliasName:i.z.buildAlias(this.connection.driver,e,t.databaseName),virtual:n})})),o}findEntityColumnSelects(e,t){const n=this.expressionMap.selects.find((t=>t.selection===e));return n?[n]:this.expressionMap.selects.filter((n=>t.columns.some((t=>n.selection===e+"."+t.propertyPath))))}computeCountExpression(){const e=this.expressionMap.mainAlias.name,t=this.expressionMap.mainAlias.metadata.primaryColumns,n=this.escape(e);if(0===this.expressionMap.joinAttributes.length&&0===this.expressionMap.relationIdAttributes.length&&0===this.expressionMap.relationCountAttributes.length)return"COUNT(1)";if("cockroachdb"===this.connection.driver.options.type||"postgres"===this.connection.driver.options.type)return"COUNT(DISTINCT("+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", ")+"))";if(i.z.isMySQLFamily(this.connection.driver))return"COUNT(DISTINCT "+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", ")+")";if("mssql"===this.connection.driver.options.type){const e=t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", '|;|', ");return 1===t.length?`COUNT(DISTINCT(${e}))`:`COUNT(DISTINCT(CONCAT(${e})))`}if("spanner"===this.connection.driver.options.type){if(1===t.length)return`COUNT(DISTINCT(${n}.${this.escape(t[0].databaseName)}))`;return`COUNT(DISTINCT(CONCAT(${t.map((e=>`CAST(${n}.${this.escape(e.databaseName)} AS STRING)`)).join(", '|;|', ")})))`}return"COUNT(DISTINCT("+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(" || '|;|' || ")+"))"}async executeCountQuery(e){const t=this.computeCountExpression(),n=await this.clone().orderBy().groupBy().offset(void 0).limit(void 0).skip(void 0).take(void 0).select(t,"cnt").setOption("disable-global-order").loadRawResults(e);return n&&n[0]&&n[0].cnt?parseInt(n[0].cnt):0}applyFindOptions(){if(this.expressionMap.mainAlias.metadata){if(this.findOptions.relationLoadStrategy&&(this.expressionMap.relationLoadStrategy=this.findOptions.relationLoadStrategy),this.findOptions.comment&&this.comment(this.findOptions.comment),this.findOptions.withDeleted&&this.withDeleted(),this.findOptions.select){const e=Array.isArray(this.findOptions.select)?a.s.propertyPathsToTruthyObject(this.findOptions.select):this.findOptions.select;this.buildSelect(e,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name)}if(this.selects.length&&this.select(this.selects),this.selects=[],this.findOptions.relations){const e=Array.isArray(this.findOptions.relations)?a.s.propertyPathsToTruthyObject(this.findOptions.relations):this.findOptions.relations;this.buildRelations(e,"object"==typeof this.findOptions.select?this.findOptions.select:void 0,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),!1!==this.findOptions.loadEagerRelations&&"join"===this.expressionMap.relationLoadStrategy&&this.buildEagerRelations(e,"object"==typeof this.findOptions.select?this.findOptions.select:void 0,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name)}if(this.selects.length&&this.addSelect(this.selects),this.findOptions.where&&(this.conditions=this.buildWhere(this.findOptions.where,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),this.conditions.length&&this.andWhere("("!==this.conditions.substr(0,1)?"("+this.conditions+")":this.conditions)),this.findOptions.order&&this.buildOrder(this.findOptions.order,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),this.joins.length&&this.joins.forEach((e=>{e.select&&!e.selection?"inner"===e.type?this.innerJoinAndSelect(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):this.leftJoinAndSelect(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):"inner"===e.type?this.innerJoin(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):this.leftJoin(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias)})),void 0!==this.findOptions.skip&&this.skip(this.findOptions.skip),void 0!==this.findOptions.take&&this.take(this.findOptions.take),"number"==typeof this.findOptions.cache||"boolean"==typeof this.findOptions.cache?this.cache(this.findOptions.cache):"object"==typeof this.findOptions.cache&&this.cache(this.findOptions.cache.id,this.findOptions.cache.milliseconds),this.findOptions.join&&(this.findOptions.join.leftJoin&&Object.keys(this.findOptions.join.leftJoin).forEach((e=>{this.leftJoin(this.findOptions.join.leftJoin[e],e)})),this.findOptions.join.innerJoin&&Object.keys(this.findOptions.join.innerJoin).forEach((e=>{this.innerJoin(this.findOptions.join.innerJoin[e],e)})),this.findOptions.join.leftJoinAndSelect&&Object.keys(this.findOptions.join.leftJoinAndSelect).forEach((e=>{this.leftJoinAndSelect(this.findOptions.join.leftJoinAndSelect[e],e)})),this.findOptions.join.innerJoinAndSelect&&Object.keys(this.findOptions.join.innerJoinAndSelect).forEach((e=>{this.innerJoinAndSelect(this.findOptions.join.innerJoinAndSelect[e],e)}))),this.findOptions.lock)if("optimistic"===this.findOptions.lock.mode)this.setLock(this.findOptions.lock.mode,this.findOptions.lock.version);else if("pessimistic_read"===this.findOptions.lock.mode||"pessimistic_write"===this.findOptions.lock.mode||"dirty_read"===this.findOptions.lock.mode||"pessimistic_partial_write"===this.findOptions.lock.mode||"pessimistic_write_or_fail"===this.findOptions.lock.mode||"for_no_key_update"===this.findOptions.lock.mode||"for_key_share"===this.findOptions.lock.mode){const e=this.findOptions.lock.tables?this.findOptions.lock.tables.map((e=>{const t=this.expressionMap.aliases.find((t=>t.metadata.tableNameWithoutPrefix===e));if(!t)throw new E.K_(`"${e}" is not part of this query`);return this.escape(t.name)})):void 0;this.setLock(this.findOptions.lock.mode,void 0,e)}!0===this.findOptions.loadRelationIds?this.loadAllRelationIds():"object"==typeof this.findOptions.loadRelationIds&&this.loadAllRelationIds(this.findOptions.loadRelationIds),!1!==this.findOptions.loadEagerRelations&&T.Z.joinEagerRelations(this,this.expressionMap.mainAlias.name,this.expressionMap.mainAlias.metadata),!0===this.findOptions.transaction&&(this.expressionMap.useTransaction=!0)}}async executeEntitiesAndRawResults(e){if(!this.expressionMap.mainAlias)throw new E.K_('Alias is not set. Use "from" method to set an alias.');if(("pessimistic_read"===this.expressionMap.lockMode||"pessimistic_write"===this.expressionMap.lockMode||"pessimistic_partial_write"===this.expressionMap.lockMode||"pessimistic_write_or_fail"===this.expressionMap.lockMode||"for_no_key_update"===this.expressionMap.lockMode||"for_key_share"===this.expressionMap.lockMode)&&!e.isTransactionActive)throw new r.G;if("optimistic"===this.expressionMap.lockMode){const e=this.expressionMap.mainAlias.metadata;if(!e.versionColumn&&!e.updateDateColumn)throw new o.f(e.name)}const t=new RelationIdLoader(this.connection,e,this.expressionMap.relationIdAttributes),n=new RelationCountLoader(this.connection,e,this.expressionMap.relationCountAttributes);new RelationIdMetadataToAttributeTransformer(this.expressionMap).transform();new RelationCountMetadataToAttributeTransformer(this.expressionMap).transform();let s=[],c=[];if((this.expressionMap.skip||this.expressionMap.take)&&this.expressionMap.joinAttributes.length>0){const[t,n]=this.createOrderByCombinedWithSelectExpression("distinctAlias"),a=this.expressionMap.mainAlias.metadata,r=this.expressionMap.mainAlias.name,o=a.primaryColumns.map((e=>{const t=this.escape("distinctAlias"),a=this.escape(i.z.buildAlias(this.connection.driver,r,e.databaseName));n[a]||(n[a]="ASC");const s=i.z.buildAlias(this.connection.driver,"ids_"+r,e.databaseName);return`${t}.${a} AS ${this.escape(s)}`}));if(s=await new SelectQueryBuilder(this.connection,e).select(`DISTINCT ${o.join(", ")}`).addSelect(t).from(`(${this.clone().orderBy().getQuery()})`,"distinctAlias").offset(this.expressionMap.skip).limit(this.expressionMap.take).orderBy(n).cache(this.expressionMap.cache?this.expressionMap.cache:this.expressionMap.cacheId,this.expressionMap.cacheDuration).setParameters(this.getParameters()).setNativeParameters(this.expressionMap.nativeParameters).getRawMany(),s.length>0){let t="";const n={};if(a.hasMultiplePrimaryKeys)t=s.map(((e,t)=>a.primaryColumns.map((a=>{const i=`orm_distinct_ids_${t}_${a.databaseName}`;return n[i]=e[`ids_${r}_${a.databaseName}`],`${r}.${a.propertyPath}=:${i}`})).join(" AND "))).join(" OR ");else{const e=i.z.buildAlias(this.connection.driver,"ids_"+r,a.primaryColumns[0].databaseName),o=s.map((t=>t[e]));o.every((e=>"number"==typeof e))?t=`${r}.${a.primaryColumns[0].propertyPath} IN (${o.join(", ")})`:(n.orm_distinct_ids=o,t=r+"."+a.primaryColumns[0].propertyPath+" IN (:...orm_distinct_ids)")}s=await this.clone().mergeExpressionMap({extraAppendedAndWhereCondition:t}).setParameters(n).loadRawResults(e)}}else s=await this.loadRawResults(e);if(s.length>0){const a=await t.load(s),i=await n.load(s),r=new RawSqlResultsToEntityTransformer(this.expressionMap,this.connection.driver,a,i,this.queryRunner);c=r.transform(s,this.expressionMap.mainAlias),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("Load",this.expressionMap.mainAlias.metadata,c)}return"query"===this.expressionMap.relationLoadStrategy&&await Promise.all(this.relationMetadatas.map((async e=>{const t=e.inverseEntityMetadata.target,n=e.inverseEntityMetadata.targetName,i=Array.isArray(this.findOptions.select)?a.s.propertyPathsToTruthyObject(this.findOptions.select):this.findOptions.select,s=Array.isArray(this.findOptions.relations)?a.s.propertyPathsToTruthyObject(this.findOptions.relations):this.findOptions.relations,r=this.createQueryBuilder().select(n).from(t,n).setFindOptions({select:i?a.s.deepValue(i,e.propertyPath):void 0,order:this.findOptions.order?a.s.deepValue(this.findOptions.order,e.propertyPath):void 0,relations:s?a.s.deepValue(s,e.propertyPath):void 0,withDeleted:this.findOptions.withDeleted,relationLoadStrategy:this.findOptions.relationLoadStrategy});if(c.length>0){const t=await this.connection.relationIdLoader.loadManyToManyRelationIdsAndGroup(e,c,void 0,r);c.forEach((n=>{const a=t.find((e=>e.entity===n));if(a){const t=void 0===a.related?null:a.related;e.setEntityValue(n,t)}}))}}))),{raw:s,entities:c}}createOrderByCombinedWithSelectExpression(e){const t=this.expressionMap.allOrderBys,n=Object.keys(t).map((t=>{if(-1!==t.indexOf(".")){const n=t.split("."),a=n[0],s=n.slice(1).join("."),r=this.expressionMap.findAliasByName(a).metadata.findColumnWithPropertyPath(s);return this.escape(e)+"."+this.escape(i.z.buildAlias(this.connection.driver,a,r.databaseName))}return this.expressionMap.selects.find((e=>e.selection===t||e.aliasName===t))?this.escape(e)+"."+t:""})).join(", "),a={};return Object.keys(t).forEach((n=>{if(-1!==n.indexOf(".")){const s=n.split("."),r=s[0],o=s.slice(1).join("."),c=this.expressionMap.findAliasByName(r).metadata.findColumnWithPropertyPath(o);a[this.escape(e)+"."+this.escape(i.z.buildAlias(this.connection.driver,r,c.databaseName))]=t[n]}else this.expressionMap.selects.find((e=>e.selection===n||e.aliasName===n))?a[this.escape(e)+"."+n]=t[n]:a[n]=t[n]})),[n,a]}async loadRawResults(e){const[t,n]=this.getQueryAndParameters(),a=t+" -- PARAMETERS: "+JSON.stringify(n),i="object"==typeof this.connection.options.cache?this.connection.options.cache:{};let s,r=!1;if(this.connection.queryResultCache&&(this.expressionMap.cache||i.alwaysEnabled))try{if(s=await this.connection.queryResultCache.getFromCache({identifier:this.expressionMap.cacheId,query:a,duration:this.expressionMap.cacheDuration||i.duration||1e3},e),s&&!this.connection.queryResultCache.isExpired(s))return JSON.parse(s.result)}catch(e){if(!i.ignoreErrors)throw e;r=!0}const o=await e.query(t,n,!0);if(!r&&this.connection.queryResultCache&&(this.expressionMap.cache||i.alwaysEnabled))try{await this.connection.queryResultCache.storeInCache({identifier:this.expressionMap.cacheId,query:a,time:(new Date).getTime(),duration:this.expressionMap.cacheDuration||i.duration||1e3,result:JSON.stringify(o.records)},s,e)}catch(e){if(!i.ignoreErrors)throw e}return o.records}mergeExpressionMap(e){return s.g.assign(this.expressionMap,e),this}normalizeNumber(e){return"number"==typeof e||null==e?e:Number(e)}obtainQueryRunner(){return this.queryRunner||this.connection.createQueryRunner("slave")}buildSelect(e,t,n,a){for(let i in e){if(void 0===e[i]||!1===e[i])continue;const s=a?a+"."+i:i,r=t.findColumnWithPropertyPathStrict(s),o=t.findEmbeddedWithPropertyPath(s),c=t.findRelationWithPropertyPath(s);if(!o&&!r&&!c)throw new N.B(s,t);r?this.selects.push(n+"."+s):o&&this.buildSelect(e[i],t,n,i)}}buildRelations(e,t,n,s,r){e&&Object.keys(e).forEach((o=>{const c=e[o],l=r?r+"."+o:o,u=n.findEmbeddedWithPropertyPath(l),h=n.findRelationWithPropertyPath(l);if(!u&&!h)throw new N.B(l,n);if(u)this.buildRelations(c,"object"==typeof t?a.s.deepValue(t,u.propertyPath):void 0,n,s,l);else if(h){let e=s+"_"+l.replace(".","_");e=i.z.buildAlias(this.connection.driver,{joiner:"__"},s,e),!0!==c&&"object"!=typeof c||("query"===this.expressionMap.relationLoadStrategy?this.relationMetadatas.push(h):(this.joins.push({type:"left",select:!0,selection:t&&"object"==typeof t[o]?t[o]:void 0,alias:e,parentAlias:s,relationMetadata:h}),t&&"object"==typeof t[o]&&this.buildSelect(t[o],h.inverseEntityMetadata,e))),"object"==typeof c&&"join"===this.expressionMap.relationLoadStrategy&&this.buildRelations(c,"object"==typeof t?a.s.deepValue(t,h.propertyPath):void 0,h.inverseEntityMetadata,e,void 0)}}))}buildEagerRelations(e,t,n,s,r){e&&Object.keys(e).forEach((o=>{const c=e[o],l=r?r+"."+o:o,u=n.findEmbeddedWithPropertyPath(l),h=n.findRelationWithPropertyPath(l);if(!u&&!h)throw new N.B(l,n);if(u)this.buildEagerRelations(c,"object"==typeof t?a.s.deepValue(t,u.propertyPath):void 0,n,s,l);else if(h){let e=s+"_"+l.replace(".","_");e=i.z.buildAlias(this.connection.driver,{joiner:"__"},s,e),!0!==c&&"object"!=typeof c||h.inverseEntityMetadata.eagerRelations.forEach((n=>{let a=e+"_"+n.propertyPath.replace(".","_");a=i.z.buildAlias(this.connection.driver,{joiner:"__"},e,a);this.joins.find((e=>e.alias===a))||this.joins.push({type:"left",select:!0,alias:a,parentAlias:e,selection:void 0,relationMetadata:n}),t&&"object"==typeof t[o]&&this.buildSelect(t[o],h.inverseEntityMetadata,e)})),"object"==typeof c&&this.buildEagerRelations(c,"object"==typeof t?a.s.deepValue(t,h.propertyPath):void 0,h.inverseEntityMetadata,e,void 0)}}))}buildOrder(e,t,n,a){for(let s in e){if(void 0===e[s])continue;const r=a?a+"."+s:s,o=t.findColumnWithPropertyPathStrict(r),c=t.findEmbeddedWithPropertyPath(r),l=t.findRelationWithPropertyPath(r);if(!c&&!o&&!l)throw new N.B(r,t);if(o){let t="object"==typeof e[s]?e[s].direction:e[s];t="DESC"===t||"desc"===t||-1===t?"DESC":"ASC";let a="object"==typeof e[s]?e[s].nulls:void 0;a="first"===a?"NULLS FIRST":"last"===a?"NULLS LAST":void 0,this.addOrderBy(`${n}.${r}`,t,a)}else if(c)this.buildOrder(e[s],t,n,r);else if(l){let t=n+"_"+r.replace(".","_");t=i.z.buildAlias(this.connection.driver,{joiner:"__"},n,t);this.joins.find((e=>e.alias===t))||this.joins.push({type:"left",select:!1,alias:t,parentAlias:n,selection:void 0,relationMetadata:l}),this.buildOrder(e[s],l.inverseEntityMetadata,t)}}}buildWhere(e,t,n,a){let s="";if(Array.isArray(e))s="("+e.map((e=>this.buildWhere(e,t,n,a))).filter((e=>!!e)).map((e=>"("+e+")")).join(" OR ")+")";else{let r=[];for(let s in e){if(void 0===e[s]||null===e[s])continue;const o=a?a+"."+s:s,c=t.findColumnWithPropertyPathStrict(o),l=t.findEmbeddedWithPropertyPath(o),u=t.findRelationWithPropertyPath(o);if(!l&&!c&&!u)throw new N.B(o,t);if(c){const t=`${n}.${o}`;let a=e[s];w.a.isEqualOperator(e[s])&&(a=e[s].value),c.transformer&&(a=b.A.transformTo(c.transformer,a)),r.push(this.createWhereConditionExpression(this.getWherePredicateCondition(t,a)))}else if(l){const a=this.buildWhere(e[s],t,n,o);a&&r.push(a)}else if(u){if("object"==typeof e[s]){if(Object.keys(e[s]).every((t=>void 0===e[s][t])))continue}if(w.a.isFindOperator(e[s])){if("moreThan"===e[s].type||"lessThan"===e[s].type){const t="moreThan"===e[s].type?">":"<",a=this.subQuery();if(u.isManyToManyOwner)a.select("COUNT(*)").from(u.joinTableName,u.joinTableName).where(u.joinColumns.map((e=>`${u.joinTableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "));else if(u.isManyToManyNotOwner)a.select("COUNT(*)").from(u.inverseRelation.joinTableName,u.inverseRelation.joinTableName).where(u.inverseRelation.inverseJoinColumns.map((e=>`${u.inverseRelation.joinTableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "));else{if(!u.isOneToMany)throw new Error("This relation isn't supported by given find operator");a.select("COUNT(*)").from(u.inverseEntityMetadata.target,u.inverseEntityMetadata.tableName).where(u.inverseRelation.joinColumns.map((e=>`${u.inverseEntityMetadata.tableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "))}this.andWhere(a.getSql()+" "+t+" "+parseInt(e[s].value))}}else{let t=n+"_"+u.propertyPath.replace(".","_");t=i.z.buildAlias(this.connection.driver,{joiner:"__"},n,t);const a=this.joins.find((e=>e.alias===t));a?"left"===a.type&&(a.type="inner"):this.joins.push({type:"inner",select:!1,selection:void 0,alias:t,parentAlias:n,relationMetadata:u});const o=this.buildWhere(e[s],u.inverseEntityMetadata,t);o&&r.push(o)}}}s=r.join(" AND ")}return s}}},7302:(e,t,n)=>{"use strict";n.d(t,{B:()=>SoftDeleteQueryBuilder});var a=n(5627),i=n(1568),s=n(581),r=n(6120),o=n(2270),c=n(6723),l=n(210),u=n(1507),h=n(7677),d=n(7378);class SoftDeleteQueryBuilder extends a.z{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("SoftDeleteQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createUpdateExpression();return e+=this.createCteExpression(),e+=this.createOrderByExpression(),e+=this.createLimitExpression(),e.trim()}async execute(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&("soft-delete"===this.expressionMap.queryType?await e.broadcaster.broadcast("BeforeSoftRemove",this.expressionMap.mainAlias.metadata):"restore"===this.expressionMap.queryType&&await e.broadcaster.broadcast("BeforeRecover",this.expressionMap.mainAlias.metadata));const n=new r.v(e,this.expressionMap);!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&(this.expressionMap.extraReturningColumns=n.getSoftDeletionReturningColumns());const[a,s]=this.getQueryAndParameters(),o=await e.query(a,s,!0),c=i.s.from(o);return!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&await n.update(c,this.expressionMap.whereEntities),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&("soft-delete"===this.expressionMap.queryType?await e.broadcaster.broadcast("AfterSoftRemove",this.expressionMap.mainAlias.metadata):"restore"===this.expressionMap.queryType&&await e.broadcaster.broadcast("AfterRecover",this.expressionMap.mainAlias.metadata)),t&&await e.commitTransaction(),c}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}from(e,t){e=d.a.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("update"))throw new s.y;return this.expressionMap.returning=e,this}orderBy(e,t="ASC",n){return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){return this.expressionMap.limit=e,this}whereEntity(e){if(!this.expressionMap.mainAlias.hasMetadata)throw new u.K_(".whereEntity method can only be used on queries which update real entity table.");this.expressionMap.wheres=[];const t=Array.isArray(e)?e:[e];return t.forEach((e=>{const t=this.expressionMap.mainAlias.metadata.getEntityIdMap(e);if(!t)throw new u.K_("Provided entity does not have ids set, cannot perform operation.");this.orWhereInIds(t)})),this.expressionMap.whereEntities=t,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}createUpdateExpression(){const e=this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata:void 0;if(!e)throw new u.K_(`Cannot get entity metadata for the given alias "${this.expressionMap.mainAlias}"`);if(!e.deleteDateColumn)throw new c.d(e);const t=[];switch(this.expressionMap.queryType){case"soft-delete":t.push(this.escape(e.deleteDateColumn.databaseName)+" = CURRENT_TIMESTAMP");break;case"restore":t.push(this.escape(e.deleteDateColumn.databaseName)+" = NULL");break;default:throw new u.K_('The queryType must be "soft-delete" or "restore"')}if(e.versionColumn&&t.push(this.escape(e.versionColumn.databaseName)+" = "+this.escape(e.versionColumn.databaseName)+" + 1"),e.updateDateColumn&&t.push(this.escape(e.updateDateColumn.databaseName)+" = CURRENT_TIMESTAMP"),t.length<=0)throw new l.y;const n=this.createWhereExpression(),a=this.createReturningExpression("update");return""===a?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")}${n}`:"mssql"===this.connection.driver.options.type?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")} OUTPUT ${a}${n}`:`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")}${n} RETURNING ${a}`}createOrderByExpression(){const e=this.expressionMap.orderBys;return Object.keys(e).length>0?" ORDER BY "+Object.keys(e).map((t=>"string"==typeof e[t]?this.replacePropertyNames(t)+" "+e[t]:this.replacePropertyNames(t)+" "+e[t].order+" "+e[t].nulls)).join(", "):""}createLimitExpression(){let e=this.expressionMap.limit;if(e){if(h.z.isMySQLFamily(this.connection.driver))return" LIMIT "+e;throw new o.T}return""}}},8394:(e,t,n)=>{"use strict";n.d(t,{T:()=>UpdateQueryBuilder});var a=n(5627),i=n(1568),s=n(581),r=n(6120),o=n(2270),c=n(210),l=n(1507),u=n(1962),h=n(7677);class UpdateQueryBuilder extends a.z{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("UpdateQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createUpdateExpression(),e+=this.createOrderByExpression(),e+=this.createLimitExpression(),e.trim()}async execute(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("BeforeUpdate",this.expressionMap.mainAlias.metadata,this.expressionMap.valuesSet);let n=null,a=null;const s=new r.v(e,this.expressionMap),o=[];if(Array.isArray(this.expressionMap.returning)&&this.expressionMap.mainAlias.hasMetadata)for(const e of this.expressionMap.returning)o.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(e));!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&(this.expressionMap.extraReturningColumns=s.getUpdationReturningColumns(),o.push(...this.expressionMap.extraReturningColumns.filter((e=>!o.includes(e))))),o.length>0&&"mssql"===this.connection.driver.options.type&&(n=this.connection.driver.buildTableVariableDeclaration("@OutputTable",o),a="SELECT * FROM @OutputTable");const[c,l]=this.getQueryAndParameters(),u=[n,c,a],h=await e.query(u.filter((e=>null!=e)).join(";\n\n"),l,!0),d=i.s.from(h);return!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&await s.update(d,this.expressionMap.whereEntities),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("AfterUpdate",this.expressionMap.mainAlias.metadata,this.expressionMap.valuesSet),t&&await e.commitTransaction(),d}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}set(e){return this.expressionMap.valuesSet=e,this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("update"))throw new s.y;return this.expressionMap.returning=e,this}orderBy(e,t="ASC",n){return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){return this.expressionMap.limit=e,this}whereEntity(e){if(!this.expressionMap.mainAlias.hasMetadata)throw new l.K_(".whereEntity method can only be used on queries which update real entity table.");this.expressionMap.wheres=[];const t=Array.isArray(e)?e:[e];return t.forEach((e=>{const t=this.expressionMap.mainAlias.metadata.getEntityIdMap(e);if(!t)throw new l.K_("Provided entity does not have ids set, cannot perform operation.");this.orWhereInIds(t)})),this.expressionMap.whereEntities=t,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}createUpdateExpression(){const e=this.getValueSet(),t=this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata:void 0,n={};for(let t in e)void 0!==e[t]&&(n[t]=e[t]);const a=[],i=[];if(t?(this.createPropertyPath(t,n).forEach((e=>{const s=t.findColumnsWithPropertyPath(e);if(s.length<=0)throw new u.B(e,t);s.forEach((e=>{if(!e.isUpdate||i.includes(e))return;i.push(e);let t=e.getEntityValue(n);if(e.referencedColumn&&"object"==typeof t&&null!==t&&!Buffer.isBuffer(t)?t=e.referencedColumn.getEntityValue(t):"function"!=typeof t&&(t=this.connection.driver.preparePersistentValue(t,e)),"function"==typeof t)a.push(this.escape(e.databaseName)+" = "+t());else if("sap"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type||null!==t){"mssql"===this.connection.driver.options.type&&(t=this.connection.driver.parametrizeValue(e,t));const n=this.createParameter(t);let i=null;if(!h.z.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||-1===this.connection.driver.spatialTypes.indexOf(e.type))i="postgres"===this.connection.driver.options.type&&-1!==this.connection.driver.spatialTypes.indexOf(e.type)?null!=e.srid?`ST_SetSRID(ST_GeomFromGeoJSON(${n}), ${e.srid})::${e.type}`:`ST_GeomFromGeoJSON(${n})::${e.type}`:"mssql"===this.connection.driver.options.type&&-1!==this.connection.driver.spatialTypes.indexOf(e.type)?e.type+"::STGeomFromText("+n+", "+(e.srid||"0")+")":n;else{const t=this.connection.driver.options.legacySpatialSupport?"GeomFromText":"ST_GeomFromText";i=null!=e.srid?`${t}(${n}, ${e.srid})`:`${t}(${n})`}a.push(this.escape(e.databaseName)+" = "+i)}else a.push(this.escape(e.databaseName)+" = NULL")}))})),(a.length>0||0===Object.keys(n).length)&&(t.versionColumn&&-1===i.indexOf(t.versionColumn)&&a.push(this.escape(t.versionColumn.databaseName)+" = "+this.escape(t.versionColumn.databaseName)+" + 1"),t.updateDateColumn&&-1===i.indexOf(t.updateDateColumn)&&a.push(this.escape(t.updateDateColumn.databaseName)+" = CURRENT_TIMESTAMP"))):Object.keys(n).map((e=>{let t=n[e];if("function"==typeof t)a.push(this.escape(e)+" = "+t());else if("sap"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type||null!==t){const n=this.createParameter(t);a.push(this.escape(e)+" = "+n)}else a.push(this.escape(e)+" = NULL")})),a.length<=0)throw new c.y;const s=this.createWhereExpression(),r=this.createReturningExpression("update");return""===r?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")}${s}`:"mssql"===this.connection.driver.options.type?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")} OUTPUT ${r}${s}`:`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")}${s} RETURNING ${r}`}createOrderByExpression(){const e=this.expressionMap.orderBys;return Object.keys(e).length>0?" ORDER BY "+Object.keys(e).map((t=>"string"==typeof e[t]?this.replacePropertyNames(t)+" "+e[t]:this.replacePropertyNames(t)+" "+e[t].order+" "+e[t].nulls)).join(", "):""}createLimitExpression(){let e=this.expressionMap.limit;if(e){if(h.z.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type)return" LIMIT "+e;throw new o.T}return""}getValueSet(){if("object"==typeof this.expressionMap.valuesSet)return this.expressionMap.valuesSet;throw new c.y}}},58:(e,t,n)=>{"use strict";n.d(t,{$:()=>RelationCountAttribute});var a=n(2749),i=n(7264),s=n(5066);class RelationCountAttribute{constructor(e,t){this.expressionMap=e,i.g.assign(this,t||{})}get joinInverseSideMetadata(){return this.relation.inverseEntityMetadata}get parentAlias(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value must be a string representation of alias property");return this.relationName.split(".")[0]}get relationProperty(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value is a string representation of alias property");return this.relationName.split(".")[1]}get junctionAlias(){const[e,t]=this.relationName.split(".");return e+"_"+t+"_rc"}get relation(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value is a string representation of alias property");const[e,t]=this.relationName.split("."),n=this.expressionMap.findAliasByName(e).metadata.findRelationWithPropertyPath(t);if(!n)throw new s.K(`Relation with property path ${t} in entity was not found.`);return n}get metadata(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value is a string representation of alias property");const e=this.relationName.split(".")[0];return this.expressionMap.findAliasByName(e).metadata}get mapToPropertyPropertyName(){return this.mapToProperty.split(".")[1]}}},6869:(e,t,n)=>{"use strict";n.d(t,{b:()=>RelationIdAttribute});var a=n(2749),i=n(7264),s=n(5066);class RelationIdAttribute{constructor(e,t){this.queryExpressionMap=e,this.disableMixedMap=!1,i.g.assign(this,t||{})}get joinInverseSideMetadata(){return this.relation.inverseEntityMetadata}get parentAlias(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value must be a string representation of alias property");return this.relationName.substr(0,this.relationName.indexOf("."))}get relationPropertyPath(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value must be a string representation of alias property");return this.relationName.substr(this.relationName.indexOf(".")+1)}get relation(){if(!a.G.isAliasProperty(this.relationName))throw new s.K("Given value must be a string representation of alias property");const e=this.queryExpressionMap.findAliasByName(this.parentAlias).metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(!e)throw new s.K(`Relation with property path ${this.relationPropertyPath} in entity was not found.`);return e}get junctionAlias(){const[e,t]=this.relationName.split(".");return e+"_"+t+"_rid"}get junctionMetadata(){return this.relation.junctionEntityMetadata}get mapToPropertyParentAlias(){return this.mapToProperty.substr(0,this.mapToProperty.indexOf("."))}get mapToPropertyPropertyPath(){return this.mapToProperty.substr(this.mapToProperty.indexOf(".")+1)}}},1568:(e,t,n)=>{"use strict";n.d(t,{s:()=>UpdateResult});class UpdateResult{constructor(){this.generatedMaps=[]}static from(e){const t=new this;return t.raw=e.records,t.affected=e.affected,t}}},1444:(e,t,n)=>{"use strict";n.d(t,{D:()=>BroadcasterResult});class BroadcasterResult{constructor(){this.count=0,this.promises=[]}async wait(){return this.promises.length>0&&await Promise.all(this.promises),this}}},8535:(e,t,n)=>{"use strict";n.d(t,{A:()=>ApplyValueTransformers});class ApplyValueTransformers{static transformFrom(e,t){if(Array.isArray(e)){return e.slice().reverse().reduce(((e,t)=>t.from(e)),t)}return e.from(t)}static transformTo(e,t){return Array.isArray(e)?e.reduce(((e,t)=>t.to(e)),t):e.to(t)}}},7378:(e,t,n)=>{"use strict";n.d(t,{a:()=>InstanceChecker});class InstanceChecker{static isMssqlParameter(e){return this.check(e,"MssqlParameter")}static isEntityMetadata(e){return this.check(e,"EntityMetadata")}static isColumnMetadata(e){return this.check(e,"ColumnMetadata")}static isQueryBuilder(e){return this.check(e,"QueryBuilder")||this.check(e,"SelectQueryBuilder")||this.check(e,"InsertQueryBuilder")||this.check(e,"DeleteQueryBuilder")||this.check(e,"UpdateQueryBuilder")||this.check(e,"SoftDeleteQueryBuilder")||this.check(e,"RelationQueryBuilder")}static isSelectQueryBuilder(e){return this.check(e,"SelectQueryBuilder")}static isInsertQueryBuilder(e){return this.check(e,"InsertQueryBuilder")}static isDeleteQueryBuilder(e){return this.check(e,"DeleteQueryBuilder")}static isUpdateQueryBuilder(e){return this.check(e,"UpdateQueryBuilder")}static isSoftDeleteQueryBuilder(e){return this.check(e,"SoftDeleteQueryBuilder")}static isRelationQueryBuilder(e){return this.check(e,"RelationQueryBuilder")}static isBrackets(e){return this.check(e,"Brackets")||this.check(e,"NotBrackets")}static isNotBrackets(e){return this.check(e,"NotBrackets")}static isSubject(e){return this.check(e,"Subject")}static isRdbmsSchemaBuilder(e){return this.check(e,"RdbmsSchemaBuilder")}static isMongoEntityManager(e){return this.check(e,"MongoEntityManager")}static isSqljsEntityManager(e){return this.check(e,"SqljsEntityManager")}static isEntitySchema(e){return this.check(e,"EntitySchema")}static isBaseEntityConstructor(e){return"function"==typeof e&&"function"==typeof e.hasId&&"function"==typeof e.save&&"function"==typeof e.useDataSource}static isFindOperator(e){return this.check(e,"FindOperator")||this.check(e,"EqualOperator")}static isEqualOperator(e){return this.check(e,"EqualOperator")}static isQuery(e){return this.check(e,"Query")}static isTable(e){return this.check(e,"Table")}static isTableCheck(e){return this.check(e,"TableCheck")}static isTableColumn(e){return this.check(e,"TableColumn")}static isTableExclusion(e){return this.check(e,"TableExclusion")}static isTableForeignKey(e){return this.check(e,"TableForeignKey")}static isTableIndex(e){return this.check(e,"TableIndex")}static isTableUnique(e){return this.check(e,"TableUnique")}static isView(e){return this.check(e,"View")}static isDataSource(e){return this.check(e,"DataSource")}static check(e,t){return"object"==typeof e&&null!==e&&e["@instanceof"]===Symbol.for(t)}}},7264:(e,t,n)=>{"use strict";n.d(t,{g:()=>ObjectUtils});class ObjectUtils{static isObject(e){return null!==e&&"object"==typeof e}static assign(e,...t){for(const n of t)for(const t of Object.getOwnPropertyNames(n))e[t]=n[t]}static mixedListToArray(e){return null!==e&&"object"==typeof e?Object.keys(e).map((t=>e[t])):e}}},5738:(e,t,n)=>{"use strict";n.d(t,{s:()=>OrmUtils});class OrmUtils{static chunk(e,t){return Array.from(Array(Math.ceil(e.length/t)),((n,a)=>e.slice(a*t,a*t+t)))}static splitClassesAndStrings(e){return[e.filter((e=>"string"!=typeof e)),e.filter((e=>"string"==typeof e))]}static groupBy(e,t){return e.reduce(((e,n)=>{const a=t(n);let i=e.find((e=>e.id===a));return i||(i={id:a,items:[]},e.push(i)),i.items.push(n),e}),[])}static uniq(e,t){return e.reduce(((e,n)=>{let a=!1;if("function"==typeof t){const i=t(n);a=!!e.find((e=>t(e)===i))}else a="string"==typeof t?!!e.find((e=>e[t]===n[t])):-1!==e.indexOf(n);return a||e.push(n),e}),[])}static isPlainObject(e){return null!=e&&(!e.constructor||e.constructor===Object)}static mergeArrayKey(e,t,n,a){a.has(n)?e[t]=a.get(n):n instanceof Promise||(this.isPlainObject(n)||Array.isArray(n)?(e[t]||(e[t]=Array.isArray(n)?[]:{}),a.set(n,e[t]),this.merge(e[t],n,a),a.delete(n)):e[t]=n)}static mergeObjectKey(e,t,n,a){a.has(n)?Object.assign(e,{[t]:a.get(n)}):n instanceof Promise||(this.isPlainObject(n)||Array.isArray(n)?(e[t]||Object.assign(e,{[t]:Array.isArray(n)?[]:{}}),a.set(n,e[t]),this.merge(e[t],n,a),a.delete(n)):Object.assign(e,{[t]:n}))}static merge(e,t,n=new Map){if(this.isPlainObject(e)&&this.isPlainObject(t))for(const a of Object.keys(t))this.mergeObjectKey(e,a,t[a],n);if(Array.isArray(e)&&Array.isArray(t))for(let a=0;a<t.length;a++)this.mergeArrayKey(e,a,t[a],n)}static mergeDeep(e,...t){if(!t.length)return e;for(const n of t)OrmUtils.merge(e,n);return e}static deepCompare(...e){let t,n,a,i;if(arguments.length<1)return!0;for(t=1,n=arguments.length;t<n;t++)if(a=[],i=[],!this.compare2Objects(a,i,arguments[0],arguments[t]))return!1;return!0}static deepValue(e,t){const n=t.split(".");for(let t=0,a=n.length;t<a;t++)e=e[n[t]];return e}static replaceEmptyObjectsWithBooleans(e){for(let t in e)e[t]&&"object"==typeof e[t]&&(0===Object.keys(e[t]).length?e[t]=!0:this.replaceEmptyObjectsWithBooleans(e[t]))}static propertyPathsToTruthyObject(e){let t={};for(let n of e){const e=n.split(".");if(!e.length)continue;t[e[0]]&&!0!==t[e[0]]||(t[e[0]]={});let a=t[e[0]];for(let[t,n]of e.entries())0!==t&&(a[n]?a=a[n]:t===e.length-1?(a[n]={},a=null):(a[n]={},a=a[n]))}return this.replaceEmptyObjectsWithBooleans(t),t}static compareIds(e,t){return null!=e&&null!=t&&(("string"==typeof e.id&&"string"==typeof t.id||"number"==typeof e.id&&"number"==typeof t.id)&&1===Object.keys(e).length&&1===Object.keys(t).length?e.id===t.id:OrmUtils.deepCompare(e,t))}static toBoolean(e){return"boolean"==typeof e?e:"string"==typeof e?"true"===e||"1"===e:"number"==typeof e&&e>0}static zipObject(e,t){return e.reduce(((e,n,a)=>(e[n]=t[a],e)),{})}static isArraysEqual(e,t){return e.length===t.length&&e.every((e=>-1!==t.indexOf(e)))}static areMutuallyExclusive(...e){return!e.some((t=>{const n=e.filter((e=>e!==t));return t.some((e=>n.some((t=>t.includes(e)))))}))}static compare2Objects(e,t,n,a){let i;if(Number.isNaN(n)&&Number.isNaN(a))return!0;if(n===a)return!0;if(null===n||null===a||void 0===n||void 0===a)return!1;if(("function"==typeof n.equals||"function"==typeof n.equals)&&n.equals(a))return!0;if("function"==typeof n&&"function"==typeof a||n instanceof Date&&a instanceof Date||n instanceof RegExp&&a instanceof RegExp||"string"==typeof n&&"string"==typeof a||"number"==typeof n&&"number"==typeof a)return n.toString()===a.toString();if("object"!=typeof n||"object"!=typeof a)return!1;if(n.isPrototypeOf(a)||a.isPrototypeOf(n))return!1;if(n.constructor!==a.constructor)return!1;if(n.prototype!==a.prototype)return!1;if(e.indexOf(n)>-1||t.indexOf(a)>-1)return!1;for(i in a){if(a.hasOwnProperty(i)!==n.hasOwnProperty(i))return!1;if(typeof a[i]!=typeof n[i])return!1}for(i in n){if(a.hasOwnProperty(i)!==n.hasOwnProperty(i))return!1;if(typeof a[i]!=typeof n[i])return!1;switch(typeof n[i]){case"object":case"function":if(e.push(n),t.push(a),!this.compare2Objects(e,t,n[i],a[i]))return!1;e.pop(),t.pop();break;default:if(n[i]!==a[i])return!1}}return!0}}},5022:(e,t,n)=>{"use strict";n.d(t,{OV:()=>c,Qs:()=>o,eV:()=>s,fu:()=>r,vp:()=>l});var a=n(9072),i=n.n(a);function s(e,t=!1){return e.replace(/^([A-Z])|[\s-_](\w)/g,(function(e,n,a,i){return!0===t&&0===i?n:a?a.toUpperCase():n.toLowerCase()}))}function r(e){return e.replace(/([A-Z])([A-Z])([a-z])/g,"$1_$2$3").replace(/([a-z0-9])([A-Z])/g,"$1_$2").toLowerCase()}function o(e){return e.replace(/\w\S*/g,(e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()))}function c(e,t={}){const{segmentLength:n=4,separator:a="__",termLength:i=2}=t;return e.split(a).reduce(((e,t)=>{const a=t.replace(/([a-z\xE0-\xFF])([A-Z\xC0-\xDF])/g,"$1 $2").split(" "),s=a.length>1?i:n,r=a.map((e=>e.substr(0,s))).join("");return e.push(r),e}),[]).join(a)}function l(e,t={}){const n=i()("sha256");n.update(e,"utf8");const a=n.digest("hex");return t.length?a.slice(0,t.length):a}},4586:(e,t,n)=>{"use strict";var a;n.d(t,{Z:()=>h});var i=new Uint8Array(16);function s(){if(!a&&!(a="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(i)}const r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const o=function(e){return"string"==typeof e&&r.test(e)};for(var c=[],l=0;l<256;++l)c.push((l+256).toString(16).substr(1));const u=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase();if(!o(n))throw TypeError("Stringified UUID is invalid");return n};const h=function(e,t,n){var a=(e=e||{}).random||(e.rng||s)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(var i=0;i<16;++i)t[n+i]=a[i];return t}return u(a)}}}]);